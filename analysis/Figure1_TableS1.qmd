---
title: "Figure 1 - Table S1"
author: "Connor Jops"
format: html
execute:
  cache: true
editor: source
editor_options:
  chunk_output_type: console
---

```{r}
library(tidyverse)
library(rtracklayer)
```

```{r}
theme_set(theme_bw())
theme_update(
  plot.title = element_text(size = rel(1.4), hjust = 0.5),
  axis.title = element_text(size = rel(1.2)),
  axis.text = element_text(color="black", size = rel(1)),
  legend.title = element_text(size = rel(1.2)),
  legend.text = element_text(color="black", size = rel(1)),
  strip.text = element_text(color="black", size = rel(1))
)
```

```{r}
cts = read_table("data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz")
cts = cts %>%
  mutate(
    VZ_209 = rowSums(across(matches("209_.*_VZ"))),
    VZ_334 = rowSums(across(matches("334_.*_VZ"))),
    VZ_336 = rowSums(across(matches("336_.*_VZ"))),
    CP_209 = rowSums(across(matches("209_.*_CP"))),
    CP_334 = rowSums(across(matches("334_.*_CP"))),
    CP_336 = rowSums(across(matches("336_.*_CP"))),
    .keep = "unused"
  ) %>%
  select(!c("gene_ID", "transcript_ID", "annot_transcript_name")) %>%
  dplyr::rename(
    gene_id = "annot_gene_id",
    transcript_id = "annot_transcript_id",
    gene_name = "annot_gene_name"
  ) %>%
  mutate(
    gene_novelty = as.factor(gene_novelty) %>% fct_infreq() %>% fct_relevel("Known"),
    transcript_novelty = as.factor(transcript_novelty)  %>% fct_infreq(),
    ISM_subtype = ISM_subtype %>% na_if("None") %>% factor(levels = c("Prefix", "Suffix", "Both"))
  )
cts
```

```{r}
talon_gtf = rtracklayer::import("data/cp_vz_0.75_min_7_recovery_talon.gtf.gz")
```

```{r}
talon_gtf = talon_gtf %>% as_tibble() %>% filter(type == "transcript")
```

```{r}
sqanti = read_tsv("data/sqanti/cp_vz_0.75_min_7_recovery_talon_classification.txt.gz")
```

External support used for TALON whitelist creation (some is from our initial
unfiltered run of SQANTI and some is from TALON scripts)

(there might be something wrong with this file - contains NAs)

```{r}
whitelist_support = read_tsv("data/cp_vz_unfiltered_external_support.tsv.gz")
whitelist_support
```

```{r}
sanity_check = whitelist_support %>% left_join(sqanti, by = c("annot_transcript_id" = "isoform"))
sanity_check %>% filter(within_CAGE_peak.x != within_CAGE_peak.y)
sanity_check %>% filter(is.na(within_CAGE_peak.x) & !within_CAGE_peak.y)
```

```{r}
support_for_plot = cts %>% select(transcript_id, transcript_novelty) %>%
  left_join(
    read_csv("data/within_CAGE/cpvz_refTSS_200_CAGE_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_CAGE_refTSS = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_CAGE/cpvz_fetal_200_CAGE_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_CAGE_fetal = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_Greenleaf_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_Greenleaf = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_Nowakowski_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_Nowakowski = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_LuisCP_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_LuisCP = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_LuisVZ_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_LuisGZ = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    sqanti %>% select(isoform, within_polyA_site, polyA_motif_found),
    by = c("transcript_id" = "isoform")
  ) %>%
  mutate(across(!c("transcript_id", "transcript_novelty"), ~replace_na(., F)))
support_for_plot
```

```{r}
support_for_plot2 = support_for_plot %>%
  group_by(transcript_novelty) %>%
  summarize(
#    any_5p = sum(within_CAGE_refTSS | within_CAGE_fetal | within_ATAC_Greenleaf | within_ATAC_Nowakowski, na.rm = T),
    within_CAGE_peak = sum(within_CAGE_refTSS | within_CAGE_fetal, na.rm = T),
    within_ATAC_peak = sum(within_ATAC_Greenleaf | within_ATAC_Nowakowski | within_ATAC_LuisCP | within_ATAC_LuisGZ, na.rm = T),
#    any_3p = sum(within_polyA_site | polyA_motif_found, na.rm = T),
    within_polyA_site = sum(within_polyA_site, na.rm = T),
    polyA_motif_found = sum(polyA_motif_found, na.rm = T),
    n = n()
  ) %>%
  pivot_longer(!c("transcript_novelty", "n")) %>%
  mutate(prop = value / n) %>%
  mutate(end = if_else(name %in% c("within_polyA_site", "polyA_motif_found", "any_3p"), "3′-end support", "5′-end support")) %>%
  mutate(end = end %>% factor(levels = c("5′-end support", "3′-end support"))) %>%
  mutate(name = name %>% as_factor()) %>%
  mutate(transcript_novelty = transcript_novelty %>% fct_relevel("Known") %>% fct_other(drop = c("Antisense", "Intergenic", "Genomic")))
support_for_plot2
```

```{r}
ggplot(support_for_plot2, aes(x = prop, y = transcript_novelty, fill = fct_rev(name))) +
  geom_col(position = "dodge") +
  scale_y_discrete(limits = rev) +
  scale_fill_manual(
    limits = c("within_CAGE_peak", "within_ATAC_peak", "within_polyA_site", "polyA_motif_found"),
    labels = c("CAGE", "ATAC-seq", "polyA site", "polyA motif"),
    values = c("#00bfc4", "#00a9ff", "#c77cff", "#ff61cc")
  ) +
  labs(
    x = "Proportion of transcripts",
    y = NULL,
    fill = NULL
  ) +
  guides(
    fill = guide_legend(ncol = 2)
  ) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "bottom",
    panel.spacing = unit(2, "lines"),
    plot.margin = margin(11, 11, 11, 11, "points")
  ) +
  facet_wrap(vars(end))
```

```{r}
#ggsave("output/figures/Fig1_external_support_v8.png", width = 11, height = 8.5, units = "in", dpi = 300)
ggsave("output/figures/Fig2/Fig2B_external_support_v2.pdf", width = 8, height = 6, units = "in", dpi = 300, device=cairo_pdf)
```

```{r}
tableS1 = talon_gtf %>%
  select(seqnames, start, end, strand, gene_id, gene_name, gene_status, gene_type, transcript_id, transcript_status, transcript_type) %>%
  left_join(
    cts %>% select(transcript_id, gene_novelty, transcript_novelty, ISM_subtype, n_exons, length),
    by = "transcript_id"
  ) %>%
  left_join(
    support_for_plot,
    by = c("transcript_id", "transcript_novelty")
  ) %>%
#  dplyr::rename(gencode_gene_type = "gene_type", gencode_transcript_type = "transcript_type") %>%
  relocate(gene_novelty, .after = gene_type) %>%
  mutate(
    within_CAGE_peak = within_CAGE_refTSS | within_CAGE_fetal,
    within_ATAC_peak = within_ATAC_Greenleaf | within_ATAC_Nowakowski | within_ATAC_LuisCP | within_ATAC_LuisGZ,
    .keep = "unused",
    .before = within_polyA_site
  )
tableS1
```

```{r}
tableS1 %>%
  write_tsv("output/tables/TableS1_v5.tsv.gz")
```

Numbers for manuscript text:

```{r}
tableS1 %>% count(transcript_status)

tableS1Novel1 = tableS1 %>%
  filter(transcript_novelty %in% c("NIC", "NNC"))

tableS1Novel1 %>%
  summarize(n = n(), n_genes = n_distinct(gene_id))

tableS1Novel2 = tableS1 %>%
  filter(transcript_novelty %in% c("NIC", "NNC", "ISM"))

tableS1Novel2 %>%
  count(within_CAGE_peak, within_ATAC_peak) %>%
  mutate(prop = n/nrow(tableS1Novel2))

tableS1Novel2 %>% count(within_CAGE_peak) %>% mutate(prop = n/nrow(tableS1Novel2))

tableS1Novel2 %>% count(within_ATAC_peak) %>% mutate(prop = n/nrow(tableS1Novel2))

tableS1Novel2 %>%
  count(within_polyA_site, polyA_motif_found) %>%
  mutate(prop = n/nrow(tableS1Novel2))

tableS1 %>%
  filter(transcript_novelty %in% c("Known", "ISM")) %>%
  count(transcript_novelty, within_polyA_site | polyA_motif_found)
```

Splice junctions from SQANTI:

```{r}
sqantiJunc = read_tsv("data/sqanti/cp_vz_0.75_min_7_recovery_talon_junctions.txt.gz")

uniqueJunc = sqantiJunc %>%
  group_by(chrom, strand, genomic_start_coord, genomic_end_coord) %>%
  summarize(
    n = sum(intropolis.v1.hg19.tsv.min_count_10_unique),
    intropolis_support = n > 0,
    novel = all(junction_category == "novel"),
    canonical = all(canonical == "canonical"),
    .groups = "drop"
  )

uniqueJunc %>% count(intropolis_support) %>% mutate(prop = n/nrow(uniqueJunc))
uniqueJunc %>% count(novel) %>% mutate(prop = n/nrow(uniqueJunc))

uniqueJunc %>% filter(novel) %>% count(intropolis_support) %>% mutate(prop = n/nrow(uniqueJunc %>% filter(novel)))
```

Problematic `spliceJns.txt` gives us 57.5% novel SJs:

```{r}
gencodeJuncOld = read_tsv("data/splice_junctions/spliceJns.problematic.txt", col_names = c("chrom", "genomic_start_coord", "genomic_end_coord", "strand")) %>%
  select(!starts_with("X")) %>%
  mutate(strand = case_when(strand == 1 ~ "+", strand == 2 ~ "-")) %>%
  mutate(novel2 = FALSE)

uniqueJunc2 = uniqueJunc %>% left_join(gencodeJuncOld) %>% mutate(novel2 = replace_na(novel2, TRUE))

uniqueJunc2 %>% count(novel2) %>% mutate(prop = n/nrow(uniqueJunc2))
```

Updated `spliceJns.txt` agrees with SQANTI:

```{r}
gencodeJunc = read_tsv("data/splice_junctions/spliceJns.exon_reorder.txt", col_names = c("chrom", "genomic_start_coord", "genomic_end_coord", "strand")) %>%
  select(!starts_with("X")) %>%
  mutate(strand = case_when(strand == 1 ~ "+", strand == 2 ~ "-")) %>%
  mutate(novel2 = FALSE)

uniqueJunc2 = uniqueJunc %>% left_join(gencodeJunc) %>% mutate(novel2 = replace_na(novel2, TRUE))

uniqueJunc2 %>% count(novel2) %>% mutate(prop = n/nrow(uniqueJunc2))
```

Joining with intropolis junctions also agrees with SQANTI:

```{r}
intropJunc = read_tsv("ref/intropolis/intropolis_v1_hg19_2samples_10counts_starSJout.tsv.gz", col_names = c("chrom", "genomic_start_coord", "genomic_end_coord", "strand")) %>%
  select(!starts_with("X")) %>%
  mutate(strand = case_when(strand == 1 ~ "+", strand == 2 ~ "-")) %>%
  mutate(intropolis_support2 = TRUE)

uniqueJunc2 = uniqueJunc %>%
  left_join(intropJunc) %>%
  mutate(intropolis_support2 = replace_na(intropolis_support2, FALSE))

uniqueJunc2 %>% count(intropolis_support2) %>% mutate(prop = n/nrow(uniqueJunc2))
```
