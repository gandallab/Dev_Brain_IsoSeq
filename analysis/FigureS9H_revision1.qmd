---
title: "Fig S9H REVISION1"
author: "Connor Jops"
execute:
  cache: true
editor: source
editor_options:
  chunk_output_type: console
  markdown: 
    wrap: 72
---

```{r}
suppressPackageStartupMessages({
  library(tidyverse)
  library(ggrepel)
  library(rtracklayer)
})
```

```{r}
base_size_pt = 15
theme_set(theme_gray(base_size = base_size_pt))
theme_update(
  plot.title = element_text(size = rel(1.4), hjust = 0.5),
  axis.title = element_text(size = rel(1.2)),
  axis.text = element_text(color="black", size = rel(1)),
  legend.title = element_text(size = rel(1.2)),
  legend.text = element_text(color="black", size = rel(1))
)
base_size_mm = base_size_pt * 25.4 / 72.27
```

```{r}
colors = c(
  "Known" = "#009E73",
  "ISM"   = "#0072B2",
  "ISM_Prefix" = "#0072B2",
  "ISM_Suffix" = "#0072B2",
  "ISM_Both"   = "#0072B2",
  "NIC"   = "#D55E00",
  "NNC"   = "#E69F00",
  "Other" = "#000000"
)
```

```{r}
talon_novelty_to_factor = function(df, split_ISMs = F, split_ISMs_include_both = F, make_other = T) {
  df = df %>%
    mutate(
      ISM_subtype = ISM_subtype %>% na_if("None")
    )
  levels_to_keep = c("Known", "ISM", "NIC", "NNC")
  if (split_ISMs) {
    df = df %>%
      mutate(
        transcript_novelty = if_else(
          is.na(ISM_subtype),
          transcript_novelty,
          str_c(transcript_novelty, ISM_subtype, sep = "_")
        )
      )
    if (split_ISMs_include_both | !make_other) {
      levels_to_keep = c("Known", "ISM_Prefix", "ISM_Suffix", "ISM_Both", "NIC", "NNC")
    } else {
      levels_to_keep = c("Known", "ISM_Prefix", "ISM_Suffix", "NIC", "NNC")
    }
  }
  if (make_other) {
    df = df %>%
      mutate(
        transcript_novelty = transcript_novelty %>%
          fct_other(keep = levels_to_keep) %>%
          fct_relevel(c(levels_to_keep, "Other"))
      )
  } else {
    df = df %>%
      mutate(
        transcript_novelty = transcript_novelty %>%
          fct_infreq() %>%
          fct_relevel(c(levels_to_keep))
      )
  }
  return(df)
}
```


```{r}
support_data = read_tsv(
  "data/Fig_S9H/Isoform_counts_4281_knownCells.tsv.gz",
  col_select = c(annot_transcript_id, transcript_novelty, ISM_subtype)
)
```

## TSS/TES from external

```{r}
TSS_support_external = read_tsv(
  "data/Fig_S9H/sciso_TSS_support_from_external.w_bulk.txt.gz",
  col_types = "ciic_cc",
  col_names = c("seqname", "start", "end", "transcript_id", "strand", "overlap")
)
```

```{r}
TES_support_external = read_tsv(
  "data/Fig_S9H/sciso_TES_support_from_external.w_bulk.txt.gz",
  col_types = "ciic_cc",
  col_names = c("seqname", "start", "end", "transcript_id", "strand", "overlap")
)
```

```{r}
support_data %>% count()
TSS_support_external %>% distinct() %>% count(overlap)
TES_support_external %>% distinct() %>% count(overlap)
```


```{r}
support_data2 = support_data %>%
  left_join(
    TSS_support_external %>%
      distinct() %>% # dups missed by command-line uniq?
      mutate(val = T) %>%
      pivot_wider(names_from = overlap, values_from = val) %>%
      mutate(across(ends_with(".bed"), ~!is.na(.x))) %>%
      select(transcript_id, ends_with(".bed")),
    by = c("annot_transcript_id" = "transcript_id")
  ) %>%
  left_join(
    TES_support_external %>%
      distinct() %>% # dups missed by command-line uniq?
      mutate(val = T) %>%
      pivot_wider(names_from = overlap, values_from = val) %>%
      mutate(across(ends_with(".bed"), ~!is.na(.x))) %>%
      select(transcript_id, ends_with(".bed")),
    by = c("annot_transcript_id" = "transcript_id")
  ) %>%
  mutate(across(ends_with(".bed"), ~!is.na(.x)))
```

```{r}
write_tsv(support_data2, "output/figures/revision1/scIso_TSS_TES_external_support.w_bulk.tsv")
```

```{r}
# Compute percentages
freqs = bind_rows(
  support_data2 %>%
    talon_novelty_to_factor(split_ISMs = T) %>%
    mutate(support = if_any(contains("first_exons"))) %>%
    dplyr::count(support, transcript_novelty) %>%
    group_by(transcript_novelty) %>%
    mutate(freq = n / sum(n), total = sum(n)) %>%
    mutate(percent = round(freq*100)) %>%
    mutate(percent = if_else(support, percent, NA_real_)) %>%
    mutate(tcolor_grp = factor(if_else(percent > 20, "white", "black"))) %>%
    mutate(support_type = "5' support in external+bulk"),
  support_data2 %>%
    talon_novelty_to_factor(split_ISMs = T) %>%
    mutate(support = if_any(contains("last_exons"))) %>%
    dplyr::count(support, transcript_novelty) %>%
    group_by(transcript_novelty) %>%
    mutate(freq = n / sum(n), total = sum(n)) %>%
    mutate(percent = round(freq*100)) %>%
    mutate(percent = if_else(support, percent, NA_real_)) %>%
    mutate(tcolor_grp = factor(if_else(percent > 20, "white", "black"))) %>%
    mutate(support_type = "3' support in external+bulk")
) %>% mutate(support_type = as_factor(support_type))

xlabel = "Isoform category"
ylabel = "Number of isoforms"
title  = "Isoforms in scIso-Seq"

ylabels = waiver()
ymax = 50000

label_pad = max(freqs$total)*.07
ggplot(freqs, aes(x = transcript_novelty %>% fct_rev(), y = n, fill = transcript_novelty,
                      alpha = support)) +
  geom_bar(stat="identity", color = "black") +
  xlab(xlabel) + ylab(ylabel) + ggtitle(title) +
  scale_fill_manual("", values = colors) +
  scale_alpha_manual(values=c(0,1), name = "CAGE support") +
  coord_flip(ylim=c(0,ymax)) + guides(fill="none", alpha = "none") +
  geom_text(aes(y = total + label_pad,
                label = paste0(percent, "%"), color = transcript_novelty),
                position = position_dodge(0), size = base_size_mm) +
  scale_color_manual(values = colors) +
  guides(colour="none", fill="none") +
  scale_x_discrete(labels = c("ISM_Prefix" = "ISM Prefix", "ISM_Suffix" = "ISM Suffix")) +
  scale_y_continuous(labels = ylabels, expand = c(0, 0)) +
  facet_grid(rows = vars(support_type)) +
  theme_bw(base_size = base_size_pt) +
  theme(axis.line.x = element_line(color="black", size = 0.5),
        axis.line.y = element_line(color="black", size = 0.5),
        axis.text.x = element_text(color="black", size = base_size_pt),
        axis.text.y = element_text(color="black", size = base_size_pt),
        axis.title.x = element_text(color="black", size = base_size_pt*1.2),
        axis.title.y = element_text(color="black", size = base_size_pt*1.2),
        strip.text = element_text(color="black", size = base_size_pt)) +
  theme(panel.grid.major = element_blank(),
        panel.grid.minor = element_blank())
```

```{r}
ggsave("output/figures/revision1/FigS9H_for_revision_w_bulk_split.pdf", width = 7.5, height = 6.5)
```

## Remake S9G split

```{r}
iso_types = support_data %>%
  talon_novelty_to_factor(split_ISMs = T) %>%
  count(transcript_novelty) %>%
  mutate(prop = n / sum(n))

ggplot(iso_types, aes(x = transcript_novelty, y = n, fill = transcript_novelty)) +
  geom_col() +
  geom_text(
    aes(label = scales::percent(prop, accuracy = 1)),
    vjust = 1.5,
    colour = "white",
    size = base_size_mm
  ) +
  scale_fill_manual(
    values = colors
  ) +
  scale_x_discrete(
    labels = c("ISM_Prefix" = "ISM\nPrefix", "ISM_Suffix" = "ISM\nSuffix")
  ) +
  guides(fill = "none") +
  xlab("Classification") +
  #ylab(expression(paste("Number of transcripts (x", 10^3, ")")))
  ylab("Number of isoforms")
```

```{r, eval=FALSE}
ggsave("output/figures/revision1/FigS9G_for_revision_split.pdf", width = 6, height = 5)
```

## sqanti/fig 1b on just single cell

```{r}
cts = read_table("data/Fig_S9H/scIsoseq_4kcells_final_talon_abundance_filtered.tsv.gz")
sqanti = read_tsv("data/Fig_S9H/scIsoseq_4kcells_final.talon.SQANTI3/scIsoseq_4kcells_final.talon_classification.txt.gz")
```

```{r}
theme_set(theme_bw())
theme_update(
  plot.title = element_text(size = rel(1.4), hjust = 0.5),
  axis.title = element_text(size = rel(1.2)),
  axis.text = element_text(color="black", size = rel(1)),
  legend.title = element_text(size = rel(1.2)),
  legend.text = element_text(color="black", size = rel(1)),
  strip.text = element_text(color="black", size = rel(1))
)
```

```{r}
support_for_plot = cts %>% select(transcript_id = annot_transcript_id, transcript_novelty, ISM_subtype) %>%
  left_join(
    read_csv("data/Fig_S9H/sc_refTSS_200_CAGE_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_CAGE_refTSS = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/Fig_S9H/sc_fetal_200_CAGE_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_CAGE_fetal = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/Fig_S9H/sc_Greenleaf_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_Greenleaf = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/Fig_S9H/sc_Nowakowski_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_Nowakowski = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/Fig_S9H/sc_LuisCP_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_LuisCP = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/Fig_S9H/sc_LuisVZ_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_LuisGZ = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    sqanti %>% select(isoform, within_polyA_site, polyA_motif_found),
    by = c("transcript_id" = "isoform")
  ) %>%
  mutate(across(!c("transcript_id", "transcript_novelty", "ISM_subtype"), replace_na, FALSE))
support_for_plot
```

```{r}
support_for_plot2 = support_for_plot %>%
  talon_novelty_to_factor(split_ISMs = T) %>%
  group_by(transcript_novelty) %>%
  summarize(
#    any_5p = sum(within_CAGE_refTSS | within_CAGE_fetal | within_ATAC_Greenleaf | within_ATAC_Nowakowski, na.rm = T),
    within_CAGE_peak = sum(within_CAGE_refTSS | within_CAGE_fetal, na.rm = T),
    within_ATAC_peak = sum(within_ATAC_Greenleaf | within_ATAC_Nowakowski | within_ATAC_LuisCP | within_ATAC_LuisGZ, na.rm = T),
#    any_3p = sum(within_polyA_site | polyA_motif_found, na.rm = T),
    within_polyA_site = sum(within_polyA_site, na.rm = T),
    polyA_motif_found = sum(polyA_motif_found, na.rm = T),
    n = n()
  ) %>%
  pivot_longer(!c("transcript_novelty", "n")) %>%
  mutate(prop = value / n) %>%
  mutate(end = if_else(name %in% c("within_polyA_site", "polyA_motif_found", "any_3p"), "3' support", "5' support")) %>%
  mutate(end = end %>% factor(levels = c("5' support", "3' support"))) %>%
  mutate(name = name %>% as_factor())
support_for_plot2
```

```{r}
ggplot(support_for_plot2, aes(x = prop, y = transcript_novelty, fill = fct_rev(name))) +
  geom_col(position = "dodge") +
  scale_y_discrete(
    limits = rev,
    labels = c("ISM_Prefix" = "ISM Prefix", "ISM_Suffix" = "ISM Suffix")
  ) +
  scale_fill_manual(
    limits = c("within_CAGE_peak", "within_ATAC_peak", "within_polyA_site", "polyA_motif_found"),
    labels = c("CAGE", "ATAC-seq", "polyA site", "polyA motif"),
    values = c("#00bfc4", "#00a9ff", "#c77cff", "#ff61cc")
  ) +
  labs(
    x = "Proportion of transcripts",
    y = NULL,
    fill = NULL
  ) +
  guides(
    fill = guide_legend(ncol = 2)
  ) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "bottom",
    panel.spacing = unit(2, "lines"),
    plot.margin = margin(11, 11, 11, 11, "points")
  ) +
  facet_wrap(vars(end))
```

```{r}
ggsave("output/figures/revision1/Fig2B_single_cell_ver_split.pdf", width = 8, height = 6)
```


## remake plot for CP/GZ but this time split ISMs

```{r}
cts = read_table("data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz")
sqanti = read_tsv("data/sqanti/cp_vz_0.75_min_7_recovery_talon_classification.txt.gz")
```

```{r}
support_for_plot = cts %>% select(transcript_id = annot_transcript_id, transcript_novelty, ISM_subtype) %>%
  left_join(
    read_csv("data/within_CAGE/cpvz_refTSS_200_CAGE_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_CAGE_refTSS = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_CAGE/cpvz_fetal_200_CAGE_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_CAGE_fetal = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_Greenleaf_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_Greenleaf = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_Nowakowski_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_Nowakowski = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_LuisCP_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_LuisCP = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    read_csv("data/within_ATAC/cpvz_LuisVZ_500_ATAC_results.csv") %>%
      mutate(CAGE_support = CAGE_support == "yes") %>%
      dplyr::rename(within_ATAC_LuisGZ = "CAGE_support"),
    by = c("transcript_id" = "transcript_ID")
  ) %>%
  left_join(
    sqanti %>% select(isoform, within_polyA_site, polyA_motif_found),
    by = c("transcript_id" = "isoform")
  ) %>%
  mutate(across(!c("transcript_id", "transcript_novelty", "ISM_subtype"), replace_na, FALSE))
support_for_plot
```

```{r}
support_for_plot2 = support_for_plot %>%
  talon_novelty_to_factor(split_ISMs = T) %>%
  group_by(transcript_novelty) %>%
  summarize(
#    any_5p = sum(within_CAGE_refTSS | within_CAGE_fetal | within_ATAC_Greenleaf | within_ATAC_Nowakowski, na.rm = T),
    within_CAGE_peak = sum(within_CAGE_refTSS | within_CAGE_fetal, na.rm = T),
    within_ATAC_peak = sum(within_ATAC_Greenleaf | within_ATAC_Nowakowski | within_ATAC_LuisCP | within_ATAC_LuisGZ, na.rm = T),
#    any_3p = sum(within_polyA_site | polyA_motif_found, na.rm = T),
    within_polyA_site = sum(within_polyA_site, na.rm = T),
    polyA_motif_found = sum(polyA_motif_found, na.rm = T),
    n = n()
  ) %>%
  pivot_longer(!c("transcript_novelty", "n")) %>%
  mutate(prop = value / n) %>%
  mutate(end = if_else(name %in% c("within_polyA_site", "polyA_motif_found", "any_3p"), "3' support", "5' support")) %>%
  mutate(end = end %>% factor(levels = c("5' support", "3' support"))) %>%
  mutate(name = name %>% as_factor())
support_for_plot2
```

```{r}
ggplot(support_for_plot2, aes(x = prop, y = transcript_novelty, fill = fct_rev(name))) +
  geom_col(position = "dodge") +
  scale_y_discrete(
    limits = rev,
    labels = c("ISM_Prefix" = "ISM Prefix", "ISM_Suffix" = "ISM Suffix")
  ) +
  scale_fill_manual(
    limits = c("within_CAGE_peak", "within_ATAC_peak", "within_polyA_site", "polyA_motif_found"),
    labels = c("CAGE", "ATAC-seq", "polyA site", "polyA motif"),
    values = c("#00bfc4", "#00a9ff", "#c77cff", "#ff61cc")
  ) +
  labs(
    x = "Proportion of transcripts",
    y = NULL,
    fill = NULL
  ) +
  guides(
    fill = guide_legend(ncol = 2)
  ) +
  theme(
    panel.grid.major = element_blank(),
    panel.grid.minor = element_blank(),
    legend.position = "bottom",
    panel.spacing = unit(2, "lines"),
    plot.margin = margin(11, 11, 11, 11, "points")
  ) +
  facet_wrap(vars(end))
```

```{r}
ggsave("output/figures/revision1/Fig2B_split.pdf", width = 4.5, height = 3.25)
```
