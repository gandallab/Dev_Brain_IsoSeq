[
  {
    "objectID": "analysis/index.html",
    "href": "analysis/index.html",
    "title": "Index",
    "section": "",
    "text": "Please navigate using the sidebar at left."
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "",
    "text": "suppressPackageStartupMessages({\n  library(IsoformSwitchAnalyzeR)\n  library(rtracklayer)\n  library(ggrepel)\n  library(scales)\n  library(GenomicFeatures)\n  library(DescTools)\n  library(tidyverse)\n  library(magrittr)\n})\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]"
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html#load-data",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html#load-data",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "Load Data",
    "text": "Load Data\n\nif(!file.exists(\"data/working/bulkTxome.Rdata\")) {\n  talon_gtf = rtracklayer::import(\"data/cp_vz_0.75_min_7_recovery_talon.gtf.gz\")\n  tx.isoseq =  talon_gtf %>% as_tibble() %>% filter(type == \"transcript\") \n  \n  sqanti_gtf = rtracklayer::import(\"data/sqanti/cp_vz_0.75_min_7_recovery_talon_corrected.gtf.cds.gtf.gz\")\n  tx.sqanti = sqanti_gtf %>% as_tibble() %>% filter(type == \"transcript\")\n  \n  gencode_gtf = rtracklayer::import(\"ref/gencode.v33lift37.annotation.gtf.gz\") \n  tx.gencode =  gencode_gtf %>% as_tibble() %>% filter(type == \"transcript\")\n  \n  txdb.gencode = makeTxDbFromGRanges(gencode_gtf)\n  gencodelengths= transcriptLengths(txdb.gencode)\n  \n  txdb.isoseq = makeTxDbFromGRanges(talon_gtf)\n  isoSeqLengths = transcriptLengths(txdb.isoseq)\n  samps = tribble( \n    ~sample_id, ~condition,\n    \"VZ_209\", \"VZ\",\n    \"VZ_334\", \"VZ\",\n    \"VZ_336\", \"VZ\",\n    \"CP_209\", \"CP\",\n    \"CP_334\", \"CP\",\n    \"CP_336\", \"CP\"\n  ) %>%\n    dplyr::mutate(\n      dplyr::across(condition, as_factor)\n    )\n  \n  cts = read_table(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n  cts.collapse = cts %>%\n    mutate(\n      VZ_209 = rowSums(across(matches(\"209_.*_VZ\"))),\n      VZ_334 = rowSums(across(matches(\"334_.*_VZ\"))),\n      VZ_336 = rowSums(across(matches(\"336_.*_VZ\"))),\n      CP_209 = rowSums(across(matches(\"209_.*_CP\"))),\n      CP_334 = rowSums(across(matches(\"334_.*_CP\"))),\n      CP_336 = rowSums(across(matches(\"336_.*_CP\"))),\n      .keep = \"unused\"\n    ) %>%\n    dplyr::select(!c(\"gene_ID\", \"transcript_ID\", \"annot_transcript_name\")) %>%\n    dplyr::rename(\n      gene_id = \"annot_gene_id\",\n      transcript_id = \"annot_transcript_id\",\n      gene_name = \"annot_gene_name\"\n    ) %>%\n    mutate(\n      gene_novelty = as.factor(gene_novelty),\n      transcript_novelty = as.factor(transcript_novelty),\n      ISM_subtype = ISM_subtype %>% na_if(\"None\") %>% as.factor()\n    )\n  cts$counts = rowSums(as.matrix(cts.collapse[,9:14]))\n  \n  cts$novelty2 = as.character(cts$transcript_novelty)\n  cts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Prefix\")] = \"ISM_Prefix\"\n  cts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Suffix\")] = \"ISM_Suffix\"\n  cts$novelty2[cts$novelty2 %in% c(\"Antisense\", \"Genomic\", \"Intergenic\", \"ISM\")] = \"Other\"\n  cts$novelty2 = factor(cts$novelty2,levels=c(\"Known\", \"ISM_Prefix\", \"ISM_Suffix\", \"NIC\", \"NNC\", \"Other\"))\n  \n  \n  TableS1 = tx.isoseq %>% dplyr::select(gene_id, transcript_id, gene_name, transcript_name, seqnames, start, end, strand, transcript_length=width, source, gene_status, gene_type, transcript_status,transcript_type,  havana_transcript, ccdsid, protein_id)\n  TableS1 = TableS1 %>% left_join(cts %>% dplyr::select(transcript_id=annot_transcript_id, transcript_novelty, ISM_subtype, transcript_novelty2 = novelty2, n_exons, cds_length = length, expression_counts = counts))\n  TableS1$expression_TPM = TableS1$expression_counts / (sum(TableS1$expression_counts / 1000000))\n  write_tsv(TableS1, file=\"output/tables/TableS1_transcript_annotation.tsv\")\n  save.image(\"data/working/bulkTxome.Rdata\")\n} else {\n  load(\"data/working/bulkTxome.Rdata\")\n}\n\nWarning in .get_cds_IDX(mcols0$type, mcols0$phase): The \"phase\" metadata column contains non-NA values for features of type\n  stop_codon. This information was ignored.\n\n\nWarning in .reject_transcripts(bad_tx, because): The following transcripts were dropped because they have incompatible\n  CDS and stop codons: ENST00000422803.2_2, ENST00000618549.1_2,\n  ENST00000619291.4_2, ENST00000621077.1_2, ENST00000621229.1_2,\n  ENST00000631326.2_2\n\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  .default = col_double(),\n  annot_gene_id = col_character(),\n  annot_transcript_id = col_character(),\n  annot_gene_name = col_character(),\n  annot_transcript_name = col_character(),\n  gene_novelty = col_character(),\n  transcript_novelty = col_character(),\n  ISM_subtype = col_character()\n)\nℹ Use `spec()` for the full column specifications.\n\n\nJoining, by = \"transcript_id\""
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html#technical-and-biological-replicates",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html#technical-and-biological-replicates",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "Technical and Biological Replicates",
    "text": "Technical and Biological Replicates\n\nFig1B: Isoform level MDS\n\n##\nlength(unique(cts$annot_transcript_id)) #214516 total isoforms\n\n[1] 214516\n\nlength(unique(cts$annot_gene_id)) #24554 genes\n\n[1] 24554\n\n## Collapsing across technical replicates\ncountMat = as.matrix(cts.collapse[,9:14])\ncs = colSums(countMat) / 1000000 ## TPM normalize\ncountMat.tpm = t(apply(countMat, 1, function(x) { x / cs}))\n\ntable(rowSums(countMat.tpm > 0.1) >3)  ## 175730 isoforms @ TPM > 0.1 in half of samples\n\n\n FALSE   TRUE \n 38786 175730 \n\ntable(rowSums(countMat.tpm > 1) >3)  ## 58102 @ TPM > 1 in half of samples\n\n\n FALSE   TRUE \n156414  58102 \n\nexpressedIsoforms = rowSums(countMat.tpm > .1) >3  ## TPM > .1 in half of samples\nlength(unique(cts$annot_gene_id[expressedIsoforms])) ## 17,299 genes with expressed isoforms (TPM > .1)\n\n[1] 17299\n\n# Analyze technical replicates separately\ncts.all = cts[,12:35]\ncs = colSums(cts.all) / 1000000\ncts.all.tpm = t(apply(cts.all, 1, function(x) { x / cs}))\n\nmds = cmdscale(dist(t(log2(.1+cts.all.tpm))),k = 4)\ndf = data.frame(sample=rownames(mds), PC1 = mds[,1], PC2=mds[,2], PC3=mds[,3], PC4=mds[,4])\ndf$Region = substr(df$sample, 7,9)\ndf$Subject = substr(df$sample, 1,3)\ndf$batch = substr(df$sample, 5,5)\nFig1B=ggplot(df, aes(x=PC1,y=PC2, color=Region, shape=Subject,label=batch)) + geom_point(size=4) +  geom_text(color='black', size=2) +  theme_bw() + ggtitle(\"Isoform level clustering\")\nFig1B\n\n\n\nggsave(Fig1B,filename = \"output/figures/Fig1/Fig1B.pdf\", width = 3.5,height=2)\n\n\n\nFig1C: smoothscatter\n\ngeneCountMap.tpm = tibble(gene = cts$annot_gene_name, as_tibble(cts.all.tpm)) %>% group_by(gene) %>%  summarise(across(everything(), sum))\nmds = cmdscale(dist(t(log2(.1+geneCountMap.tpm %>% dplyr::select(-gene)))),k = 4)\ndf = data.frame(sample=rownames(mds), PC1 = mds[,1], PC2=mds[,2], PC3=mds[,3], PC4=mds[,4])\ndf$Region = substr(df$sample, 7,9)\ndf$Subject = substr(df$sample, 1,3)\ndf$TechnicalReplicate = substr(df$sample, 5,5)\n#ggplot(df, aes(x=PC1,y=PC2, color=Region, shape=Subject)) + geom_point(size=3) + theme_bw() + ggtitle(\"Gene level clustering\")\n\nFig1C=ggplot(as.data.frame(countMat.tpm), aes(x=log2(1+VZ_334), y=log2(1+VZ_336))) + geom_point(color='blue',size=.4,alpha=.5) + theme_bw() + geom_abline(slope=1,lty=2) + geom_smooth(method='lm',color='black') + ggtitle(\"R=0.93, p<2e-16\")\nFig1C\n\n`geom_smooth()` using formula 'y ~ x'\n\n\n\n\nggsave(Fig1C ,filename = \"output/figures/Fig1/Fig1C.pdf\", width = 3,height=3)\n\n`geom_smooth()` using formula 'y ~ x'\n\npdf(file= \"output/figures/Fig1/Fig1Cb.pdf\", width = 4, height=4)\nsmoothScatter(log2(1+countMat.tpm[,\"VZ_334\"]), log2(1+countMat.tpm[,\"VZ_336\"]))\ndev.off()\n\nquartz_off_screen \n                2 \n\nsmoothScatter(log2(1+countMat.tpm[,\"VZ_334\"]), log2(1+countMat.tpm[,\"VZ_336\"]))\n\n\n\npanel.cor <- function(x, y, digits = 2, prefix = \"R=\", cex.cor, ...)\n{\n    usr <- par(\"usr\"); on.exit(par(usr))\n    par(usr = c(0, 1, 0, 1))\n    r <- abs(cor(x, y))\n    txt <- format(c(r, 0.123456789), digits = digits)[1]\n    txt <- paste0(prefix, txt)\n    if(missing(cex.cor)) cex.cor <- 0.8/strwidth(txt)\n    text(0.5, 0.5, txt, cex =1)\n}\n\npdf(file=\"output/figures/supplement/FigS2_bio_replicates.pdf\", width=8,height=6)  \npairs(log2(1+countMat.tpm), panel=function(x,y){smoothScatter(x,y,add=T)},upper.panel = panel.cor)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFig1E: tx novelty\n\nFig1E = ggplot(cts %>% filter(counts>10,), aes(x=counts, fill=novelty2)) + geom_histogram(position=position_fill(),alpha=.75, binwidth = .3)+ theme_bw()  +  scale_x_log10()+\n  annotation_logticks(scaled = T,sides='b')+ theme(panel.grid.minor = element_blank()) + labs(x=\"Min observed counts\", y=\"Proportion of transcripts\") + ggtitle(\"Transcript novelty & type\") + theme(plot.title = element_text(hjust=.5))  + scale_fill_manual(values=colorVector_ismSplit)\nFig1E\n\n\n\nggsave(file=\"output/figures/Fig1/Fig1E.pdf\",width=5,height=3)\n\n## Removing MAP1B\nggplot(cts %>% filter(counts>10,annot_gene_name!=\"MAP1B\"), aes(x=counts, fill=novelty2)) + geom_histogram(position=position_fill(),alpha=.5, binwidth = .3)+ theme_bw()  +  scale_x_log10()+\n  annotation_logticks(scaled = T,sides='b')+ theme(panel.grid.minor = element_blank()) + labs(x=\"Min observed counts\", y=\"Proportion of transcripts\") + ggtitle(\"Transcript novelty & type\",subtitle = '(MAP1B removed)') + theme(plot.title = element_text(hjust=.5))  + scale_fill_manual(values=colorVector_ismSplit)"
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html#analyses-of-transcript-length",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html#analyses-of-transcript-length",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "Analyses of Transcript Length",
    "text": "Analyses of Transcript Length\n\nFig1F: Tx Length Histogra\n\ndf<- cts%>% dplyr::select(\"annot_transcript_id\", \"transcript_novelty\", \"ISM_subtype\", \"annot_gene_name\", \"counts\") %>% right_join(isoSeqLengths, by=c(\"annot_transcript_id\" = \"tx_name\")) \n\ndf$novelty2 = as.character(df$transcript_novelty)\ndf$novelty2[which(df$novelty2==\"ISM\" & df$ISM_subtype==\"Prefix\")] = \"ISM_Prefix\"\ndf$novelty2[which(df$novelty2==\"ISM\" & df$ISM_subtype==\"Suffix\")] = \"ISM_Suffix\"\ndf$novelty2[df$novelty2 %in% c(\"Antisense\", \"Genomic\", \"Intergenic\", \"ISM\")] = \"Other\"\ndf$novelty2 = factor(df$novelty2,levels=c(\"Known\", \"ISM_Prefix\", \"ISM_Suffix\", \"NIC\", \"NNC\", \"Other\"))\n\ndf %>% filter(tx_len > 900, tx_len < 6000) %>% group_by(novelty2) %>% summarise(peak=10^mean(log10(tx_len)), median(tx_len), mean(tx_len))\n\n# A tibble: 6 × 4\n  novelty2    peak `median(tx_len)` `mean(tx_len)`\n  <fct>      <dbl>            <dbl>          <dbl>\n1 Known      2305.             2317          2588.\n2 ISM_Prefix 2604.             2701          2809.\n3 ISM_Suffix 2833.             2914          3019.\n4 NIC        3023.             3100          3193.\n5 NNC        2867.             2953          3033.\n6 Other      2616.             2716          2807.\n\nFig1F = ggplot(df, aes(x=tx_len, fill=novelty2)) + geom_histogram(alpha=.75,binwidth = .03)+ \n  theme_bw() + scale_fill_manual(values=colorVector_ismSplit) +\n  scale_x_continuous(trans = log10_trans(),breaks = trans_breaks(\"log10\", function(x) 10^x),\n    labels = trans_format(\"log10\", math_format(10^.x)),limits = c(50,10^5)) + annotation_logticks() +\n  labs(x=\"Transcript Length (bp)\") + ggtitle(\"Transcript length distribution\")\nFig1F\n\nWarning: Removed 6 rows containing non-finite values (stat_bin).\n\n\nWarning: Removed 12 rows containing missing values (geom_bar).\n\n\n\n\nggsave(Fig1F,file='output/figures/Fig1/Fig1F.pdf', width=5,height=2.5)\n\nWarning: Removed 6 rows containing non-finite values (stat_bin).\nRemoved 12 rows containing missing values (geom_bar).\n\n## Zoomed in\nggplot(df, aes(x=tx_len, fill=novelty2)) + geom_histogram(alpha=.5,binwidth = 100)+ \n  theme_bw() + scale_fill_manual(values=colorVector_ismSplit) + xlim(800,5500) + \n  labs(x=\"Transcript Length (bp)\") + ggtitle(\"Transcript length distribution\") + \n  geom_vline(xintercept = 2588, lty=2,color=\"#009E73\")\n\nWarning: Removed 27594 rows containing non-finite values (stat_bin).\nRemoved 12 rows containing missing values (geom_bar).\n\n\n\n\nmean(df$tx_len[df$novelty2==\"Known\"])\n\n[1] 2276.283\n\nsd(df$tx_len[df$novelty2==\"Known\"])\n\n[1] 2224.66\n\nmean(df$tx_len[df$novelty2!=\"Known\"])\n\n[1] 3072.309\n\nsd(df$tx_len[df$novelty2!=\"Known\"])\n\n[1] 1168.997\n\n## Linear model: Known is the intercept\nsummary(lm(log2(tx_len) ~ novelty2,data=df[df$tx_len > 1000,]))\n\n\nCall:\nlm(formula = log2(tx_len) ~ novelty2, data = df[df$tx_len > 1000, \n    ])\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-1.6246 -0.3952  0.0137  0.3949  6.2778 \n\nCoefficients:\n                    Estimate Std. Error  t value Pr(>|t|)    \n(Intercept)        11.367558   0.002874 3955.796  < 2e-16 ***\nnovelty2ISM_Prefix  0.016804   0.005031    3.341 0.000836 ***\nnovelty2ISM_Suffix  0.126745   0.003850   32.923  < 2e-16 ***\nnovelty2NIC         0.224224   0.003922   57.172  < 2e-16 ***\nnovelty2NNC         0.137284   0.005755   23.855  < 2e-16 ***\nnovelty2Other       0.012843   0.008076    1.590 0.111768    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.5991 on 190337 degrees of freedom\nMultiple R-squared:  0.0208,    Adjusted R-squared:  0.02078 \nF-statistic: 808.7 on 5 and 190337 DF,  p-value: < 2.2e-16\n\nsummary(lm(log2(tx_len) ~ novelty2==\"Known\",data=df))\n\n\nCall:\nlm(formula = log2(tx_len) ~ novelty2 == \"Known\", data = df)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-5.5655 -0.4458  0.0731  0.5117  7.0423 \n\nCoefficients:\n                         Estimate Std. Error t value Pr(>|t|)    \n(Intercept)             11.472348   0.002319  4948.1   <2e-16 ***\nnovelty2 == \"Known\"TRUE -0.869348   0.004212  -206.4   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 0.8965 on 214514 degrees of freedom\nMultiple R-squared:  0.1657,    Adjusted R-squared:  0.1657 \nF-statistic: 4.26e+04 on 1 and 214514 DF,  p-value: < 2.2e-16\n\n## Non-parametric test\nkruskal.test((tx_len) ~ novelty2==\"Known\",data=df)\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  (tx_len) by novelty2 == \"Known\"\nKruskal-Wallis chi-squared = 23404, df = 1, p-value < 2.2e-16\n\nkruskal.test(log2(tx_len) ~ novelty2,data=df[df$tx_len > 1000,])\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  log2(tx_len) by novelty2\nKruskal-Wallis chi-squared = 4511.4, df = 5, p-value < 2.2e-16\n\nDescTools::DunnTest(log2(tx_len) ~ novelty2, data=df[df$tx_len > 1000,], method='bonferroni')\n\n\n Dunn's test of multiple comparisons using rank sums : bonferroni  \n\n                      mean.rank.diff    pval    \nISM_Prefix-Known           3089.5845 3.2e-10 ***\nISM_Suffix-Known          13024.1853 < 2e-16 ***\nNIC-Known                 22131.1682 < 2e-16 ***\nNNC-Known                 13892.0679 < 2e-16 ***\nOther-Known                2480.9445  0.0121 *  \nISM_Suffix-ISM_Prefix      9934.6008 < 2e-16 ***\nNIC-ISM_Prefix            19041.5837 < 2e-16 ***\nNNC-ISM_Prefix            10802.4834 < 2e-16 ***\nOther-ISM_Prefix           -608.6399  1.0000    \nNIC-ISM_Suffix             9106.9829 < 2e-16 ***\nNNC-ISM_Suffix              867.8826  1.0000    \nOther-ISM_Suffix         -10543.2407 < 2e-16 ***\nNNC-NIC                   -8239.1003 < 2e-16 ***\nOther-NIC                -19650.2236 < 2e-16 ***\nOther-NNC                -11411.1233 < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n## Boxplot\n# ggplot(df, aes(x=novelty2, y=tx_len, fill=novelty2)) + geom_boxplot()+ \n#   theme_bw()  + scale_fill_manual(values=colorVector_ismSplit) + \n#   scale_y_continuous(trans = log10_trans(),breaks = trans_breaks(\"log10\", function(x) 10^x),\n#     labels = trans_format(\"log10\", math_format(10^.x)))\n\n\n\nFig1G: # Exons / gene\n\nFig1G = ggplot(df, aes(x=nexon, fill=novelty2)) + geom_histogram(alpha=.75, binwidth = 1) + theme_bw() + \n  xlim(1,40) + scale_fill_manual(values=colorVector_ismSplit) + labs(x=\"# Exons\", y=\"# Transcripts\") + ggtitle('Exons per  Transcript') + theme(legend.position = \"none\")\nFig1G\n\nWarning: Removed 597 rows containing non-finite values (stat_bin).\n\n\nWarning: Removed 12 rows containing missing values (geom_bar).\n\n\n\n\nggsave(Fig1G,file='output/figures/Fig1/Fig1G.pdf', width=3,height=2.5)\n\nWarning: Removed 597 rows containing non-finite values (stat_bin).\nRemoved 12 rows containing missing values (geom_bar).\n\ndf %>% group_by(novelty2) %>% dplyr::select(nexon) %>% summarise(median(nexon), mean(nexon), sd(nexon), quantile(nexon, .05), quantile(nexon,.95))\n\nAdding missing grouping variables: `novelty2`\n\n\n# A tibble: 6 × 6\n  novelty2   `median(nexon)` `mean(nexon)` `sd(nexon)` quantile(nexon,…¹ quant…²\n  <fct>                <dbl>         <dbl>       <dbl>             <dbl>   <dbl>\n1 Known                    5          7.16        6.88                 1      21\n2 ISM_Prefix               8         10.1         6.99                 2      23\n3 ISM_Suffix               8         10.1         7.01                 2      24\n4 NIC                     12         13.2         7.31                 4      27\n5 NNC                      9         10.3         6.80                 2      23\n6 Other                    5          7.30        6.24                 2      20\n# … with abbreviated variable names ¹​`quantile(nexon, 0.05)`,\n#   ²​`quantile(nexon, 0.95)`\n\ndf %>% group_by(novelty2==\"Known\") %>% dplyr::select(nexon) %>% summarise(median(nexon), mean(nexon), sd(nexon), quantile(nexon, .05), quantile(nexon,.95))\n\nAdding missing grouping variables: `novelty2 == \"Known\"`\n\n\n# A tibble: 2 × 6\n  `novelty2 == \"Known\"` `median(nexon)` `mean(nexon)` sd(nexon…¹ quant…² quant…³\n  <lgl>                           <dbl>         <dbl>      <dbl>   <dbl>   <dbl>\n1 FALSE                              10         11.0        7.25       2      25\n2 TRUE                                5          7.16       6.88       1      21\n# … with abbreviated variable names ¹​`sd(nexon)`, ²​`quantile(nexon, 0.05)`,\n#   ³​`quantile(nexon, 0.95)`\n\n# Linear model (known is intercept)\nsummary(lm(log2(df$nexon) ~ df$novelty2))\n\n\nCall:\nlm(formula = log2(df$nexon) ~ df$novelty2)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-2.4927 -0.6853  0.0657  0.8222  4.0657 \n\nCoefficients:\n                      Estimate Std. Error t value Pr(>|t|)    \n(Intercept)           2.256270   0.004331 520.977   <2e-16 ***\ndf$novelty2ISM_Prefix 0.720984   0.008605  83.788   <2e-16 ***\ndf$novelty2ISM_Suffix 0.728883   0.006378 114.275   <2e-16 ***\ndf$novelty2NIC        1.236409   0.006545 188.897   <2e-16 ***\ndf$novelty2NNC        0.776082   0.010123  76.663   <2e-16 ***\ndf$novelty2Other      0.127124   0.014200   8.952   <2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 1.104 on 214510 degrees of freedom\nMultiple R-squared:  0.1525,    Adjusted R-squared:  0.1525 \nF-statistic:  7720 on 5 and 214510 DF,  p-value: < 2.2e-16\n\n## Non-parametric test\nkruskal.test(log2(df$nexon) ~ as.factor(df$novelty2))\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  log2(df$nexon) by as.factor(df$novelty2)\nKruskal-Wallis chi-squared = 29541, df = 5, p-value < 2.2e-16\n\nkruskal.test(log2(df$nexon) ~ as.factor(df$novelty2==\"Known\"))\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  log2(df$nexon) by as.factor(df$novelty2 == \"Known\")\nKruskal-Wallis chi-squared = 20319, df = 1, p-value < 2.2e-16\n\nkruskal.test((df$nexon) ~ as.factor(df$novelty2==\"Known\"))\n\n\n    Kruskal-Wallis rank sum test\n\ndata:  (df$nexon) by as.factor(df$novelty2 == \"Known\")\nKruskal-Wallis chi-squared = 20319, df = 1, p-value < 2.2e-16\n\nDescTools::DunnTest(log2(df$nexon) ~ as.factor(df$novelty2),method='bonferroni')\n\n\n Dunn's test of multiple comparisons using rank sums : bonferroni  \n\n                      mean.rank.diff    pval    \nISM_Prefix-Known          32693.6946 < 2e-16 ***\nISM_Suffix-Known          33127.7388 < 2e-16 ***\nNIC-Known                 61043.3188 < 2e-16 ***\nNNC-Known                 35434.2011 < 2e-16 ***\nOther-Known                3206.1675 0.00083 ***\nISM_Suffix-ISM_Prefix       434.0442 1.00000    \nNIC-ISM_Prefix            28349.6241 < 2e-16 ***\nNNC-ISM_Prefix             2740.5065 0.00050 ***\nOther-ISM_Prefix         -29487.5271 < 2e-16 ***\nNIC-ISM_Suffix            27915.5799 < 2e-16 ***\nNNC-ISM_Suffix             2306.4623 0.00092 ***\nOther-ISM_Suffix         -29921.5713 < 2e-16 ***\nNNC-NIC                  -25609.1177 < 2e-16 ***\nOther-NIC                -57837.1512 < 2e-16 ***\nOther-NNC                -32228.0336 < 2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1"
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html#analyses-of-transcripts-per-gene-disease",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html#analyses-of-transcripts-per-gene-disease",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "Analyses of transcripts per gene & disease",
    "text": "Analyses of transcripts per gene & disease\n\nNDD risk genes ~ unique transcipts per gene\n\nrisk_genes =read.csv(\"ref/ASD+SCZ+DDD_2022.csv\")\npLI_scores = read.table('ref/pLI_scores.ensid.txt',header = T)\nasd_genes = risk_genes$Gene[risk_genes$Set==\"ASD (SFARI score 1)\"]\nddd_genes = risk_genes$Gene[risk_genes$Set==\"DDD (Kaplanis et al. 2019)\"]\n\ngeneCounts = cts %>% group_by(gene_id=substr(annot_gene_id,1,15)) %>% summarise(gene_counts = sum(counts))\ngeneCounts$gene_counts = geneCounts$gene_counts / (sum(geneCounts$gene_counts) / 1000000)\n\ndf <- talon_gtf %>% as_tibble()  %>% \n  mutate(gene_id = str_sub(gene_id, 1, 15)) %>%\n  group_by(gene_id) %>%\n  summarize(n_transcripts = n_distinct(na.omit(transcript_id)), n_exons = n_distinct(na.omit(exon_id))) %>%\n  ungroup() \n\ndf <-as_tibble(gencode_gtf) %>% dplyr::filter(type==\"gene\") %>% mutate(gene_id=substr(gene_id,0,15)) %>% right_join(df, by=\"gene_id\")\ndf <- df %>% left_join(geneCounts) \n\nJoining, by = \"gene_id\"\n\ndf <- pLI_scores %>% as_tibble() %>% dplyr::select(gene_id=gene, pLI) %>% right_join(df)\n\nJoining, by = \"gene_id\"\n\ndf$gene_rank = rank(-df$n_transcripts, ties.method = 'first')\ndf$DDD = FALSE\ndf$DDD[df$gene_name %in% c(asd_genes, ddd_genes)] = TRUE\ns=summary(glm(DDD ~ log10(n_transcripts)  + log10(width)  + log10(gene_counts), data=df %>% filter(gene_type == \"protein_coding\"), family='binomial'))\nprint(s)\n\n\nCall:\nglm(formula = DDD ~ log10(n_transcripts) + log10(width) + log10(gene_counts), \n    family = \"binomial\", data = df %>% filter(gene_type == \"protein_coding\"))\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.8652  -0.2530  -0.1708  -0.1059   3.5222  \n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)          -10.2296     0.5162 -19.819  < 2e-16 ***\nlog10(n_transcripts)   1.1084     0.2013   5.507 3.64e-08 ***\nlog10(width)           1.0441     0.1057   9.882  < 2e-16 ***\nlog10(gene_counts)     0.3320     0.1161   2.859  0.00425 ** \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 3522.0  on 15146  degrees of freedom\nResidual deviance: 3145.4  on 15143  degrees of freedom\nAIC: 3153.4\n\nNumber of Fisher Scoring iterations: 7\n\nexp(s$coefficients[,1])\n\n         (Intercept) log10(n_transcripts)         log10(width) \n        3.608466e-05         3.029439e+00         2.840918e+00 \n  log10(gene_counts) \n        1.393712e+00 \n\nFig1H=ggplot(df, aes(x = gene_rank, y = n_transcripts,color=DDD)) +\n  geom_point() + geom_line(color='blue') + \n  geom_label_repel(data = df %>% filter(n_transcripts > 150 | (n_transcripts > 75 & DDD==TRUE)),aes(label = gene_name),force = 30, direction='both',nudge_y=-.1,nudge_x = .3, max.iter = 10000,max.overlaps = 50, size=2.5) + scale_color_manual(values=c(\"TRUE\" = \"red\", \"FALSE\" = \"black\")) + scale_y_log10() + scale_x_log10() + theme_bw() + annotation_logticks() + theme(legend.position = 'none') + labs(x=\"Gene rank\", y=\"# Transcripts\") + ggtitle(\"NDD risk genes ~ unique  transcipts per gene\",subtitle=paste0(\"OR \",signif(exp(s$coefficients[2,1]),3),\", P=\", signif(s$coefficients[2,4],2)))\nFig1H\n\n\n\nggsave(file=\"output/figures/Fig1/Fig1H.pdf\",Fig1H, width = 8, height=3)\n\n\n\nFigS3: NDD risk genes ~ unique NOVEL transcipts per gene\n\ndf.novel <- talon_gtf %>% as_tibble()  %>% filter(type==\"transcript\", transcript_id %in% cts$annot_transcript_id[cts$novelty2!=\"Known\"]) %>% \n  mutate(gene_id = str_sub(gene_id, 1, 15)) %>%\n  group_by(gene_id) %>%\n  summarize(n_transcripts = n_distinct(na.omit(transcript_id)), n_exons = n_distinct(na.omit(exon_id))) %>%\n  ungroup() \n\ndf.novel <- as_tibble(gencode_gtf) %>% dplyr::filter(type==\"gene\") %>% mutate(gene_id=substr(gene_id,0,15)) %>% right_join(df.novel, by=\"gene_id\")\ndf.novel <- df.novel %>% left_join(geneCounts) \n\nJoining, by = \"gene_id\"\n\ndf.novel$gene_rank = rank(-df.novel$n_transcripts, ties.method = 'first')\ndf.novel$DDD = FALSE\ndf.novel$DDD[df.novel$gene_name %in% c(asd_genes, ddd_genes)] = TRUE\n\ns=summary(glm(DDD ~ log10(n_transcripts)  + log10(width)  + log10(gene_counts), data=df.novel %>% filter(gene_type == \"protein_coding\"), family='binomial'))\nprint(s)\n\n\nCall:\nglm(formula = DDD ~ log10(n_transcripts) + log10(width) + log10(gene_counts), \n    family = \"binomial\", data = df.novel %>% filter(gene_type == \n        \"protein_coding\"))\n\nDeviance Residuals: \n    Min       1Q   Median       3Q      Max  \n-0.7978  -0.2842  -0.2103  -0.1501   3.4149  \n\nCoefficients:\n                     Estimate Std. Error z value Pr(>|z|)    \n(Intercept)           -9.9549     0.5723 -17.394  < 2e-16 ***\nlog10(n_transcripts)   0.5682     0.1645   3.453 0.000554 ***\nlog10(width)           1.0640     0.1115   9.546  < 2e-16 ***\nlog10(gene_counts)     0.5614     0.1217   4.612 3.98e-06 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for binomial family taken to be 1)\n\n    Null deviance: 3142.7  on 11204  degrees of freedom\nResidual deviance: 2904.9  on 11201  degrees of freedom\nAIC: 2912.9\n\nNumber of Fisher Scoring iterations: 7\n\nsort(exp(s$coefficients[,1]))\n\n         (Intercept)   log10(gene_counts) log10(n_transcripts) \n        0.0000474938         1.7531245449         1.7651452731 \n        log10(width) \n        2.8979142259 \n\nFigS3=ggplot(df.novel, aes(x = gene_rank, y = n_transcripts,color=DDD)) +\n  geom_point() + geom_line(color='blue') + \n  geom_label_repel(data = df.novel %>% filter(n_transcripts > 150 | (n_transcripts > 75 & DDD==TRUE)),aes(label = gene_name),force = 30, direction='both',nudge_y=-.1,nudge_x = .3, max.iter = 10000,max.overlaps = 50, size=2.5) + scale_color_manual(values=c(\"TRUE\" = \"red\", \"FALSE\" = \"black\")) + scale_y_log10() + scale_x_log10() + theme_bw() + annotation_logticks() + theme(legend.position = 'none') + labs(x=\"Gene rank\", y=\"# Transcripts\") + ggtitle(\"NDD risk genes ~ unique novel transcipts per gene\",subtitle=paste0(\"OR \",signif(exp(s$coefficients[2,1]),2),\", P=\", signif(s$coefficients[2,4],2)))\nFigS3\n\n\n\nggsave(file=\"output/figures/supplement/FigS3G.pdf\",FigS3, width = 8, height=3)"
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html#pathway-analysis",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html#pathway-analysis",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "Pathway Analysis",
    "text": "Pathway Analysis\n\nsumstats <- tx.isoseq %>% group_by(gene_name, gene_type) %>% summarise(total = n_distinct(transcript_id), known = sum(transcript_status==\"KNOWN\"), ISM.pre = sum(ISM.prefix_transcript==\"TRUE\", na.rm=T), ISM.suffix = sum(ISM.suffix_transcript==\"TRUE\", na.rm=T), NIC = sum(NIC_transcript==TRUE, na.rm = T), NNC = sum(NNC_transcript==TRUE, na.rm = T))\n\n`summarise()` has grouped output by 'gene_name'. You can override using the\n`.groups` argument.\n\nwrite.csv(file=\"output/isoformNovetyCounts_at_geneLevel.csv\",sumstats)\n\n\nquery = sort(unique(tx.isoseq$gene_name[tx.isoseq$transcript_status==\"NOVEL\" & (tx.isoseq$NNC_transcript==TRUE | tx.isoseq$NIC_transcript == TRUE)]))\nbg = sort(unique(tx.isoseq$gene_name[tx.isoseq$transcript_status==\"NOVEL\" | tx.isoseq$transcript_status==\"KNOWN\"]))\n\ngo = gprofiler2::gost(query = query,custom_bg = bg,sources = c(\"GO\", \"KEGG\", \"REACTOME\"),as_short_link = T)\n\nDetected custom background input, domain scope is set to 'custom'"
  },
  {
    "objectID": "analysis/Figure1_BulkTxomeAnalysis.html#gene-body-coverage",
    "href": "analysis/Figure1_BulkTxomeAnalysis.html#gene-body-coverage",
    "title": "Figure 1 - BulkTxomeAnalysis",
    "section": "Gene Body Coverage",
    "text": "Gene Body Coverage\n\nfiles = dir(path = \"data/QC/RNA_Metrics/\", pattern=\"RNA_Metrics\")\ndf_coverage_isoseq = data.frame(Position=seq(0,100))\n\nfor(i in 1:length(files)) {\n  this_file = data.table::fread(paste0(\"data/QC/RNA_Metrics/\", files[i]),skip=10)\n  names(this_file)[2] = gsub(\".RNA_Metrics\", \"\", files[i])\n  df_coverage_isoseq = cbind(df_coverage_isoseq, this_file[,2])\n}\n\nfiles = dir(path = \"data/QC/RNA_Metrics_short_read//\", pattern=\"RNA_Metrics\")\ndf_coverage_shortread = data.frame(Position=seq(0,100))\n\nfor(i in 1:length(files)) {\n  this_file = data.table::fread(paste0(\"data/QC/RNA_Metrics_short_read/\", files[i]),skip=10)\n  names(this_file)[2] = gsub(\".RNA_Metrics\", \"\", files[i])\n  df_coverage_shortread = cbind(df_coverage_shortread, this_file[,2])\n}\n\n\n\ndf_coverage_isoseq <- df_coverage_isoseq %>% pivot_longer(cols = -Position, names_to = \"Sample\", values_to = \"Normalized_coverage\")\ndf_coverage_isoseq$modality = \"IsoSeq\"\n\ndf_coverage_shortread <- df_coverage_shortread %>% pivot_longer(cols = -Position, names_to = \"Sample\", values_to = \"Normalized_coverage\")\ndf_coverage_shortread$modality = \"short-read\\nRNAseq\\n(ribozero)\" \n\nFigS2A= ggplot(rbind(df_coverage_isoseq, df_coverage_shortread), aes(x=Position,y=Normalized_coverage,group=Sample, color=modality)) + geom_path() + theme_bw() + labs(x=\"Gene body position (5' -> 3')\", y=\"Normalized coverage\")\nggsave(FigS2A,file=\"output/figures/supplement/FigS2A_coverage.pdf\",width=5,height=3)"
  },
  {
    "objectID": "analysis/Figure1_TableS1.html",
    "href": "analysis/Figure1_TableS1.html",
    "title": "Figure 1 - Table S1",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.5.0 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(rtracklayer)\n\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nLoading required package: GenomeInfoDb\n\n\n\ntheme_set(theme_bw())\ntheme_update(\n  plot.title = element_text(size = rel(1.4), hjust = 0.5),\n  axis.title = element_text(size = rel(1.2)),\n  axis.text = element_text(color=\"black\", size = rel(1)),\n  legend.title = element_text(size = rel(1.2)),\n  legend.text = element_text(color=\"black\", size = rel(1)),\n  strip.text = element_text(color=\"black\", size = rel(1))\n)\n\n\ncts = read_table(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  .default = col_double(),\n  annot_gene_id = col_character(),\n  annot_transcript_id = col_character(),\n  annot_gene_name = col_character(),\n  annot_transcript_name = col_character(),\n  gene_novelty = col_character(),\n  transcript_novelty = col_character(),\n  ISM_subtype = col_character()\n)\nℹ Use `spec()` for the full column specifications.\n\ncts = cts %>%\n  mutate(\n    VZ_209 = rowSums(across(matches(\"209_.*_VZ\"))),\n    VZ_334 = rowSums(across(matches(\"334_.*_VZ\"))),\n    VZ_336 = rowSums(across(matches(\"336_.*_VZ\"))),\n    CP_209 = rowSums(across(matches(\"209_.*_CP\"))),\n    CP_334 = rowSums(across(matches(\"334_.*_CP\"))),\n    CP_336 = rowSums(across(matches(\"336_.*_CP\"))),\n    .keep = \"unused\"\n  ) %>%\n  select(!c(\"gene_ID\", \"transcript_ID\", \"annot_transcript_name\")) %>%\n  dplyr::rename(\n    gene_id = \"annot_gene_id\",\n    transcript_id = \"annot_transcript_id\",\n    gene_name = \"annot_gene_name\"\n  ) %>%\n  mutate(\n    gene_novelty = as.factor(gene_novelty) %>% fct_infreq() %>% fct_relevel(\"Known\"),\n    transcript_novelty = as.factor(transcript_novelty)  %>% fct_infreq(),\n    ISM_subtype = ISM_subtype %>% na_if(\"None\") %>% factor(levels = c(\"Prefix\", \"Suffix\", \"Both\"))\n  )\ncts\n\n# A tibble: 214,516 × 14\n   gene_id  trans…¹ gene_…² n_exons length gene_…³ trans…⁴ ISM_s…⁵ VZ_209 VZ_334\n   <chr>    <chr>   <chr>     <dbl>  <dbl> <fct>   <fct>   <fct>    <dbl>  <dbl>\n 1 ENSG000… ENST00… AL6273…       1    755 Known   Known   <NA>         0      0\n 2 ENSG000… ENST00… AP0062…       4   2257 Known   Known   <NA>         0      0\n 3 ENSG000… ENST00… RP4-66…       1    180 Known   Known   <NA>         1      1\n 4 ENSG000… ENST00… MTND2P…       1   1044 Known   Known   <NA>         0      1\n 5 ENSG000… ENST00… MTCO1P…       1   1543 Known   Known   <NA>         0      0\n 6 ENSG000… ENST00… LINC01…       3   1869 Known   Known   <NA>         0      2\n 7 ENSG000… ENST00… LINC01…       2    566 Known   Known   <NA>         0      2\n 8 ENSG000… ENST00… LINC01…       1   1873 Known   Known   <NA>         1      0\n 9 ENSG000… ENST00… AL6698…       1    114 Known   Known   <NA>         3      0\n10 ENSG000… ENST00… LINC01…       5   6616 Known   Known   <NA>         1      0\n# … with 214,506 more rows, 4 more variables: VZ_336 <dbl>, CP_209 <dbl>,\n#   CP_334 <dbl>, CP_336 <dbl>, and abbreviated variable names ¹​transcript_id,\n#   ²​gene_name, ³​gene_novelty, ⁴​transcript_novelty, ⁵​ISM_subtype\n\n\n\ntalon_gtf = rtracklayer::import(\"data/cp_vz_0.75_min_7_recovery_talon.gtf.gz\")\n\n\ntalon_gtf = talon_gtf %>% as_tibble() %>% filter(type == \"transcript\")\n\n\nsqanti = read_tsv(\"data/sqanti/cp_vz_0.75_min_7_recovery_talon_classification.txt.gz\")\n\nRows: 214516 Columns: 48\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (14): isoform, chrom, strand, structural_category, associated_gene, asso...\ndbl (21): length, exons, ref_length, ref_exons, diff_to_TSS, diff_to_TTS, di...\nlgl (13): RTS_stage, FL, n_indels, n_indels_junc, bite, iso_exp, gene_exp, r...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nExternal support used for TALON whitelist creation (some is from our initial unfiltered run of SQANTI and some is from TALON scripts)\n(there might be something wrong with this file - contains NAs)\n\nwhitelist_support = read_tsv(\"data/cp_vz_unfiltered_external_support.tsv.gz\")\n\nRows: 214516 Columns: 22\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_transcript_id, annot_gene_id, annot_gene_name, gene_novelty,...\ndbl  (5): n_reads, n_donors, dist_to_CAGE_peak, dist_to_polyA_site, dist_to_...\nlgl (10): within_CAGE_peak, within_polyA_site, polyA_motif_found, CAGE_suppo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nwhitelist_support\n\n# A tibble: 214,516 × 22\n   annot_trans…¹ annot…² annot…³ gene_…⁴ trans…⁵ ISM_s…⁶ n_reads n_don…⁷ dist_…⁸\n   <chr>         <chr>   <chr>   <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl>\n 1 ENST00000000… ENSG00… ARF5    Known   Known   <NA>        825       3       6\n 2 ENST00000000… ENSG00… M6PR    Known   Known   <NA>       1955       3      19\n 3 ENST00000000… ENSG00… ESRRA   Known   Known   <NA>         11       3       2\n 4 ENST00000001… ENSG00… FKBP4   Known   Known   <NA>       2319       3     -30\n 5 ENST00000001… ENSG00… CYP26B1 Known   Known   <NA>         63       3    6497\n 6 ENST00000002… ENSG00… NDUFAF7 Known   Known   <NA>        158       3     -19\n 7 ENST00000002… ENSG00… FUCA2   Known   Known   <NA>        663       3     -10\n 8 ENST00000002… ENSG00… DBNDD1  Known   Known   <NA>        421       3       0\n 9 ENST00000002… ENSG00… HS3ST1  Known   Known   <NA>       1351       3      -8\n10 ENST00000003… ENSG00… CYP51A1 Known   Known   <NA>       6691       3     -22\n# … with 214,506 more rows, 13 more variables: within_CAGE_peak <lgl>,\n#   dist_to_polyA_site <dbl>, within_polyA_site <lgl>, polyA_motif <chr>,\n#   dist_to_polyA_motif <dbl>, polyA_motif_found <lgl>, CAGE_support_100 <lgl>,\n#   CAGE_support_250 <lgl>, CAGE_support_500 <lgl>, PAS_motif_support_35 <lgl>,\n#   PAS_motif_support_50 <lgl>, PAS_motif_support_100 <lgl>,\n#   long_read_db <lgl>, and abbreviated variable names ¹​annot_transcript_id,\n#   ²​annot_gene_id, ³​annot_gene_name, ⁴​gene_novelty, ⁵​transcript_novelty, …\n\n\n\nsanity_check = whitelist_support %>% left_join(sqanti, by = c(\"annot_transcript_id\" = \"isoform\"))\nsanity_check %>% filter(within_CAGE_peak.x != within_CAGE_peak.y)\n\n# A tibble: 0 × 69\n# … with 69 variables: annot_transcript_id <chr>, annot_gene_id <chr>,\n#   annot_gene_name <chr>, gene_novelty <chr>, transcript_novelty <chr>,\n#   ISM_subtype <chr>, n_reads <dbl>, n_donors <dbl>,\n#   dist_to_CAGE_peak.x <dbl>, within_CAGE_peak.x <lgl>,\n#   dist_to_polyA_site.x <dbl>, within_polyA_site.x <lgl>, polyA_motif.x <chr>,\n#   dist_to_polyA_motif <dbl>, polyA_motif_found.x <lgl>,\n#   CAGE_support_100 <lgl>, CAGE_support_250 <lgl>, CAGE_support_500 <lgl>, …\n\nsanity_check %>% filter(is.na(within_CAGE_peak.x) & !within_CAGE_peak.y)\n\n# A tibble: 3,163 × 69\n   annot_trans…¹ annot…² annot…³ gene_…⁴ trans…⁵ ISM_s…⁶ n_reads n_don…⁷ dist_…⁸\n   <chr>         <chr>   <chr>   <chr>   <chr>   <chr>     <dbl>   <dbl>   <dbl>\n 1 ENST00000070… ENSG00… PKP2    Known   Known   <NA>         NA      NA      NA\n 2 ENST00000218… ENSG00… STAG2   Known   Known   <NA>         NA      NA      NA\n 3 ENST00000238… ENSG00… ZC2HC1C Known   Known   <NA>         NA      NA      NA\n 4 ENST00000245… ENSG00… RPL23   Known   Known   <NA>         NA      NA      NA\n 5 ENST00000252… ENSG00… FUT5    Known   Known   <NA>         NA      NA      NA\n 6 ENST00000254… ENSG00… UBE2L2  Known   Known   <NA>         NA      NA      NA\n 7 ENST00000254… ENSG00… ZSWIM4  Known   Known   <NA>         NA      NA      NA\n 8 ENST00000254… ENSG00… AL3919… Known   Known   <NA>         NA      NA      NA\n 9 ENST00000261… ENSG00… FOXN3   Known   Known   <NA>         NA      NA      NA\n10 ENST00000262… ENSG00… IKZF4   Known   Known   <NA>         NA      NA      NA\n# … with 3,153 more rows, 60 more variables: within_CAGE_peak.x <lgl>,\n#   dist_to_polyA_site.x <dbl>, within_polyA_site.x <lgl>, polyA_motif.x <chr>,\n#   dist_to_polyA_motif <dbl>, polyA_motif_found.x <lgl>,\n#   CAGE_support_100 <lgl>, CAGE_support_250 <lgl>, CAGE_support_500 <lgl>,\n#   PAS_motif_support_35 <lgl>, PAS_motif_support_50 <lgl>,\n#   PAS_motif_support_100 <lgl>, long_read_db <lgl>, chrom <chr>, strand <chr>,\n#   length <dbl>, exons <dbl>, structural_category <chr>, …\n\n\n\nsupport_for_plot = cts %>% select(transcript_id, transcript_novelty) %>%\n  left_join(\n    read_csv(\"data/within_CAGE/cpvz_refTSS_200_CAGE_results.csv\") %>%\n      mutate(CAGE_support = CAGE_support == \"yes\") %>%\n      dplyr::rename(within_CAGE_refTSS = \"CAGE_support\"),\n    by = c(\"transcript_id\" = \"transcript_ID\")\n  ) %>%\n  left_join(\n    read_csv(\"data/within_CAGE/cpvz_fetal_200_CAGE_results.csv\") %>%\n      mutate(CAGE_support = CAGE_support == \"yes\") %>%\n      dplyr::rename(within_CAGE_fetal = \"CAGE_support\"),\n    by = c(\"transcript_id\" = \"transcript_ID\")\n  ) %>%\n  left_join(\n    read_csv(\"data/within_ATAC/cpvz_Greenleaf_500_ATAC_results.csv\") %>%\n      mutate(CAGE_support = CAGE_support == \"yes\") %>%\n      dplyr::rename(within_ATAC_Greenleaf = \"CAGE_support\"),\n    by = c(\"transcript_id\" = \"transcript_ID\")\n  ) %>%\n  left_join(\n    read_csv(\"data/within_ATAC/cpvz_Nowakowski_500_ATAC_results.csv\") %>%\n      mutate(CAGE_support = CAGE_support == \"yes\") %>%\n      dplyr::rename(within_ATAC_Nowakowski = \"CAGE_support\"),\n    by = c(\"transcript_id\" = \"transcript_ID\")\n  ) %>%\n  left_join(\n    read_csv(\"data/within_ATAC/cpvz_LuisCP_500_ATAC_results.csv\") %>%\n      mutate(CAGE_support = CAGE_support == \"yes\") %>%\n      dplyr::rename(within_ATAC_LuisCP = \"CAGE_support\"),\n    by = c(\"transcript_id\" = \"transcript_ID\")\n  ) %>%\n  left_join(\n    read_csv(\"data/within_ATAC/cpvz_LuisVZ_500_ATAC_results.csv\") %>%\n      mutate(CAGE_support = CAGE_support == \"yes\") %>%\n      dplyr::rename(within_ATAC_LuisGZ = \"CAGE_support\"),\n    by = c(\"transcript_id\" = \"transcript_ID\")\n  ) %>%\n  left_join(\n    sqanti %>% select(isoform, within_polyA_site, polyA_motif_found),\n    by = c(\"transcript_id\" = \"isoform\")\n  ) %>%\n  mutate(across(!c(\"transcript_id\", \"transcript_novelty\"), ~replace_na(., F)))\n\nRows: 214516 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): transcript_ID, CAGE_support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 214516 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): transcript_ID, CAGE_support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 214516 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): transcript_ID, CAGE_support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 214516 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): transcript_ID, CAGE_support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 214516 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): transcript_ID, CAGE_support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 214516 Columns: 2\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): transcript_ID, CAGE_support\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nsupport_for_plot\n\n# A tibble: 214,516 × 10\n   transcript_id trans…¹ withi…² withi…³ withi…⁴ withi…⁵ withi…⁶ withi…⁷ withi…⁸\n   <chr>         <fct>   <lgl>   <lgl>   <lgl>   <lgl>   <lgl>   <lgl>   <lgl>  \n 1 ENST00000494… Known   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE  \n 2 ENST00000424… Known   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE  \n 3 ENST00000445… Known   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE  \n 4 ENST00000457… Known   TRUE    TRUE    TRUE    TRUE    FALSE   FALSE   TRUE   \n 5 ENST00000414… Known   TRUE    FALSE   FALSE   FALSE   FALSE   FALSE   TRUE   \n 6 ENST00000655… Known   FALSE   TRUE    TRUE    TRUE    FALSE   FALSE   FALSE  \n 7 ENST00000457… Known   FALSE   TRUE    TRUE    TRUE    FALSE   FALSE   FALSE  \n 8 ENST00000591… Known   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   TRUE   \n 9 ENST00000644… Known   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE   FALSE  \n10 ENST00000445… Known   TRUE    TRUE    TRUE    TRUE    FALSE   FALSE   TRUE   \n# … with 214,506 more rows, 1 more variable: polyA_motif_found <lgl>, and\n#   abbreviated variable names ¹​transcript_novelty, ²​within_CAGE_refTSS,\n#   ³​within_CAGE_fetal, ⁴​within_ATAC_Greenleaf, ⁵​within_ATAC_Nowakowski,\n#   ⁶​within_ATAC_LuisCP, ⁷​within_ATAC_LuisGZ, ⁸​within_polyA_site\n\n\n\nsupport_for_plot2 = support_for_plot %>%\n  group_by(transcript_novelty) %>%\n  summarize(\n#    any_5p = sum(within_CAGE_refTSS | within_CAGE_fetal | within_ATAC_Greenleaf | within_ATAC_Nowakowski, na.rm = T),\n    within_CAGE_peak = sum(within_CAGE_refTSS | within_CAGE_fetal, na.rm = T),\n    within_ATAC_peak = sum(within_ATAC_Greenleaf | within_ATAC_Nowakowski | within_ATAC_LuisCP | within_ATAC_LuisGZ, na.rm = T),\n#    any_3p = sum(within_polyA_site | polyA_motif_found, na.rm = T),\n    within_polyA_site = sum(within_polyA_site, na.rm = T),\n    polyA_motif_found = sum(polyA_motif_found, na.rm = T),\n    n = n()\n  ) %>%\n  pivot_longer(!c(\"transcript_novelty\", \"n\")) %>%\n  mutate(prop = value / n) %>%\n  mutate(end = if_else(name %in% c(\"within_polyA_site\", \"polyA_motif_found\", \"any_3p\"), \"3′-end support\", \"5′-end support\")) %>%\n  mutate(end = end %>% factor(levels = c(\"5′-end support\", \"3′-end support\"))) %>%\n  mutate(name = name %>% as_factor()) %>%\n  mutate(transcript_novelty = transcript_novelty %>% fct_relevel(\"Known\") %>% fct_other(drop = c(\"Antisense\", \"Intergenic\", \"Genomic\")))\nsupport_for_plot2\n\n# A tibble: 28 × 6\n   transcript_novelty     n name              value  prop end           \n   <fct>              <int> <fct>             <int> <dbl> <fct>         \n 1 ISM                83089 within_CAGE_peak  41387 0.498 5′-end support\n 2 ISM                83089 within_ATAC_peak  45668 0.550 5′-end support\n 3 ISM                83089 within_polyA_site 63833 0.768 3′-end support\n 4 ISM                83089 polyA_motif_found 65760 0.791 3′-end support\n 5 Known              65006 within_CAGE_peak  49495 0.761 5′-end support\n 6 Known              65006 within_ATAC_peak  54138 0.833 5′-end support\n 7 Known              65006 within_polyA_site 42187 0.649 3′-end support\n 8 Known              65006 polyA_motif_found 41856 0.644 3′-end support\n 9 NIC                50621 within_CAGE_peak  49442 0.977 5′-end support\n10 NIC                50621 within_ATAC_peak  49674 0.981 5′-end support\n# … with 18 more rows\n\n\n\nggplot(support_for_plot2, aes(x = prop, y = transcript_novelty, fill = fct_rev(name))) +\n  geom_col(position = \"dodge\") +\n  scale_y_discrete(limits = rev) +\n  scale_fill_manual(\n    limits = c(\"within_CAGE_peak\", \"within_ATAC_peak\", \"within_polyA_site\", \"polyA_motif_found\"),\n    labels = c(\"CAGE\", \"ATAC-seq\", \"polyA site\", \"polyA motif\"),\n    values = c(\"#00bfc4\", \"#00a9ff\", \"#c77cff\", \"#ff61cc\")\n  ) +\n  labs(\n    x = \"Proportion of transcripts\",\n    y = NULL,\n    fill = NULL\n  ) +\n  guides(\n    fill = guide_legend(ncol = 2)\n  ) +\n  theme(\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    legend.position = \"bottom\",\n    panel.spacing = unit(2, \"lines\"),\n    plot.margin = margin(11, 11, 11, 11, \"points\")\n  ) +\n  facet_wrap(vars(end))\n\n\n\n\n\n#ggsave(\"output/figures/Fig1_external_support_v8.png\", width = 11, height = 8.5, units = \"in\", dpi = 300)\nggsave(\"output/figures/Fig2/Fig2B_external_support_v2.pdf\", width = 8, height = 6, units = \"in\", dpi = 300, device=cairo_pdf)\n\n\ntableS1 = talon_gtf %>%\n  select(seqnames, start, end, strand, gene_id, gene_name, gene_status, gene_type, transcript_id, transcript_status, transcript_type) %>%\n  left_join(\n    cts %>% select(transcript_id, gene_novelty, transcript_novelty, ISM_subtype, n_exons, length),\n    by = \"transcript_id\"\n  ) %>%\n  left_join(\n    support_for_plot,\n    by = c(\"transcript_id\", \"transcript_novelty\")\n  ) %>%\n#  dplyr::rename(gencode_gene_type = \"gene_type\", gencode_transcript_type = \"transcript_type\") %>%\n  relocate(gene_novelty, .after = gene_type) %>%\n  mutate(\n    within_CAGE_peak = within_CAGE_refTSS | within_CAGE_fetal,\n    within_ATAC_peak = within_ATAC_Greenleaf | within_ATAC_Nowakowski | within_ATAC_LuisCP | within_ATAC_LuisGZ,\n    .keep = \"unused\",\n    .before = within_polyA_site\n  )\ntableS1\n\n# A tibble: 214,516 × 20\n   seqnames start   end strand gene_id   gene_…¹ gene_…² gene_…³ gene_…⁴ trans…⁵\n   <fct>    <int> <int> <fct>  <chr>     <chr>   <chr>   <chr>   <fct>   <chr>  \n 1 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 2 chr1     14404 21859 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 3 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 4 chr1     14404 21119 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 5 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 6 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 7 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 8 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n 9 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n10 chr1     14404 29570 -      ENSG0000… WASH7P  KNOWN   unproc… Known   TALONT…\n# … with 214,506 more rows, 10 more variables: transcript_status <chr>,\n#   transcript_type <chr>, transcript_novelty <fct>, ISM_subtype <fct>,\n#   n_exons <dbl>, length <dbl>, within_CAGE_peak <lgl>,\n#   within_ATAC_peak <lgl>, within_polyA_site <lgl>, polyA_motif_found <lgl>,\n#   and abbreviated variable names ¹​gene_name, ²​gene_status, ³​gene_type,\n#   ⁴​gene_novelty, ⁵​transcript_id\n\n\n\ntableS1 %>%\n  write_tsv(\"output/tables/TableS1_v5.tsv.gz\")\n\nNumbers for manuscript text:\n\ntableS1 %>% count(transcript_status)\n\n# A tibble: 2 × 2\n  transcript_status      n\n  <chr>              <int>\n1 KNOWN              65006\n2 NOVEL             149510\n\ntableS1Novel1 = tableS1 %>%\n  filter(transcript_novelty %in% c(\"NIC\", \"NNC\"))\n\ntableS1Novel1 %>%\n  summarize(n = n(), n_genes = n_distinct(gene_id))\n\n# A tibble: 1 × 2\n      n n_genes\n  <int>   <int>\n1 65184   10175\n\ntableS1Novel2 = tableS1 %>%\n  filter(transcript_novelty %in% c(\"NIC\", \"NNC\", \"ISM\"))\n\ntableS1Novel2 %>%\n  count(within_CAGE_peak, within_ATAC_peak) %>%\n  mutate(prop = n/nrow(tableS1Novel2))\n\n# A tibble: 4 × 4\n  within_CAGE_peak within_ATAC_peak     n   prop\n  <lgl>            <lgl>            <int>  <dbl>\n1 FALSE            FALSE            28580 0.193 \n2 FALSE            TRUE             15183 0.102 \n3 TRUE             FALSE            10204 0.0688\n4 TRUE             TRUE             94306 0.636 \n\ntableS1Novel2 %>% count(within_CAGE_peak) %>% mutate(prop = n/nrow(tableS1Novel2))\n\n# A tibble: 2 × 3\n  within_CAGE_peak      n  prop\n  <lgl>             <int> <dbl>\n1 FALSE             43763 0.295\n2 TRUE             104510 0.705\n\ntableS1Novel2 %>% count(within_ATAC_peak) %>% mutate(prop = n/nrow(tableS1Novel2))\n\n# A tibble: 2 × 3\n  within_ATAC_peak      n  prop\n  <lgl>             <int> <dbl>\n1 FALSE             38784 0.262\n2 TRUE             109489 0.738\n\ntableS1Novel2 %>%\n  count(within_polyA_site, polyA_motif_found) %>%\n  mutate(prop = n/nrow(tableS1Novel2))\n\n# A tibble: 4 × 4\n  within_polyA_site polyA_motif_found      n   prop\n  <lgl>             <lgl>              <int>  <dbl>\n1 FALSE             FALSE              13342 0.0900\n2 FALSE             TRUE               13429 0.0906\n3 TRUE              FALSE              12279 0.0828\n4 TRUE              TRUE              109223 0.737 \n\ntableS1 %>%\n  filter(transcript_novelty %in% c(\"Known\", \"ISM\")) %>%\n  count(transcript_novelty, within_polyA_site | polyA_motif_found)\n\n# A tibble: 4 × 3\n  transcript_novelty `within_polyA_site | polyA_motif_found`     n\n  <fct>              <lgl>                                   <int>\n1 ISM                FALSE                                    9997\n2 ISM                TRUE                                    73092\n3 Known              FALSE                                   15470\n4 Known              TRUE                                    49536\n\n\nSplice junctions from SQANTI:\n\nsqantiJunc = read_tsv(\"data/sqanti/cp_vz_0.75_min_7_recovery_talon_junctions.txt.gz\")\n\nRows: 1901871 Columns: 24\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (10): isoform, chrom, strand, junction_number, transcript_coord, junctio...\ndbl  (9): genomic_start_coord, genomic_end_coord, diff_to_Ref_start_site, di...\nlgl  (5): bite_junction, RTS_junction, indel_near_junct, phyloP_start, phylo...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nuniqueJunc = sqantiJunc %>%\n  group_by(chrom, strand, genomic_start_coord, genomic_end_coord) %>%\n  summarize(\n    n = sum(intropolis.v1.hg19.tsv.min_count_10_unique),\n    intropolis_support = n > 0,\n    novel = all(junction_category == \"novel\"),\n    canonical = all(canonical == \"canonical\"),\n    .groups = \"drop\"\n  )\n\nuniqueJunc %>% count(intropolis_support) %>% mutate(prop = n/nrow(uniqueJunc))\n\n# A tibble: 2 × 3\n  intropolis_support      n   prop\n  <lgl>               <int>  <dbl>\n1 FALSE               10896 0.0471\n2 TRUE               220360 0.953 \n\nuniqueJunc %>% count(novel) %>% mutate(prop = n/nrow(uniqueJunc))\n\n# A tibble: 2 × 3\n  novel      n  prop\n  <lgl>  <int> <dbl>\n1 FALSE 193141 0.835\n2 TRUE   38115 0.165\n\nuniqueJunc %>% filter(novel) %>% count(intropolis_support) %>% mutate(prop = n/nrow(uniqueJunc %>% filter(novel)))\n\n# A tibble: 2 × 3\n  intropolis_support     n  prop\n  <lgl>              <int> <dbl>\n1 FALSE               9862 0.259\n2 TRUE               28253 0.741\n\n\nProblematic spliceJns.txt gives us 57.5% novel SJs:\n\ngencodeJuncOld = read_tsv(\"data/splice_junctions/spliceJns.problematic.txt\", col_names = c(\"chrom\", \"genomic_start_coord\", \"genomic_end_coord\", \"strand\")) %>%\n  select(!starts_with(\"X\")) %>%\n  mutate(strand = case_when(strand == 1 ~ \"+\", strand == 2 ~ \"-\")) %>%\n  mutate(novel2 = FALSE)\n\nRows: 474236 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): chrom\ndbl (5): genomic_start_coord, genomic_end_coord, strand, X5, X6\nlgl (3): X7, X8, X9\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nuniqueJunc2 = uniqueJunc %>% left_join(gencodeJuncOld) %>% mutate(novel2 = replace_na(novel2, TRUE))\n\nJoining, by = c(\"chrom\", \"strand\", \"genomic_start_coord\", \"genomic_end_coord\")\n\nuniqueJunc2 %>% count(novel2) %>% mutate(prop = n/nrow(uniqueJunc2))\n\n# A tibble: 2 × 3\n  novel2      n  prop\n  <lgl>   <int> <dbl>\n1 FALSE   98334 0.425\n2 TRUE   132922 0.575\n\n\nUpdated spliceJns.txt agrees with SQANTI:\n\ngencodeJunc = read_tsv(\"data/splice_junctions/spliceJns.exon_reorder.txt\", col_names = c(\"chrom\", \"genomic_start_coord\", \"genomic_end_coord\", \"strand\")) %>%\n  select(!starts_with(\"X\")) %>%\n  mutate(strand = case_when(strand == 1 ~ \"+\", strand == 2 ~ \"-\")) %>%\n  mutate(novel2 = FALSE)\n\nRows: 383616 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): chrom\ndbl (5): genomic_start_coord, genomic_end_coord, strand, X5, X6\nlgl (3): X7, X8, X9\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nuniqueJunc2 = uniqueJunc %>% left_join(gencodeJunc) %>% mutate(novel2 = replace_na(novel2, TRUE))\n\nJoining, by = c(\"chrom\", \"strand\", \"genomic_start_coord\", \"genomic_end_coord\")\n\nuniqueJunc2 %>% count(novel2) %>% mutate(prop = n/nrow(uniqueJunc2))\n\n# A tibble: 2 × 3\n  novel2      n  prop\n  <lgl>   <int> <dbl>\n1 FALSE  192904 0.834\n2 TRUE    38352 0.166\n\n\nJoining with intropolis junctions also agrees with SQANTI:\n\nintropJunc = read_tsv(\"ref/intropolis/intropolis_v1_hg19_2samples_10counts_starSJout.tsv.gz\", col_names = c(\"chrom\", \"genomic_start_coord\", \"genomic_end_coord\", \"strand\")) %>%\n  select(!starts_with(\"X\")) %>%\n  mutate(strand = case_when(strand == 1 ~ \"+\", strand == 2 ~ \"-\")) %>%\n  mutate(intropolis_support2 = TRUE)\n\nRows: 4974342 Columns: 10\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (1): chrom\ndbl (8): genomic_start_coord, genomic_end_coord, strand, X5, X6, X7, X8, X9\nlgl (1): X10\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nuniqueJunc2 = uniqueJunc %>%\n  left_join(intropJunc) %>%\n  mutate(intropolis_support2 = replace_na(intropolis_support2, FALSE))\n\nJoining, by = c(\"chrom\", \"strand\", \"genomic_start_coord\", \"genomic_end_coord\")\n\nuniqueJunc2 %>% count(intropolis_support2) %>% mutate(prop = n/nrow(uniqueJunc2))\n\n# A tibble: 2 × 3\n  intropolis_support2      n   prop\n  <lgl>                <int>  <dbl>\n1 FALSE                10897 0.0471\n2 TRUE                220359 0.953"
  },
  {
    "objectID": "code/Fig1_MetaCoverage.html",
    "href": "code/Fig1_MetaCoverage.html",
    "title": "Figure 1 - MetaCoverage",
    "section": "",
    "text": "The purpose of this notebook is to generate a figure similar to Fig. 1h of this paper:\nFLAM-seq: full-length mRNA sequencing reveals principles of poly(A) tail length control\nIt is based on two files shared with Ashok by the authors:"
  },
  {
    "objectID": "code/Fig1_MetaCoverage.html#show-all-genes-with-gene-length-15000-cut-off",
    "href": "code/Fig1_MetaCoverage.html#show-all-genes-with-gene-length-15000-cut-off",
    "title": "Figure 1 - MetaCoverage",
    "section": "Show all genes, with gene length > 15000 cut off",
    "text": "Show all genes, with gene length > 15000 cut off\n\nhela_merge_gene_protCodingW5_absCov=computeMetaDfAverages(hela_merge_gene_protCodingMetaCoverageW5,\n                                                          helaMergeMetaCleanW5TransLen, 15000)\n\n\nplt.rcParams['pdf.fonttype'] = 42 # use truetype so that whole font gets embedded and can be read by illustrator\nplt.rcParams[\"font.family\"] = \"Helvetica\" # match R plots\nplt.figure(figsize=(4,7), dpi=300, facecolor=(1,1,1))\nim = plt.imshow(hela_merge_gene_protCodingW5_absCov,\n           vmin=0, vmax=1, \n           aspect='auto', #\n           interpolation='none')\naxes = plt.gca()\naxes.set_xlim([0,15000])\nplt.xlabel('Position on Gene 5\\' - 3\\'')\nplt.ylabel('Genes Sorted by Length')\n\n#cbar = plt.colorbar(im, orientation=\"horizontal\")\n#cbar.set_label(\"Relative coverage\")\n#plt.savefig('/Users/jops/lab/isoseq-plots/final/metacov_legend.pdf')\n\n#plt.savefig('/Users/jops/lab/isoseq-plots/final/metacov.pdf')\nplt.savefig('output/figures/Fig1/Fig1_MetaCoverage.pdf')\n#plt.show()"
  },
  {
    "objectID": "code/Fig1_MetaCoverage.html#show-only-genes-with-length-5000",
    "href": "code/Fig1_MetaCoverage.html#show-only-genes-with-length-5000",
    "title": "Figure 1 - MetaCoverage",
    "section": "Show only genes with length <= 5000",
    "text": "Show only genes with length <= 5000\n\nhela_merge_gene_protCodingW5_absCov=computeMetaDfAveragesNew(hela_merge_gene_protCodingMetaCoverageW5,\n                                                             helaMergeMetaCleanW5TransLen, 5000)\n\nnum_genes 8274\nmax_len 5000\n\n\n\nplt.figure(figsize=(4,7), dpi=300, facecolor=(1,1,1))\nplt.imshow(hela_merge_gene_protCodingW5_absCov,\n           vmin=0, vmax=1, \n           #aspect='auto',\n           interpolation='none')\naxes = plt.gca()\naxes.set_xlim([0,5000])\nplt.xlabel('Position on Gene 5\\' - 3\\'')\nplt.ylabel('Genes Sorted by Length')\n\nText(0, 0.5, 'Genes Sorted by Length')"
  },
  {
    "objectID": "code/Fig1_MetaCoverage.html#sort-by-expression",
    "href": "code/Fig1_MetaCoverage.html#sort-by-expression",
    "title": "Figure 1 - MetaCoverage",
    "section": "Sort by expression",
    "text": "Sort by expression\n\nhelaMergeMetaCleanW5TransLen\n\n\n\n\n\n  \n    \n      \n      gene\n      len\n    \n  \n  \n    \n      6992\n      AC022506.1\n      103\n    \n    \n      7005\n      CYP27B1\n      105\n    \n    \n      4647\n      AC083862.1\n      118\n    \n    \n      10226\n      CEACAM19\n      119\n    \n    \n      4072\n      AL035699.1\n      127\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      2305\n      ZBTB20\n      28469\n    \n    \n      3898\n      DST\n      31630\n    \n    \n      7806\n      FLRT2\n      33701\n    \n    \n      285\n      MACF1\n      34151\n    \n    \n      4124\n      SYNE1\n      34491\n    \n  \n\n11649 rows × 2 columns\n\n\n\n\nhela_merge_gene_protCodingMetaCoverageW5\n\n{'NOC2L': array([21., 21., 21., ..., 17., 17., 13.]),\n 'KLHL17': array([5., 5., 5., ..., 5., 5., 5.]),\n 'HES4': array([ 6.,  6.,  6., ..., 21., 21., 17.]),\n 'C1orf159': array([0., 0., 0., ..., 7., 7., 3.]),\n 'SDF4': array([ 2.,  2.,  2., ..., 19., 19., 19.]),\n 'UBE2J2': array([2., 2., 2., ..., 9., 9., 9.]),\n 'ACAP3': array([ 8.,  8.,  8., ..., 11., 11., 11.]),\n 'PUSL1': array([9., 9., 9., ..., 9., 9., 9.]),\n 'INTS11': array([ 2.,  2.,  2., ..., 19., 19., 19.]),\n 'CPTP': array([9., 9., 9., ..., 5., 5., 5.]),\n 'MXRA8': array([ 0.,  0.,  0., ..., 11.,  5.,  3.]),\n 'AURKAIP1': array([ 2.,  2.,  2., ..., 11., 11.,  9.]),\n 'CCNL2': array([16., 16., 16., ..., 11., 11., 11.]),\n 'MRPL20': array([ 4.,  4.,  4., ..., 11., 11., 11.]),\n 'ATAD3B': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'ATAD3A': array([7., 7., 7., ..., 7., 7., 7.]),\n 'TMEM240': array([2., 2., 2., ..., 3., 3., 3.]),\n 'SSU72': array([2., 2., 2., ..., 7., 7., 7.]),\n 'MIB2': array([ 0.,  0.,  0., ..., 19., 19., 15.]),\n 'CDK11B': array([6., 6., 6., ..., 9., 9., 9.]),\n 'SLC35E2B': array([1., 1., 1., ..., 6., 6., 6.]),\n 'CDK11A': array([14., 14., 14., ..., 15., 15., 15.]),\n 'SLC35E2A': array([16., 16., 16., ...,  7.,  7.,  7.]),\n 'NADK': array([0., 0., 0., ..., 5., 5., 5.]),\n 'GNB1': array([ 2.,  2.,  2., ..., 35., 35., 35.]),\n 'TMEM52': array([4., 4., 4., ..., 7., 7., 7.]),\n 'PRKCZ': array([ 0.,  0.,  0., ..., 23., 17., 17.]),\n 'FAAP20': array([10., 10., 10., ..., 13.,  7.,  7.]),\n 'MORN1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'RER1': array([3., 3., 3., ..., 4., 4., 4.]),\n 'PEX10': array([0., 0., 0., ..., 5., 5., 5.]),\n 'PANK4': array([2., 2., 2., ..., 5., 5., 5.]),\n 'PRXL2B': array([3., 3., 3., ..., 5., 5., 5.]),\n 'PRDM16': array([3., 3., 3., ..., 3., 3., 3.]),\n 'TPRG1L': array([5., 5., 5., ..., 5., 5., 5.]),\n 'WRAP73': array([ 0.,  0.,  0., ..., 17.,  5.,  5.]),\n 'LRRC47': array([17., 17., 17., ...,  3.,  3.,  3.]),\n 'CEP104': array([2., 2., 2., ..., 3., 3., 3.]),\n 'DFFB': array([9., 9., 9., ..., 7., 7., 7.]),\n 'C1orf174': array([7., 7., 7., ..., 7., 7., 7.]),\n 'KCNAB2': array([0., 0., 0., ..., 2., 2., 2.]),\n 'CHD5': array([7., 7., 7., ..., 3., 3., 3.]),\n 'RPL22': array([ 2.,  2.,  2., ..., 25., 25., 25.]),\n 'ICMT': array([7., 7., 7., ..., 3., 3., 3.]),\n 'ACOT7': array([0., 0., 0., ..., 5., 5., 5.]),\n 'TNFRSF25': array([5., 5., 5., ..., 3., 3., 3.]),\n 'PLEKHG5': array([0., 0., 0., ..., 5., 5., 5.]),\n 'NOL9': array([25., 25., 25., ...,  3.,  3.,  3.]),\n 'ZBTB48': array([11., 11., 11., ..., 11., 11., 11.]),\n 'PHF13': array([5., 5., 5., ..., 2., 2., 2.]),\n 'THAP3': array([3., 3., 3., ..., 8., 8., 8.]),\n 'DNAJC11': array([2., 2., 2., ..., 5., 5., 5.]),\n 'CAMTA1': array([5., 5., 5., ..., 6., 6., 6.]),\n 'VAMP3': array([5., 5., 5., ..., 2., 2., 2.]),\n 'PER3': array([7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 4.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3.]),\n 'PARK7': array([ 0.,  0.,  0., ..., 21., 21., 21.]),\n 'ERRFI1': array([6., 6., 6., ..., 5., 5., 5.]),\n 'SLC45A1': array([9., 9., 9., ..., 9., 9., 2.]),\n 'RERE': array([0., 0., 0., ..., 7., 7., 3.]),\n 'ENO1': array([ 4.,  4.,  4., ..., 27., 27., 27.]),\n 'SLC25A33': array([7., 7., 7., ..., 2., 2., 2.]),\n 'TMEM201': array([5., 5., 5., ..., 2., 2., 2.]),\n 'CLSTN1': array([7., 7., 7., ..., 5., 5., 5.]),\n 'CTNNBIP1': array([ 7.,  7.,  7., ..., 14., 14., 14.]),\n 'LZIC': array([4., 4., 4., ..., 4., 4., 4.]),\n 'NMNAT1': array([5., 7., 7., ..., 2., 2., 2.]),\n 'UBE4B': array([3., 3., 3., ..., 3., 3., 3.]),\n 'KIF1B': array([91., 91., 91., ..., 11., 11., 11.]),\n 'PGD': array([ 0.,  0.,  0., ..., 10., 10., 10.]),\n 'CENPS-CORT': array([0., 0., 0., ..., 4., 4., 4.]),\n 'CENPS': array([ 8.,  8.,  8., ..., 10., 10., 10.]),\n 'CORT': array([8., 8., 8., ..., 7., 7., 7.]),\n 'DFFA': array([4., 4., 4., ..., 3., 3., 3.]),\n 'PEX14': array([9., 9., 9., ..., 5., 5., 5.]),\n 'TARDBP': array([0., 0., 0., ..., 4., 4., 4.]),\n 'AL109811.3': array([26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 24., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.]),\n 'SRM': array([25., 25., 25., ..., 27., 27., 27.]),\n 'EXOSC10': array([6., 6., 6., ..., 7., 7., 7.]),\n 'MTOR': array([5., 5., 5., ..., 3., 3., 3.]),\n 'UBIAD1': array([3., 3., 3., ..., 3., 3., 3.]),\n 'DISP3': array([ 7.,  7.,  7., ..., 11., 11., 11.]),\n 'FBXO44': array([0., 0., 0., ..., 6., 6., 6.]),\n 'FBXO6': array([5., 5., 5., ..., 2., 2., 2.]),\n 'MAD2L2': array([ 2.,  2.,  2., ..., 15., 15., 15.]),\n 'DRAXIN': array([17., 17., 17., ...,  3.,  3.,  3.]),\n 'AGTRAP': array([1., 1., 1., ..., 7., 7., 3.]),\n 'MTHFR': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CLCN6': array([0., 0., 0., ..., 2., 2., 2.]),\n 'KIAA2013': array([3., 5., 5., ..., 3., 3., 3.]),\n 'MFN2': array([7., 7., 7., ..., 2., 2., 2.]),\n 'MIIP': array([17., 17., 17., ...,  7.,  7.,  4.]),\n 'TNFRSF1B': array([5., 5., 5., ..., 2., 2., 2.]),\n 'VPS13D': array([15., 15., 15., ...,  3.,  3.,  3.]),\n 'PDPN': array([3., 3., 3., ..., 4., 4., 4.]),\n 'PRDM2': array([23., 23., 23., ...,  6.,  6.,  6.]),\n 'KAZN': array([0., 0., 0., ..., 2., 2., 2.]),\n 'TMEM51': array([3., 3., 3., ..., 5., 5., 5.]),\n 'CASP9': array([0., 0., 0., ..., 3., 3., 3.]),\n 'DNAJC16': array([9., 9., 9., ..., 4., 4., 2.]),\n 'DDI2': array([5., 5., 5., ..., 2., 2., 2.]),\n 'RSC1A1': array([8., 8., 8., ..., 5., 5., 5.]),\n 'PLEKHM2': array([0., 0., 0., ..., 7., 7., 7.]),\n 'FBLIM1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'SPEN': array([0., 0., 0., ..., 5., 5., 5.]),\n 'ZBTB17': array([ 2.,  2.,  2., ..., 21., 21.,  9.]),\n 'EPHA2': array([2., 2., 2., ..., 3., 3., 3.]),\n 'FBXO42': array([13., 13., 13., ...,  3.,  3.,  3.]),\n 'SZRD1': array([3., 3., 3., ..., 6., 4., 4.]),\n 'NECAP2': array([0., 0., 0., ..., 8., 8., 8.]),\n 'NBPF1': array([76., 76., 76., ..., 11., 11., 11.]),\n 'CROCC': array([ 1.,  1.,  1., ..., 25., 25., 25.]),\n 'MFAP2': array([21., 21., 21., ..., 27., 27., 27.]),\n 'ATP13A2': array([13., 13., 13., ..., 19., 19., 19.]),\n 'SDHB': array([ 9., 11., 11., ...,  9.,  9.,  9.]),\n 'RCC2': array([7., 7., 7., ..., 5., 5., 5.]),\n 'ARHGEF10L': array([3., 3., 3., ..., 3., 3., 3.]),\n 'IGSF21': array([13., 13., 13., ..., 17., 17., 17.]),\n 'UBR4': array([0., 0., 0., ..., 6., 6., 6.]),\n 'EMC1': array([ 7.,  7., 11., ...,  3.,  3.,  3.]),\n 'MRTO4': array([7., 7., 7., ..., 2., 2., 2.]),\n 'AKR7A3': array([5., 5., 5., ..., 6., 6., 6.]),\n 'AKR7A2': array([ 4.,  4.,  4., ..., 11., 11., 11.]),\n 'SLC66A1': array([9., 9., 9., ..., 4., 4., 4.]),\n 'CAPZB': array([10., 10., 10., ..., 11., 11., 11.]),\n 'MICOS10': array([0., 0., 0., ..., 4., 4., 4.]),\n 'NBL1': array([5., 5., 5., ..., 5., 5., 5.]),\n 'OTUD3': array([25., 25., 25., ...,  6.,  6.,  6.]),\n 'CAMK2N1': array([4., 4., 4., ..., 5., 5., 5.]),\n 'MUL1': array([5., 5., 5., ..., 3., 3., 3.]),\n 'PINK1': array([5., 5., 5., ..., 4., 4., 4.]),\n 'DDOST': array([2., 2., 2., ..., 3., 3., 3.]),\n 'HP1BP3': array([21., 21., 21., ..., 37., 37., 37.]),\n 'EIF4G3': array([6., 6., 6., ..., 8., 8., 8.]),\n 'ECE1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'NBPF3': array([0., 0., 0., ..., 5., 5., 5.]),\n 'RAP1GAP': array([0., 0., 0., ..., 5., 5., 5.]),\n 'USP48': array([2., 2., 2., ..., 9., 9., 9.]),\n 'CDC42': array([8., 8., 8., ..., 5., 5., 5.]),\n 'WNT4': array([0., 0., 0., ..., 3., 3., 3.]),\n 'ZBTB40': array([0., 0., 0., ..., 2., 2., 2.]),\n 'C1QA': array([5., 5., 5., ..., 2., 2., 2.]),\n 'EPHB2': array([5., 5., 5., ..., 2., 2., 2.]),\n 'KDM1A': array([23., 23., 23., ...,  9.,  9.,  9.]),\n 'LUZP1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'HNRNPR': array([ 4.,  4.,  4., ..., 49., 25., 25.]),\n 'ZNF436': array([2., 2., 2., ..., 3., 3., 3.]),\n 'E2F2': array([5., 5., 5., ..., 4., 4., 4.]),\n 'RPL11': array([ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 33., 33., 33., 33., 33., 33., 33., 33., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        34., 34., 34., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39., 39.,\n        39., 39., 39., 39., 39., 39., 39., 39., 40., 40., 40., 40., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41.,\n        41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 41., 36., 36.,\n        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,\n        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,\n        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,\n        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,\n        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,\n        36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36., 36.,\n        36., 36., 36., 36., 36., 36., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 21., 21.,\n        21., 21., 21.,  8.,  6.,  6.,  6.,  6.,  6.,  6.]),\n 'ELOA': array([3., 3., 3., ..., 2., 2., 2.]),\n 'PITHD1': array([15., 15., 15., ...,  4.,  4.,  4.]),\n 'LYPLA2': array([11., 11., 11., ..., 12., 12., 12.]),\n 'GALE': array([ 4.,  4.,  4., ..., 15., 15., 15.]),\n 'HMGCL': array([4., 9., 9., ..., 5., 5., 3.]),\n 'FUCA1': array([4., 4., 4., ..., 7., 7., 7.]),\n 'PNRC2': array([0., 0., 0., ..., 2., 2., 2.]),\n 'SRSF10': array([14., 14., 14., ..., 19., 19., 19.]),\n 'STPG1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'NIPAL3': array([3., 5., 5., ..., 2., 2., 2.]),\n 'RCAN3': array([5., 5., 5., ..., 4., 4., 4.]),\n 'SRRM1': array([ 0.,  0.,  0., ..., 15., 15., 15.]),\n 'CLIC4': array([17., 17., 17., ...,  2.,  2.,  2.]),\n 'SYF2': array([13., 13., 13., ...,  5.,  5.,  5.]),\n 'RSRP1': array([ 0.,  0.,  0., ..., 15., 15., 15.]),\n 'TMEM50A': array([23., 23., 23., ...,  8.,  8.,  8.]),\n 'MACO1': array([19., 19., 19., ...,  6.,  6.,  6.]),\n 'MTFR1L': array([0., 0., 0., ..., 4., 4., 4.]),\n 'STMN1': array([ 3.,  3.,  3., ..., 47., 47., 47.]),\n 'PAFAH2': array([4., 4., 4., ..., 7., 7., 7.]),\n 'PDIK1L': array([7., 7., 7., ..., 2., 2., 2.]),\n 'ZNF593': array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.]),\n 'CEP85': array([11., 11., 13., ...,  3.,  3.,  3.]),\n 'SH3BGRL3': array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7.]),\n 'UBXN11': array([ 0.,  0.,  0., ..., 19.,  9.,  9.]),\n 'DHDDS': array([3., 3., 3., ..., 3., 3., 3.]),\n 'HMGN2': array([26., 26., 26., ..., 32., 32., 32.]),\n 'ARID1A': array([0., 0., 0., ..., 4., 4., 4.]),\n 'PIGV': array([0., 0., 0., ..., 4., 4., 4.]),\n 'GPATCH3': array([9., 9., 9., ..., 7., 7., 7.]),\n 'NUDC': array([0., 0., 0., ..., 6., 6., 6.]),\n 'TRNP1': array([3., 3., 3., ..., 2., 2., 2.]),\n 'SLC9A1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'WDTC1': array([5., 5., 5., ..., 2., 2., 2.]),\n 'TMEM222': array([3., 3., 3., ..., 4., 4., 4.]),\n 'WASF2': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'AHDC1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'IFI6': array([3., 3., 3., 3., 3., 3., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 5.]),\n 'FAM76A': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'STX12': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'PPP1R8': array([5., 5., 5., ..., 6., 6., 6.]),\n 'RPA2': array([2., 2., 2., ..., 5., 5., 5.]),\n 'XKR8': array([5., 5., 5., ..., 5., 5., 5.]),\n 'EYA3': array([2., 2., 2., ..., 5., 3., 3.]),\n 'DNAJC8': array([12., 12., 12., ...,  7.,  7.,  7.]),\n 'ATP5IF1': array([5., 5., 5., ..., 2., 2., 2.]),\n 'SESN2': array([5., 5., 5., ..., 2., 2., 2.]),\n 'MED18': array([7., 7., 7., ..., 7., 7., 7.]),\n 'PHACTR4': array([15., 15., 15., ...,  7.,  7.,  7.]),\n 'RCC1': array([3., 3., 3., ..., 2., 2., 2.]),\n 'TRNAU1AP': array([17., 17., 17., ...,  4.,  4.,  4.]),\n 'TAF12': array([9., 9., 9., ..., 3., 3., 3.]),\n 'GMEB1': array([3., 3., 3., ..., 2., 2., 2.]),\n 'YTHDF2': array([0., 0., 0., ..., 7., 7., 7.]),\n 'EPB41': array([0., 0., 0., ..., 6., 6., 6.]),\n 'SRSF4': array([10., 10., 10., ..., 19., 19., 19.]),\n 'MECR': array([9., 9., 9., ..., 3., 3., 3.]),\n 'PUM1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'NKAIN1': array([7., 7., 7., ..., 7., 7., 7.]),\n 'SNRNP40': array([4., 4., 4., ..., 7., 7., 7.]),\n 'ZCCHC17': array([15., 15., 15., ...,  6.,  6.,  6.]),\n 'FABP3': array([0., 0., 0., ..., 3., 3., 3.]),\n 'SERINC2': array([0., 0., 0., ..., 7., 7., 7.]),\n 'PEF1': array([11., 11., 11., ..., 11., 11., 11.]),\n 'COL16A1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'ADGRB2': array([0., 0., 0., ..., 7., 7., 7.]),\n 'PTP4A2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'KHDRBS1': array([41., 41., 41., ..., 23., 23., 23.]),\n 'TMEM39B': array([15., 15., 15., ..., 23., 23., 23.]),\n 'KPNA6': array([7., 7., 9., ..., 2., 2., 2.]),\n 'TXLNA': array([19., 19., 19., ...,  6.,  6.,  6.]),\n 'CCDC28B': array([5., 5., 5., ..., 4., 4., 4.]),\n 'IQCC': array([5., 5., 5., ..., 2., 2., 2.]),\n 'TMEM234': array([ 7.,  7.,  7., ..., 13.,  5.,  5.]),\n 'EIF3I': array([ 0.,  0.,  0., ..., 27., 27., 27.]),\n 'HDAC1': array([15., 15., 15., ..., 10., 10., 10.]),\n 'MARCKSL1': array([85., 85., 85., ..., 85., 85., 85.]),\n 'FAM229A': array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.]),\n 'BSDC1': array([2., 2., 2., ..., 7., 7., 7.]),\n 'ZBTB8B': array([6., 6., 6., ..., 3., 3., 3.]),\n 'ZBTB8A': array([17., 17., 19., ...,  2.,  2.,  2.]),\n 'ZBTB8OS': array([ 6.,  6.,  6., ..., 23., 23., 23.]),\n 'RBBP4': array([9., 9., 9., ..., 5., 5., 5.]),\n 'SYNC': array([0., 0., 0., ..., 3., 3., 3.]),\n 'KIAA1522': array([0., 0., 0., ..., 5., 5., 5.]),\n 'YARS1': array([2., 2., 2., ..., 5., 5., 5.]),\n 'S100PBP': array([0., 0., 0., ..., 2., 2., 2.]),\n 'HPCA': array([3., 3., 3., ..., 7., 7., 7.]),\n 'AK2': array([2., 2., 2., ..., 9., 9., 9.]),\n 'AZIN2': array([3., 3., 5., ..., 5., 5., 5.]),\n 'ZNF362': array([14., 14., 14., ..., 11., 11., 11.]),\n 'PHC2': array([ 5.,  5.,  5., ..., 11., 11., 11.]),\n 'ZSCAN20': array([3., 3., 3., ..., 3., 3., 3.]),\n 'CSMD2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'SMIM12': array([0., 0., 0., ..., 3., 3., 3.]),\n 'DLGAP3': array([2., 2., 2., ..., 7., 7., 7.]),\n 'ZMYM6': array([6., 6., 6., ..., 3., 3., 3.]),\n 'ZMYM1': array([0., 0., 0., ..., 4., 4., 4.]),\n 'SFPQ': array([86., 86., 86., ..., 18., 18., 18.]),\n 'ZMYM4': array([47., 47., 47., ...,  5.,  5.,  5.]),\n 'KIAA0319L': array([0., 0., 0., ..., 3., 3., 3.]),\n 'NCDN': array([3., 3., 3., ..., 7., 7., 7.]),\n 'PSMB2': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'C1orf216': array([5., 5., 5., ..., 5., 5., 5.]),\n 'CLSPN': array([5., 5., 5., ..., 3., 3., 3.]),\n 'AGO4': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'AGO1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'AGO3': array([3., 3., 3., ..., 2., 2., 2.]),\n 'TEKT2': array([7., 7., 7., ..., 9., 9., 9.]),\n 'ADPRHL2': array([ 8.,  8.,  8., ..., 10., 10., 10.]),\n 'TRAPPC3': array([ 2.,  2.,  2., ..., 11., 11.,  7.]),\n 'MAP7D1': array([ 0.,  0.,  0., ..., 24., 24., 24.]),\n 'THRAP3': array([39., 45., 45., ...,  6.,  6.,  6.]),\n 'STK40': array([5., 5., 5., ..., 3., 3., 3.]),\n 'LSM10': array([6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7.]),\n 'OSCP1': array([2., 2., 2., ..., 3., 3., 3.]),\n 'MRPS15': array([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         7.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.]),\n 'GRIK3': array([0., 0., 0., ..., 5., 5., 5.]),\n 'MEAF6': array([9., 9., 9., ..., 3., 3., 3.]),\n 'SNIP1': array([2., 2., 2., ..., 3., 3., 3.]),\n 'DNALI1': array([7., 7., 7., ..., 7., 7., 7.]),\n 'GNL2': array([10., 10., 23., ...,  9.,  9.,  9.]),\n 'C1orf109': array([ 2.,  2.,  2., ..., 17., 17., 17.]),\n 'CDCA8': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'MANEAL': array([3., 3., 3., ..., 6., 6., 6.]),\n 'YRDC': array([5., 5., 5., ..., 3., 3., 3.]),\n 'C1orf122': array([3., 3., 3., ..., 4., 4., 2.]),\n 'MTF1': array([9., 9., 9., ..., 3., 3., 3.]),\n 'INPP5B': array([0., 0., 0., ..., 5., 5., 5.]),\n 'SF3A3': array([19., 19., 19., ...,  7.,  7.,  7.]),\n 'FHL3': array([10., 10., 10., ..., 12., 12., 12.]),\n 'UTP11': array([19., 19., 19., ...,  2.,  2.,  2.]),\n 'RRAGC': array([9., 9., 9., ..., 5., 5., 5.]),\n 'MYCBP': array([3., 3., 3., ..., 3., 3., 3.]),\n 'AL139260.3': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.]),\n 'AKIRIN1': array([10., 10., 10., ...,  3.,  3.,  3.]),\n 'NDUFS5': array([10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12.,  9.,  9.,  9., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.]),\n 'MACF1': array([26., 26., 26., ..., 19., 19., 19.]),\n 'PABPC4': array([39., 39., 39., ..., 27., 27., 27.]),\n 'HPCAL4': array([5., 5., 5., ..., 7., 7., 7.]),\n 'PPIE': array([ 0.,  0.,  0., ..., 14., 14., 14.]),\n 'TRIT1': array([ 5.,  5., 25., ...,  7.,  7.,  7.]),\n 'MYCL': array([0., 0., 0., ..., 7., 7., 3.]),\n 'MFSD2A': array([ 3.,  3.,  3., ..., 11., 11.,  2.]),\n 'CAP1': array([ 5.,  5.,  5., ..., 10., 10., 10.]),\n 'PPT1': array([2., 2., 2., ..., 3., 3., 3.]),\n 'RLF': array([25., 25., 25., ..., 12., 12., 12.]),\n 'ZMPSTE24': array([17., 17., 17., ...,  8.,  8.,  8.]),\n 'COL9A2': array([ 4.,  4.,  4., ..., 13., 13., 13.]),\n 'SMAP2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'ZFP69B': array([26., 26., 26., ...,  6.,  4.,  4.]),\n 'ZFP69': array([9., 9., 9., ..., 2., 2., 2.]),\n 'EXO5': array([3., 3., 3., ..., 2., 2., 2.]),\n 'ZNF684': array([3., 3., 3., ..., 2., 2., 2.]),\n 'NFYC': array([15., 15., 15., ..., 10., 10.,  4.]),\n 'CTPS1': array([13., 13., 13., ...,  5.,  5.,  5.]),\n 'SCMH1': array([9., 9., 9., ..., 9., 9., 5.]),\n 'HIVEP3': array([ 6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10.]),\n 'FOXJ3': array([0., 0., 0., ..., 5., 3., 3.]),\n 'RIMKLA': array([5., 5., 5., ..., 2., 2., 2.]),\n 'PPCS': array([5., 5., 5., ..., 3., 3., 3.]),\n 'CCDC30': array([4., 4., 4., ..., 2., 2., 2.]),\n 'PPIH': array([11., 11., 11., ...,  7.,  7.,  7.]),\n 'YBX1': array([93., 93., 93., ..., 32., 32., 32.]),\n 'P3H1': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'C1orf50': array([14., 14., 14., ...,  3.,  3.,  3.]),\n 'SVBP': array([ 7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.]),\n 'ZNF691': array([3., 3., 3., ..., 5., 5., 5.]),\n 'SLC2A1': array([2., 2., 2., ..., 3., 3., 3.]),\n 'EBNA1BP2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CDC20': array([ 9.,  9.,  9., ..., 13., 13., 13.]),\n 'ELOVL1': array([2., 2., 2., ..., 9., 5., 5.]),\n 'MED8': array([ 4.,  4.,  4., ..., 13., 13., 13.]),\n 'SZT2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'HYI': array([4., 4., 4., ..., 7., 7., 7.]),\n 'PTPRF': array([3., 3., 3., ..., 2., 2., 2.]),\n 'KDM4A': array([17., 17., 17., ...,  4.,  4.,  4.]),\n 'ST3GAL3': array([3., 3., 3., ..., 6., 4., 4.]),\n 'IPO13': array([3., 3., 3., ..., 2., 2., 2.]),\n 'DPH2': array([18., 18., 18., ..., 15., 15., 15.]),\n 'ATP6V0B': array([ 2.,  2.,  2., ..., 23., 18., 18.]),\n 'B4GALT2': array([3., 3., 3., ..., 7., 7., 2.]),\n 'CCDC24': array([3., 3., 3., ..., 5., 5., 5.]),\n 'SLC6A9': array([0., 0., 0., ..., 3., 3., 3.]),\n 'DMAP1': array([ 9.,  9.,  9., ..., 11., 11., 11.]),\n 'ERI3': array([17.,  9.,  9., ..., 47., 47., 47.]),\n 'RNF220': array([ 0.,  0.,  0., ..., 19., 19., 19.]),\n 'TMEM53': array([2., 2., 2., ..., 5., 5., 5.]),\n 'ARMH1': array([3., 7., 7., ..., 7., 7., 5.]),\n 'KIF2C': array([ 7.,  7.,  7., ..., 11., 11., 11.]),\n 'RPS8': array([ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9., 43., 43., 43., 43., 43., 47.,\n        47., 47., 47., 49., 49., 49., 49., 49., 49., 49., 49., 49., 49.,\n        49., 49., 49., 49., 49., 49., 49., 49., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 60., 60.,\n        60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60.,\n        60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60.,\n        60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 60., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57.,\n        57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 57., 55., 55.,\n        55., 55., 55., 55., 55., 55., 55., 55., 55., 55., 55., 55., 55.,\n        55., 55., 55., 55., 55., 55., 55., 55., 55., 55., 55., 55., 55.,\n        55., 55., 55., 55., 55., 53., 53., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61., 61.,\n        61., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58.,\n        58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58.,\n        58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 58.,\n        58., 58., 58., 58., 58., 58., 58., 58., 58., 58., 56., 56., 56.,\n        56., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59.,\n        59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59.,\n        59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59.,\n        59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59.,\n        59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59.,\n        59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59.,\n        59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 59., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37.,\n        37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 37., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35., 35.,\n        35., 35., 35., 35., 35., 35., 35., 35., 35.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.]),\n 'PLK3': array([7., 7., 7., ..., 8., 8., 8.]),\n 'EIF2B3': array([2., 2., 2., ..., 5., 5., 5.]),\n 'HECTD3': array([10., 10., 10., ...,  5.,  5.,  5.]),\n 'UROD': array([ 0.,  0.,  0., ..., 16., 16., 16.]),\n 'MUTYH': array([2., 2., 2., ..., 3., 3., 3.]),\n 'TOE1': array([9., 9., 9., ..., 7., 7., 7.]),\n 'CCDC163': array([2., 2., 2., ..., 3., 3., 3.]),\n 'MMACHC': array([5., 5., 5., ..., 2., 2., 2.]),\n 'PRDX1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'AKR1A1': array([ 3.,  3.,  3., ..., 39., 39., 29.]),\n 'NASP': array([ 3.,  3.,  3., ..., 29., 13., 13.]),\n 'GPBP1L1': array([11., 11., 11., ...,  7.,  7.,  7.]),\n 'TMEM69': array([7., 7., 7., ..., 4., 4., 4.]),\n 'IPP': array([17., 17., 17., ...,  3.,  3.,  3.]),\n 'MAST2': array([13., 13., 13., ..., 13., 13., 13.]),\n 'PIK3R3': array([2., 2., 2., ..., 5., 5., 5.]),\n 'AL358075.4': array([0., 0., 0., ..., 7., 7., 7.]),\n 'POMGNT1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'RAD54L': array([0., 0., 0., ..., 2., 2., 2.]),\n 'LRRC41': array([2., 2., 2., ..., 5., 5., 5.]),\n 'UQCRH': array([11., 11., 11., 11., 11., 11., 11., 11., 11., 13., 13., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 13., 13., 13., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17.]),\n 'NSUN4': array([3., 3., 3., ..., 8., 8., 6.]),\n 'FAAH': array([11., 11., 11., ..., 13., 13., 13.]),\n 'MKNK1': array([3., 3., 3., ..., 7., 7., 7.]),\n 'ATPAF1': array([2., 2., 2., ..., 5., 5., 5.]),\n 'EFCAB14': array([15., 15., 15., ...,  3.,  3.,  3.]),\n 'CYP4X1': array([7., 7., 7., ..., 2., 2., 2.]),\n 'STIL': array([3., 3., 3., ..., 3., 3., 3.]),\n 'CMPK1': array([13., 13., 13., ...,  4.,  4.,  4.]),\n 'SPATA6': array([0., 0., 0., ..., 3., 3., 3.]),\n 'BEND5': array([30., 30., 30., ...,  9.,  9.,  9.]),\n 'ELAVL4': array([0., 0., 0., ..., 7., 7., 7.]),\n 'DMRTA2': array([11., 11., 11., ...,  7.,  7.,  7.]),\n 'FAF1': array([23., 23., 23., ...,  6.,  6.,  6.]),\n 'CDKN2C': array([0., 0., 0., ..., 5., 5., 5.]),\n 'RNF11': array([13., 13., 13., ...,  6.,  6.,  6.]),\n 'EPS15': array([14., 14., 14., ...,  5.,  5.,  5.]),\n 'OSBPL9': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'NRDC': array([ 2.,  2.,  2., ..., 13., 13., 13.]),\n 'TXNDC12': array([7., 7., 7., ..., 7., 7., 7.]),\n 'KTI12': array([8., 8., 8., ..., 8., 8., 8.]),\n 'BTF3L4': array([ 9., 11., 11., ...,  8.,  8.,  8.]),\n 'ZFYVE9': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'ORC1': array([7., 7., 7., ..., 7., 7., 5.]),\n 'PRPF38A': array([11., 11., 11., ...,  2.,  2.,  2.]),\n 'TUT4': array([5., 5., 5., ..., 7., 7., 7.]),\n 'COA7': array([6., 6., 6., ..., 3., 3., 3.]),\n 'ZYG11B': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'ECHDC2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'SCP2': array([13., 13., 13., ...,  4.,  4.,  4.]),\n 'CPT2': array([3., 3., 3., ..., 2., 2., 2.]),\n 'CZIB': array([ 6.,  6.,  6., ..., 13., 13., 13.]),\n 'MAGOH': array([ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         7.,  7.,  7.,  7.,  7.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.]),\n 'LRP8': array([2., 2., 2., ..., 6., 6., 6.]),\n 'NDC1': array([7., 7., 7., ..., 7., 7., 7.]),\n 'YIPF1': array([4., 4., 4., ..., 9., 9., 9.]),\n 'HSPB11': array([5., 5., 5., ..., 3., 3., 3.]),\n 'LRRC42': array([ 9.,  9.,  9., ..., 15., 15., 15.]),\n 'TMEM59': array([2., 2., 2., ..., 6., 6., 6.]),\n 'TCEANC2': array([9., 9., 9., ..., 2., 2., 2.]),\n 'MRPL37': array([9., 9., 9., ..., 2., 2., 2.]),\n 'SSBP3': array([0., 0., 0., ..., 5., 5., 5.]),\n 'TTC4': array([11., 11., 11., ...,  2.,  2.,  2.]),\n 'DHCR24': array([11., 11., 11., ...,  5.,  5.,  5.]),\n 'USP24': array([17., 17., 17., ...,  3.,  3.,  3.]),\n 'PLPP3': array([17., 17., 17., ...,  7.,  7.,  7.]),\n 'PRKAA2': array([7., 7., 7., ..., 2., 2., 2.]),\n 'DAB1': array([26., 26., 26., ..., 13., 13., 13.]),\n 'OMA1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'MYSM1': array([27., 27., 27., ...,  5.,  5.,  5.]),\n 'JUN': array([49., 49., 49., ...,  9.,  9.,  9.]),\n 'HOOK1': array([7., 7., 7., ..., 2., 2., 2.]),\n 'NFIA': array([0., 0., 0., ..., 4., 4., 4.]),\n 'TM2D1': array([ 0.,  0.,  0., ..., 19., 19., 17.]),\n 'PATJ': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'USP1': array([ 7.,  7.,  7., ..., 13., 13., 13.]),\n 'DOCK7': array([10., 10., 10., ...,  9.,  9.,  9.]),\n 'ATG4C': array([7., 7., 7., ..., 5., 2., 2.]),\n 'ALG6': array([17., 17., 17., ...,  2.,  2.,  2.]),\n 'ITGB3BP': array([19., 19., 19., ..., 11., 11., 11.]),\n 'EFCAB7': array([27., 27., 27., ..., 10., 10., 10.]),\n 'PGM1': array([7., 7., 7., ..., 4., 4., 4.]),\n 'RAVER2': array([7., 7., 7., ..., 4., 2., 2.]),\n 'JAK1': array([2., 2., 2., ..., 9., 9., 9.]),\n 'AK4': array([5., 5., 5., ..., 4., 4., 4.]),\n 'DNAJC6': array([5., 5., 5., ..., 2., 2., 2.]),\n 'LEPROT': array([6., 6., 6., ..., 9., 9., 9.]),\n 'LEPR': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'PDE4B': array([0., 0., 0., ..., 2., 2., 2.]),\n 'SGIP1': array([0., 0., 0., ..., 4., 4., 4.]),\n 'MIER1': array([7., 7., 7., ..., 6., 6., 6.]),\n 'SLC35D1': array([7., 7., 7., ..., 3., 3., 3.]),\n 'SERBP1': array([2., 2., 2., ..., 9., 9., 9.]),\n 'GADD45A': array([9., 9., 9., ..., 2., 2., 2.]),\n 'GNG12': array([2., 2., 2., ..., 3., 3., 3.]),\n 'WLS': array([0., 0., 0., ..., 4., 4., 4.]),\n 'DEPDC1': array([5., 5., 5., ..., 5., 5., 5.]),\n 'LRRC7': array([67., 67., 67., ...,  9.,  9.,  9.]),\n 'LRRC40': array([33., 33., 33., ..., 13., 13., 13.]),\n 'SRSF11': array([29., 29., 29., ..., 17., 17., 17.]),\n 'ANKRD13C': array([4., 4., 4., ..., 7., 7., 7.]),\n 'HHLA3': array([ 5.,  5.,  5.,  5.,  5.,  5.,  7.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11.,  9.,  9.,  9.,  9.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.]),\n 'CTH': array([3., 3., 3., ..., 5., 5., 5.]),\n 'ZRANB2': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'FPGT': array([3., 3., 3., ..., 6., 6., 6.]),\n 'FPGT-TNNI3K': array([3., 3., 3., ..., 3., 3., 3.]),\n 'TNNI3K': array([3., 3., 3., ..., 3., 3., 3.]),\n 'ERICH3': array([9., 9., 9., ..., 3., 3., 3.]),\n 'CRYZ': array([2., 2., 2., ..., 3., 3., 3.]),\n 'TYW3': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'SLC44A5': array([3., 3., 3., ..., 3., 3., 3.]),\n 'ACADM': array([5., 5., 5., ..., 4., 4., 4.]),\n 'RABGGTB': array([17., 17., 17., ..., 13., 13., 13.]),\n 'ST6GALNAC5': array([7., 7., 9., ..., 2., 2., 2.]),\n 'PIGK': array([2., 2., 2., ..., 3., 3., 3.]),\n 'AK5': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'AC118549.1': array([10., 10., 10., ...,  5.,  5.,  5.]),\n 'USP33': array([32., 32., 32., ..., 11., 11., 11.]),\n 'MIGA1': array([9., 9., 9., ..., 5., 5., 5.]),\n 'NEXN': array([3., 3., 3., ..., 3., 3., 3.]),\n 'FUBP1': array([15., 15., 15., ..., 37., 37., 37.]),\n 'DNAJB4': array([6., 6., 6., ..., 3., 3., 3.]),\n 'IFI44L': array([0., 0., 0., ..., 2., 2., 2.]),\n 'IFI44': array([17., 19., 23., ...,  9.,  9.,  9.]),\n 'ADGRL4': array([0., 0., 0., ..., 3., 3., 3.]),\n 'ADGRL2': array([0., 0., 0., ..., 2., 2., 2.]),\n 'TTLL7': array([18., 18., 18., ...,  7.,  7.,  7.]),\n 'PRKACB': array([15., 15., 15., ...,  8.,  8.,  8.]),\n 'SAMD13': array([0., 0., 0., ..., 3., 3., 3.]),\n 'RPF1': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'GNG5': array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,  3.,\n         3.,  3.]),\n 'CTBS': array([5., 5., 5., ..., 3., 3., 3.]),\n 'SSX2IP': array([ 4.,  4.,  4., ..., 11., 11., 11.]),\n 'C1orf52': array([13., 13., 13., ...,  5.,  5.,  5.]),\n 'BCL10': array([4., 4., 4., ..., 5., 5., 5.]),\n 'DDAH1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CCN1': array([29., 29., 29., ..., 21., 21., 21.]),\n 'ZNHIT6': array([15., 15., 15., ...,  3.,  3.,  3.]),\n 'ODF2L': array([10., 10., 12., ...,  7.,  7.,  7.]),\n 'SH3GLB1': array([21., 21., 21., ...,  4.,  4.,  4.]),\n 'SELENOF': array([4., 4., 4., ..., 9., 9., 3.]),\n 'HS2ST1': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'AC093155.3': array([ 8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.]),\n 'LMO4': array([9., 9., 9., ..., 2., 2., 2.]),\n 'PKN2': array([23., 23., 23., ...,  4.,  4.,  4.]),\n 'GTF2B': array([ 6.,  6.,  6., ..., 11., 11., 11.]),\n 'KYAT3': array([0., 0., 0., ..., 3., 3., 3.]),\n 'RBMXL1': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'LRRC8B': array([3., 3., 3., ..., 2., 2., 2.]),\n 'LRRC8C': array([5., 5., 5., ..., 4., 4., 4.]),\n 'LRRC8D': array([0., 0., 0., ..., 2., 2., 2.]),\n 'ZNF326': array([61., 61., 63., ..., 10., 10., 10.]),\n 'ZNF644': array([ 2.,  2.,  2., ..., 13., 13., 13.]),\n 'HFM1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CDC7': array([25., 25., 25., ...,  4.,  4.,  4.]),\n 'BTBD8': array([13., 13., 13., ...,  5.,  5.,  5.]),\n 'GLMN': array([25., 25., 25., ...,  5.,  5.,  5.]),\n 'RPAP2': array([29., 29., 29., ...,  4.,  4.,  4.]),\n 'EVI5': array([0., 0., 0., ..., 5., 5., 5.]),\n 'RPL5': array([13., 13., 13., ..., 19., 19., 19.]),\n 'DIPK1A': array([2., 2., 2., ..., 3., 3., 3.]),\n 'MTF2': array([23., 23., 23., ...,  8.,  8.,  8.]),\n 'TMED5': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'CCDC18': array([0., 0., 0., ..., 3., 3., 3.]),\n 'DR1': array([8., 8., 8., ..., 4., 4., 4.]),\n 'FNBP1L': array([124., 124., 124., ...,  19.,  19.,  19.]),\n 'BCAR3': array([0., 0., 0., ..., 3., 3., 3.]),\n 'DNTTIP2': array([6., 6., 6., ..., 5., 5., 5.]),\n 'GCLM': array([13., 13., 13., ...,  3.,  3.,  3.]),\n 'ARHGAP29': array([4., 4., 4., ..., 3., 3., 3.]),\n 'ABCD3': array([23., 23., 23., ...,  6.,  6.,  6.]),\n 'F3': array([15., 15., 15., ...,  3.,  3.,  3.]),\n 'CNN3': array([ 7.,  7.,  7., ..., 15., 15., 15.]),\n 'ALG14': array([4., 4., 4., ..., 3., 3., 3.]),\n 'TLCD4-RWDD3': array([2., 2., 2., ..., 5., 5., 3.]),\n 'RWDD3': array([19., 21., 21., ...,  5.,  5.,  3.]),\n 'PTBP2': array([23., 23., 23., ..., 18., 18., 18.]),\n 'DPYD': array([1., 1., 1., ..., 5., 5., 5.]),\n 'SNX7': array([15., 15., 15., ..., 14., 14., 14.]),\n 'PLPPR5': array([6., 6., 6., ..., 7., 7., 7.]),\n 'PLPPR4': array([3., 3., 3., ..., 5., 5., 5.]),\n 'PALMD': array([13., 13., 13., ...,  4.,  4.,  4.]),\n 'AGL': array([20., 20., 20., ...,  4.,  4.,  4.]),\n 'SLC35A3': array([3., 3., 3., ..., 4., 4., 4.]),\n 'AC118553.2': array([13., 13., 15., ..., 15., 15., 15.]),\n 'MFSD14A': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'SASS6': array([15., 15., 15., ...,  7.,  7.,  7.]),\n 'TRMT13': array([39., 39., 39., ...,  9.,  9.,  9.]),\n 'DBT': array([13., 13., 13., ...,  4.,  4.,  4.]),\n 'RTCA': array([17., 17., 17., ..., 10., 10., 10.]),\n 'CDC14A': array([0., 0., 0., ..., 2., 2., 2.]),\n 'VCAM1': array([5., 5., 5., ..., 2., 2., 2.]),\n 'EXTL2': array([8., 8., 8., ..., 3., 3., 3.]),\n 'SLC30A7': array([7., 7., 7., ..., 2., 2., 2.]),\n 'DPH5': array([15., 15., 15., ...,  7.,  7.,  7.]),\n 'S1PR1': array([3., 3., 3., ..., 5., 5., 5.]),\n 'OLFM3': array([9., 9., 9., ..., 3., 3., 3.]),\n 'COL11A1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'RNPC3': array([19., 19., 19., ..., 10., 10., 10.]),\n 'AMY2B': array([ 9.,  9.,  9., ..., 11., 11., 11.]),\n 'PRMT6': array([3., 3., 3., ..., 4., 4., 4.]),\n 'NTNG1': array([7., 7., 7., ..., 2., 2., 2.]),\n 'SLC25A24': array([3., 3., 3., ..., 3., 3., 3.]),\n 'HENMT1': array([4., 4., 4., ..., 5., 5., 5.]),\n 'PRPF38B': array([47., 46., 46., ..., 14., 14., 14.]),\n 'STXBP3': array([23., 23., 23., ...,  4.,  4.,  4.]),\n 'AKNAD1': array([2., 2., 2., ..., 3., 3., 3.]),\n 'GPSM2': array([0., 0., 0., ..., 4., 4., 4.]),\n 'CLCC1': array([23., 23., 23., ...,  3.,  3.,  3.]),\n 'WDR47': array([8., 8., 8., ..., 7., 7., 7.]),\n 'TAF13': array([13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12., 12.,\n        12., 11., 10., 10., 10., 10.]),\n 'TMEM167B': array([5., 5., 5., ..., 2., 2., 2.]),\n 'C1orf194': array([4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 4., 4., 4., 4., 4., 4., 4., 4., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 7.,\n        7., 7.]),\n 'KIAA1324': array([5., 5., 5., ..., 4., 4., 4.]),\n 'SARS1': array([43., 43., 43., ...,  7.,  7.,  7.]),\n 'CELSR2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'PSRC1': array([ 2.,  2.,  2., ..., 33., 33., 33.]),\n 'SORT1': array([17., 17., 17., ...,  3.,  3.,  3.]),\n 'PSMA5': array([10., 10., 10., ...,  3.,  3.,  3.]),\n 'ATXN7L2': array([11., 11., 11., ..., 11., 11., 11.]),\n 'CYB561D1': array([3., 3., 3., ..., 5., 5., 5.]),\n 'GNAI3': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'AMPD2': array([3., 3., 3., ..., 6., 6., 2.]),\n 'GSTM4': array([3., 3., 3., ..., 7., 7., 7.]),\n 'GSTM2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'GSTM1': array([4., 4., 4., ..., 3., 3., 3.]),\n 'GSTM5': array([0., 0., 0., ..., 2., 2., 2.]),\n 'GSTM3': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CSF1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'AHCYL1': array([17., 17., 17., ...,  4.,  4.,  4.]),\n 'STRIP1': array([ 0.,  0.,  0., ..., 18., 18.,  3.]),\n 'RBM15': array([5., 5., 5., ..., 2., 2., 2.]),\n 'LAMTOR5': array([0., 0., 0., ..., 9., 9., 9.]),\n 'KCNA3': array([8., 8., 8., ..., 8., 8., 8.]),\n 'LRIF1': array([11., 11., 11., ...,  9.,  9.,  9.]),\n 'DRAM2': array([ 0.,  0.,  0., ..., 23., 23., 23.]),\n 'CEPT1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'WDR77': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'ATP5PB': array([13., 15., 15., ..., 11., 11., 11.]),\n 'RAP1A': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'DDX20': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'KCND3': array([4., 4., 4., ..., 3., 3., 3.]),\n 'CTTNBP2NL': array([15., 15., 15., ...,  3.,  3.,  3.]),\n 'WNT2B': array([0., 0., 0., ..., 2., 2., 2.]),\n 'ST7L': array([6., 6., 6., ..., 3., 3., 3.]),\n 'CAPZA1': array([11., 11., 11., ...,  5.,  5.,  5.]),\n 'RHOC': array([2., 2., 2., ..., 3., 3., 3.]),\n 'AL603832.3': array([ 3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13.]),\n 'SLC16A1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'LRIG2': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'MAGI3': array([21., 21., 21., ...,  5.,  5.,  5.]),\n 'PHTF1': array([40., 40., 40., ...,  5.,  5.,  5.]),\n 'RSBN1': array([2., 2., 2., ..., 3., 3., 3.]),\n 'AP4B1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'DCLRE1B': array([0., 0., 0., ..., 2., 2., 2.]),\n 'HIPK1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'SYT6': array([6., 6., 6., ..., 5., 5., 5.]),\n 'TRIM33': array([10., 10., 10., ...,  3.,  3.,  3.]),\n 'BCAS2': array([23., 23., 23., ..., 12., 12., 12.]),\n 'DENND2C': array([0., 0., 0., ..., 5., 5., 5.]),\n 'NRAS': array([11., 11., 11., ...,  5.,  5.,  5.]),\n 'CSDE1': array([ 0.,  0.,  0., ..., 25., 25., 25.]),\n 'SIKE1': array([2., 2., 2., ..., 5., 5., 5.]),\n 'TSPAN2': array([6., 6., 6., ..., 5., 5., 5.]),\n 'VANGL1': array([5., 5., 5., ..., 2., 2., 2.]),\n 'NHLH2': array([2., 2., 2., ..., 3., 3., 3.]),\n 'ATP1A1': array([ 7.,  7.,  7., ..., 27., 27., 27.]),\n 'CD58': array([3., 3., 3., ..., 3., 3., 3.]),\n 'IGSF3': array([ 0.,  0., 11., ...,  7.,  7.,  7.]),\n 'PTGFRN': array([7., 7., 7., ..., 2., 2., 2.]),\n 'TTF2': array([7., 7., 7., ..., 2., 2., 2.]),\n 'TRIM45': array([0., 0., 0., ..., 5., 5., 5.]),\n 'MAN1A2': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'GDAP2': array([7., 7., 7., ..., 3., 3., 3.]),\n 'WDR3': array([5., 5., 5., ..., 4., 4., 4.]),\n 'WARS2': array([6., 6., 6., ..., 3., 3., 3.]),\n 'ZNF697': array([7., 7., 7., ..., 3., 3., 3.]),\n 'PHGDH': array([0., 0., 0., ..., 2., 2., 2.]),\n 'NOTCH2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'FAM72B': array([4., 4., 4., ..., 3., 3., 3.]),\n 'NBPF8': array([0., 0., 0., ..., 3., 3., 3.]),\n 'PDE4DIP': array([ 6.,  6.,  6., ..., 12., 12., 12.]),\n 'SEC22B': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'NOTCH2NLB': array([ 6.,  6.,  6., ..., 22., 22., 22.]),\n 'NOTCH2NLA': array([19., 19., 19., ...,  5.,  5.,  5.]),\n 'NOTCH2NLC': array([19., 19., 19., ...,  8.,  8.,  8.]),\n 'NBPF10': array([24., 24., 24., ...,  3.,  3.,  3.]),\n 'AC242842.3': array([24., 24., 24., ...,  3.,  3.,  3.]),\n 'AC253572.1': array([24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 21., 21., 21., 21., 21., 21., 21., 21., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 15., 15., 15.]),\n 'TXNIP': array([5., 5., 5., ..., 2., 2., 2.]),\n 'POLR3GL': array([19., 19., 19., ..., 15., 15., 15.]),\n 'AC243547.3': array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31.]),\n 'ANKRD34A': array([3., 3., 3., ..., 5., 5., 5.]),\n 'LIX1L': array([11., 11., 11., ...,  5.,  5.,  5.]),\n 'RBM8A': array([ 4.,  4.,  4., ..., 11., 11., 11.]),\n 'PEX11B': array([9., 9., 9., ..., 4., 4., 4.]),\n 'PIAS3': array([3., 3., 3., ..., 6., 6., 6.]),\n 'NUDT17': array([9., 9., 9., ..., 9., 9., 9.]),\n 'POLR3C': array([4., 4., 4., ..., 9., 9., 9.]),\n 'RNF115': array([18., 18., 18., ..., 13., 13., 13.]),\n 'GPR89A': array([2., 2., 6., ..., 3., 3., 3.]),\n 'NBPF12': array([9., 9., 9., ..., 3., 3., 3.]),\n 'PRKAB2': array([27., 27., 27., ...,  9.,  9.,  9.]),\n 'CHD1L': array([9., 9., 9., ..., 4., 4., 4.]),\n 'BCL9': array([13., 13., 13., ...,  5.,  5.,  5.]),\n 'GPR89B': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'NBPF24': array([2., 2., 2., ..., 3., 3., 3.]),\n 'NBPF14': array([0., 0., 0., ..., 3., 3., 3.]),\n 'NBPF15': array([3., 3., 3., ..., 3., 3., 3.]),\n 'NBPF16': array([0., 0., 0., ..., 2., 2., 2.]),\n 'H3-2': array([5., 5., 5., ..., 3., 3., 3.]),\n 'H2BC18': array([2., 2., 2., ..., 3., 3., 3.]),\n 'H4C14': array([3., 3., 3., 3., 3., 3., 3., 3., 3., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5.]),\n 'H2AC19': array([3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6.]),\n 'HIST2H2AA4': array([6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6.]),\n 'H4C15': array([3., 3., 3., ..., 5., 5., 5.]),\n 'BOLA1': array([0., 0., 0., ..., 6., 6., 6.]),\n 'SV2A': array([ 8.,  8.,  8., ..., 15., 15., 15.]),\n 'SF3B4': array([17., 17., 17., ..., 23., 23., 23.]),\n 'MTMR11': array([2., 2., 2., ..., 5., 5., 5.]),\n 'OTUD7B': array([4., 4., 4., ..., 3., 3., 3.]),\n 'VPS45': array([0., 0., 0., ..., 8., 8., 8.]),\n 'PLEKHO1': array([7., 7., 7., ..., 2., 2., 2.]),\n 'ANP32E': array([5., 5., 5., ..., 7., 7., 7.]),\n 'CA14': array([0., 0., 0., ..., 7., 7., 7.]),\n 'APH1A': array([2., 2., 2., ..., 7., 7., 7.]),\n 'C1orf54': array([0., 0., 0., ..., 7., 7., 3.]),\n 'CIART': array([7., 7., 7., ..., 9., 9., 9.]),\n 'MRPS21': array([5., 5., 5., ..., 5., 5., 5.]),\n 'PRPF3': array([45., 45., 45., ...,  9.,  9.,  9.]),\n 'RPRD2': array([27., 27., 27., ...,  6.,  6.,  6.]),\n 'TARS2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'ECM1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'MCL1': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'ENSA': array([8., 8., 8., ..., 5., 5., 5.]),\n 'GOLPH3L': array([4., 4., 4., ..., 3., 3., 3.]),\n 'ARNT': array([3., 3., 3., ..., 3., 3., 3.]),\n 'SETDB1': array([7., 7., 7., ..., 9., 9., 9.]),\n 'CERS2': array([ 3.,  5.,  5., ..., 11., 11., 11.]),\n 'MINDY1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'PRUNE1': array([15., 17., 17., ..., 11., 11., 11.]),\n 'C1orf56': array([3., 3., 3., ..., 4., 4., 4.]),\n 'CDC42SE1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'MLLT11': array([17., 17., 17., ...,  2.,  2.,  2.]),\n 'GABPB2': array([5., 5., 5., ..., 2., 2., 2.]),\n 'SEMA6C': array([5., 5., 5., ..., 9., 9., 9.]),\n 'SCNM1': array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31., 31.,\n        31., 31., 31., 31., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 32., 32., 32.,\n        32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32., 32.,\n        32., 32., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33., 33.,\n        33., 33., 33., 33., 33., 33., 33., 33., 33., 35., 30., 30., 30.,\n        30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30.,\n        30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30.,\n        30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30., 30.,\n        30., 30., 30., 30., 30., 30., 30., 30., 30., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28., 28.,\n        28., 28., 28., 28., 28., 28., 28., 22., 22., 22., 22., 22., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 16.,\n        16., 16., 16.]),\n 'LYSMD1': array([2., 2., 2., ..., 5., 5., 5.]),\n 'VPS72': array([10., 10., 10., ...,  7.,  7.,  7.]),\n 'PIP5K1A': array([0., 0., 0., ..., 2., 2., 2.]),\n 'PSMD4': array([3., 3., 3., ..., 6., 6., 6.]),\n 'ZNF687': array([3., 3., 3., ..., 3., 3., 3.]),\n 'PI4KB': array([2., 2., 2., ..., 5., 5., 5.]),\n 'RFX5': array([3., 3., 3., ..., 9., 9., 9.]),\n 'SELENBP1': array([7., 7., 9., ..., 9., 9., 9.]),\n 'PSMB4': array([ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17.,  9.,  9.]),\n 'POGZ': array([18., 18., 18., ..., 11., 11., 11.]),\n 'TUFT1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'SNX27': array([11., 11., 11., ...,  4.,  4.,  4.]),\n 'CELF3': array([23., 23., 23., ..., 19., 19., 19.]),\n 'AL589765.1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'RIIAD1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'MRPL9': array([14., 14., 14., ..., 19., 19., 19.]),\n 'TDRKH': array([0., 0., 0., ..., 3., 3., 3.]),\n 'THEM4': array([3., 3., 3., ..., 3., 3., 3.]),\n 'S100A11': array([2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.]),\n 'S100A6': array([3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5.]),\n 'S100A16': array([2., 2., 2., ..., 3., 3., 3.]),\n 'S100A13': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2.,\n        2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 2., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 7., 7., 7., 7., 3., 3., 3., 3.]),\n 'CHTOP': array([ 9.,  9.,  9., ..., 17., 17., 17.]),\n 'SNAPIN': array([5., 5., 5., ..., 2., 2., 2.]),\n 'ILF2': array([ 2.,  2.,  2., ..., 15., 15., 15.]),\n 'INTS3': array([5., 5., 5., ..., 5., 5., 5.]),\n 'SLC27A3': array([5., 5., 5., ..., 5., 5., 5.]),\n 'GATAD2B': array([0., 0., 0., ..., 3., 3., 3.]),\n 'SLC39A1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CREB3L4': array([9., 9., 9., ..., 9., 9., 5.]),\n 'JTB': array([15., 15., 15., ...,  7.,  7.,  7.]),\n 'RAB13': array([2., 2., 2., ..., 1., 1., 1.]),\n 'RPS27': array([19., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 15.,  6.,  6.,  6.,  6.,  4.,  4.,  4.,  4.]),\n 'TPM3': array([ 0.,  0.,  0., ..., 23., 23., 23.]),\n 'C1orf43': array([ 2.,  2.,  2., ..., 19., 19., 19.]),\n 'UBAP2L': array([ 0.,  0.,  0., ..., 13., 13., 13.]),\n 'HAX1': array([3., 3., 3., ..., 6., 6., 4.]),\n 'UBE2Q1': array([23., 23., 23., ...,  5.,  5.,  5.]),\n 'ADAR': array([2., 2., 2., ..., 5., 5., 5.]),\n 'KCNN3': array([2., 2., 2., ..., 3., 3., 3.]),\n 'PMVK': array([11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.]),\n 'PBXIP1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'PYGO2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'SHC1': array([0., 0., 0., ..., 9., 9., 9.]),\n 'CKS1B': array([5., 5., 5., ..., 6., 2., 2.]),\n 'FLAD1': array([27., 27., 27., ..., 26., 26., 26.]),\n 'ADAM15': array([11., 11., 11., ..., 11., 11., 11.]),\n 'EFNA4': array([0., 0., 0., ..., 2., 2., 2.]),\n 'AL691442.2': array([ 3.,  3.,  3., ..., 18., 18., 18.]),\n 'EFNA3': array([14., 14., 14., ..., 15., 15., 15.]),\n 'EFNA1': array([5., 5., 5., ..., 2., 2., 2.]),\n 'SLC50A1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'DPM3': array([3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7.]),\n 'KRTCAP2': array([ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,  3.,\n         3.,  3.,  3.,  3.,  3.,  3.,  3.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.]),\n 'AL713999.1': array([ 0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,  2.,\n         2.,  2.,  2.,  2.,  2.,  2.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.]),\n 'TRIM46': array([0., 0., 0., ..., 8., 8., 8.]),\n 'THBS3': array([0., 0., 0., ..., 7., 7., 5.]),\n 'MTX1': array([3., 3., 3., ..., 9., 9., 9.]),\n 'GBA': array([ 2.,  2.,  2., ..., 13., 13., 13.]),\n 'FAM189B': array([ 7.,  7.,  7., ..., 11., 11., 11.]),\n 'SCAMP3': array([ 2.,  2.,  2., ..., 27., 27., 27.]),\n 'CLK2': array([5., 5., 5., ..., 9., 9., 9.]),\n 'HCN3': array([15., 15., 15., ...,  9.,  9.,  9.]),\n 'FDPS': array([ 3.,  3.,  3., ..., 39., 39., 39.]),\n 'RUSC1': array([10., 10., 24., ..., 23., 23.,  6.]),\n 'ASH1L': array([12., 12., 12., ...,  3.,  3.,  3.]),\n 'MSTO1': array([3., 3., 3., ..., 2., 2., 2.]),\n 'YY1AP1': array([ 0.,  0.,  0., ..., 29., 29., 29.]),\n 'DAP3': array([3., 3., 3., ..., 6., 6., 6.]),\n 'GON4L': array([0., 0., 0., ..., 5., 5., 5.]),\n 'SYT11': array([35., 35., 35., ..., 14., 14., 14.]),\n 'RIT1': array([0., 0., 2., ..., 3., 3., 3.]),\n 'KHDC4': array([13., 13., 13., ...,  7.,  7.,  7.]),\n 'ARHGEF2': array([ 0.,  0.,  0., ..., 33., 33., 29.]),\n 'SSR2': array([ 2.,  4.,  4., ..., 25., 25., 25.]),\n 'UBQLN4': array([4., 4., 4., ..., 7., 7., 7.]),\n 'LAMTOR2': array([ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13.,  7.,  7.]),\n 'MEX3A': array([2., 2., 2., ..., 3., 3., 3.]),\n 'LMNA': array([11., 11., 11., ..., 11., 11., 11.]),\n 'SEMA4A': array([0., 0., 0., ..., 4., 4., 4.]),\n 'SLC25A44': array([0., 0., 0., ..., 5., 5., 5.]),\n 'PMF1-BGLAP': array([ 9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 17., 21.,\n        21., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,\n        26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26., 26.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         4.,  4.,  4.,  4.,  4.,  4.]),\n 'PMF1': array([15., 15., 15., ..., 17., 17.,  6.]),\n 'BGLAP': array([4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6., 6.,\n        6., 6., 6., 6., 6., 6., 6., 6., 6., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.,\n        4., 4., 4., 4., 4., 4., 4., 4., 4., 4., 4.]),\n 'PAQR6': array([5., 5., 5., ..., 5., 5., 5.]),\n 'SMG5': array([17., 17., 17., ...,  7.,  7.,  7.]),\n 'TMEM79': array([3., 3., 3., ..., 2., 2., 2.]),\n 'GLMP': array([ 4.,  4.,  4., ..., 10., 10., 10.]),\n 'CCT3': array([ 1.,  1.,  1., ..., 33., 33., 33.]),\n 'C1orf61': array([ 87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,\n         87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,\n         87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,\n         87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,\n         87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,\n         87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,  87.,\n         87.,  87.,  87.,  87., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 134., 134., 134., 134., 134., 134.,\n        134., 134., 134., 134., 134., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 108., 108., 108., 108., 108.,\n        108., 108., 108., 108., 108., 108., 106., 106., 106., 106., 106.,\n        106., 106., 106., 106., 106., 106., 106.,  88.,  88.,  88.,  88.,\n         88.,  88.,  88.,  88.,  88.,  88.,  88.,  88.,  88.,  88.,  88.,\n         88.,  88.,  88.,  88.,  88.,  88.,  88.,  88.,  88.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,  78.,\n         78.,  78.,  78.,  78., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 130., 130., 130., 130.,\n        130., 130., 130., 130., 130., 130., 130., 128., 128., 128., 128.,\n        128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,\n        128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,\n        128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,\n        128., 128., 128., 128., 128., 128., 128., 128., 128., 128., 128.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 126., 126., 126., 126., 126., 126., 126., 126., 126., 126.,\n        126., 122., 122., 122., 118., 118., 118.]),\n 'IQGAP3': array([7., 7., 7., ..., 3., 3., 3.]),\n 'NAXE': array([7., 7., 7., ..., 6., 6., 6.]),\n 'GPATCH4': array([2., 2., 2., ..., 9., 9., 9.]),\n 'BCAN': array([ 0.,  0.,  0., ..., 11., 11., 11.]),\n 'NES': array([7., 7., 7., ..., 3., 3., 3.]),\n 'CRABP2': array([2., 2., 2., ..., 3., 3., 3.]),\n 'ISG20L2': array([4., 4., 4., ..., 7., 7., 7.]),\n 'RRNAD1': array([3., 3., 3., ..., 5., 5., 5.]),\n 'MRPL24': array([ 0.,  0.,  0., ..., 11., 11.,  9.]),\n 'HDGF': array([ 2.,  2.,  2., ..., 17., 17., 17.]),\n 'PRCC': array([17., 17., 17., ..., 11.,  2.,  2.]),\n 'ETV3': array([2., 2., 2., ..., 3., 3., 3.]),\n 'KIRREL1': array([3., 3., 3., ..., 2., 2., 2.]),\n 'IFI16': array([9., 9., 9., ..., 2., 2., 2.]),\n 'AIM2': array([5., 5., 5., ..., 3., 3., 3.]),\n 'CADM3': array([5., 5., 5., ..., 4., 4., 4.]),\n 'ACKR1': array([4., 4., 4., ..., 5., 5., 5.]),\n 'DUSP23': array([ 5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,  5.,\n         5.,  5.,  9.,  9., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,  8.,  8.,  8.,\n         8.,  8.,  8.,  8.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11.]),\n 'VSIG8': array([0., 0., 0., ..., 7., 7., 7.]),\n 'TAGLN2': array([ 2.,  2.,  2., ..., 15., 15., 15.]),\n 'IGSF9': array([11., 11., 11., ..., 15., 11.,  9.]),\n 'IGSF8': array([16., 16., 16., ...,  7.,  7.,  7.]),\n 'ATP1A2': array([3., 3., 3., ..., 2., 2., 2.]),\n 'CASQ1': array([3., 3., 3., ..., 5., 5., 5.]),\n 'PEA15': array([11., 11., 11., ..., 17., 17., 17.]),\n 'DCAF8': array([ 6.,  6.,  6., ..., 17., 17., 17.]),\n 'AL139011.2': array([11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,\n         9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  9.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,  7.,\n         7.,  7.,  7.,  7.,  7.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,  0.,\n         0.,  0.,  0.,  0.,  0.,  0.,  0.,  0., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 79., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77.,\n        77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 77., 80.,\n        80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80.,\n        80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80.,\n        80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80., 80.,\n        80., 80.]),\n 'PEX19': array([7., 7., 7., ..., 3., 3., 3.]),\n 'COPA': array([13., 13., 13., ...,  5.,  5.,  5.]),\n 'NCSTN': array([11., 11., 11., ..., 12., 12., 12.]),\n 'F11R': array([2., 2., 2., ..., 3., 3., 3.]),\n 'TSTD1': array([ 4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,  4.,\n         8.,  8., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 14., 14., 14., 14., 14., 14., 16., 16., 16., 16., 16., 16.,\n        16., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13., 13.,\n        13., 13., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 17., 16., 16.,\n        16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 16., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19.]),\n 'USF1': array([ 9.,  9.,  9., ..., 11., 11., 11.]),\n 'KLHDC9': array([3., 3., 5., ..., 5., 3., 3.]),\n 'PFDN2': array([17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 20.,\n        20., 20., 20., 20., 20., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.]),\n 'NIT1': array([11., 11., 11., ...,  2.,  2.,  2.]),\n 'DEDD': array([2., 2., 2., ..., 7., 3., 3.]),\n 'UFC1': array([17., 17., 17., 17., 17., 17., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22., 22.,\n        22., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19.]),\n 'USP21': array([ 0.,  0.,  0., ..., 15., 15., 15.]),\n 'PPOX': array([ 0.,  0.,  0., ..., 18., 18.,  5.]),\n 'B4GALT3': array([ 2.,  2.,  2., ..., 21., 21., 19.]),\n 'NDUFS2': array([ 0.,  0.,  0., ..., 22., 22., 22.]),\n 'TOMM40L': array([5., 5., 5., ..., 4., 4., 2.]),\n 'SDHC': array([3., 3., 3., ..., 5., 5., 5.]),\n 'DUSP12': array([11., 11., 11., ..., 11., 11., 11.]),\n 'ATF6': array([15., 15., 15., ...,  2.,  2.,  2.]),\n 'OLFML2B': array([7., 7., 7., ..., 5., 5., 5.]),\n 'NOS1AP': array([15., 15., 15., ...,  4.,  4.,  4.]),\n 'AL512785.2': array([10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10., 10.,\n        10., 10.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,  6.,\n         6.,  6.,  6.,  6.,  6.]),\n 'C1orf226': array([5., 5., 5., ..., 1., 1., 1.]),\n 'UHMK1': array([0., 0., 0., ..., 4., 4., 2.]),\n 'UAP1': array([9., 9., 9., ..., 2., 2., 2.]),\n 'HSD17B7': array([5., 5., 5., ..., 7., 7., 7.]),\n 'RGS5': array([2., 2., 2., ..., 5., 5., 5.]),\n 'NUF2': array([0., 0., 0., ..., 6., 6., 6.]),\n 'PBX1': array([5., 5., 5., ..., 2., 2., 2.]),\n 'MGST3': array([11., 11., 11., ...,  4.,  4.,  4.]),\n 'ALDH9A1': array([2., 2., 2., ..., 7., 7., 7.]),\n 'TMCO1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'UCK2': array([10., 10., 10., ...,  5.,  5.,  5.]),\n 'POGK': array([15., 15., 15., ...,  6.,  6.,  6.]),\n 'TADA1': array([9., 9., 9., ..., 3., 3., 3.]),\n 'POU2F1': array([7., 7., 7., ..., 4., 4., 4.]),\n 'CD247': array([0., 0., 0., ..., 3., 3., 3.]),\n 'CREG1': array([5., 5., 5., ..., 3., 3., 3.]),\n 'RCSD1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'MPZL1': array([17., 17., 17., ...,  8.,  8.,  8.]),\n 'MPC2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'DCAF6': array([7., 7., 7., ..., 8., 8., 8.]),\n 'GPR161': array([4., 4., 4., ..., 7., 7., 7.]),\n 'TIPRL': array([13., 13., 13., ...,  4.,  4.,  4.]),\n 'SFT2D2': array([5., 5., 5., ..., 4., 4., 4.]),\n 'ATP1B1': array([0., 0., 0., ..., 2., 2., 2.]),\n 'NME7': array([6., 6., 6., ..., 5., 5., 5.]),\n 'BLZF1': array([ 7.,  7., 11., ...,  4.,  4.,  4.]),\n 'CCDC181': array([0., 0., 0., ..., 7., 7., 7.]),\n 'SLC19A2': array([5., 5., 5., ..., 3., 3., 3.]),\n 'C1orf112': array([0., 0., 0., ..., 3., 3., 3.]),\n 'METTL18': array([3., 3., 3., ..., 5., 5., 5.]),\n 'SCYL3': array([0., 0., 0., ..., 3., 3., 3.]),\n 'KIFAP3': array([ 2.,  2.,  2., ..., 17., 17., 17.]),\n 'GORAB': array([ 3.,  3., 17., ...,  4.,  4.,  4.]),\n 'PRRX1': array([3., 3., 3., ..., 3., 3., 3.]),\n 'PRRC2C': array([29., 29., 29., ...,  5.,  5.,  5.]),\n 'VAMP4': array([0., 0., 0., ..., 5., 5., 5.]),\n 'EEF1AKNMT': array([7., 7., 7., ..., 6., 6., 6.]),\n 'DNM3': array([23., 23., 23., ..., 11., 11., 11.]),\n 'PIGC': array([ 2.,  2.,  2., ..., 11., 11., 11.]),\n 'SUCO': array([0., 0., 0., ..., 6., 6., 6.]),\n 'PRDX6': array([11., 11., 11., ...,  7.,  7.,  7.]),\n 'ANKRD45': array([2., 2., 2., ..., 3., 3., 3.]),\n 'KLHL20': array([19., 19., 19., ...,  4.,  4.,  4.]),\n 'CENPL': array([7., 7., 7., ..., 5., 5., 5.]),\n 'DARS2': array([7., 7., 7., ..., 2., 2., 2.]),\n 'ZBTB37': array([0., 0., 0., ..., 5., 5., 5.]),\n 'RC3H1': array([25., 25., 25., ...,  3.,  3.,  3.]),\n 'RABGAP1L': array([0., 0., 0., ..., 2., 2., 2.]),\n 'CACYBP': array([3., 3., 3., ..., 4., 4., 4.]),\n 'MRPS14': array([2., 2., 2., ..., 3., 3., 3.]),\n 'COP1': array([31., 31., 31., ..., 13., 13., 13.]),\n 'PAPPA2': array([0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,\n        0., 0., 0., 0., 0., 0., 0., 0., 0., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.]),\n 'ASTN1': array([6., 6., 6., ..., 3., 3., 3.]),\n 'BRINP2': array([7., 7., 7., ..., 2., 2., 2.]),\n 'RASAL2': array([9., 9., 9., ..., 4., 4., 4.]),\n 'RALGPS2': array([5., 5., 5., ..., 4., 4., 4.]),\n 'ANGPTL1': array([4., 4., 4., ..., 3., 3., 3.]),\n 'FAM20B': array([0., 0., 0., ..., 2., 2., 2.]),\n 'TOR3A': array([9., 9., 9., ..., 9., 9., 9.]),\n 'ABL2': array([0., 0., 0., ..., 3., 3., 3.]),\n 'SOAT1': array([11., 11., 11., ...,  4.,  2.,  2.]),\n 'TOR1AIP2': array([18., 18., 18., ...,  5.,  5.,  5.]),\n 'TOR1AIP1': array([5., 5., 5., ..., 3., 3., 3.]),\n 'CEP350': array([27., 27., 27., ...,  7.,  7.,  7.]),\n 'QSOX1': array([ 9., 11., 11., ...,  2.,  2.,  2.]),\n 'ACBD6': array([ 4.,  4.,  4., ..., 13., 13., 13.]),\n 'XPR1': array([21., 21., 21., ...,  4.,  4.,  4.]),\n 'KIAA1614': array([0., 0., 0., ..., 3., 3., 3.]),\n 'STX6': array([4., 4., 4., ..., 4., 4., 4.]),\n 'CACNA1E': array([5., 5., 5., ..., 3., 3., 3.]),\n 'GLUL': array([4., 4., 4., ..., 7., 7., 7.]),\n 'DHX9': array([61., 61., 60., ..., 25., 25., 25.]),\n 'LAMC1': array([7., 7., 7., ..., 2., 2., 2.]),\n 'NMNAT2': array([7., 7., 7., ..., 3., 3., 3.]),\n 'SMG7': array([15., 15., 15., ..., 17., 17., 17.]),\n 'ARPC5': array([ 6.,  6.,  6., ..., 21., 21., 21.]),\n 'RGL1': array([13., 13., 13., ...,  4.,  4.,  4.]),\n 'COLGALT2': array([3., 5., 5., ..., 5., 3., 3.]),\n 'TSEN15': array([5., 5., 5., ..., 2., 2., 2.]),\n 'C1orf21': array([11., 11., 11., ...,  2.,  2.,  2.]),\n 'EDEM3': array([2., 2., 2., ..., 3., 3., 3.]),\n 'RNF2': array([9., 9., 9., ..., 2., 2., 2.]),\n 'TRMT1L': array([15., 15., 15., ...,  3.,  3.,  3.]),\n 'SWT1': array([0., 0., 0., ..., 4., 4., 4.]),\n 'IVNS1ABP': array([49., 49., 49., ..., 19., 19., 19.]),\n 'TPR': array([23., 23., 23., ..., 15., 15., 15.]),\n 'ODR4': array([39., 39., 39., ...,  6.,  6.,  6.]),\n 'OCLM': array([11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11., 11.,\n        11., 11., 11.]),\n 'BRINP3': array([5., 5., 5., ..., 7., 7., 7.]),\n 'RGS1': array([5., 5., 5., ..., 3., 3., 3.]),\n 'RGS2': array([7., 7., 7., ..., 5., 5., 5.]),\n 'UCHL5': array([2., 2., 2., ..., 5., 5., 5.]),\n 'RO60': array([17., 17., 17., ..., 17., 17., 17.]),\n 'GLRX2': array([2., 2., 2., ..., 9., 9., 9.]),\n 'CDC73': array([13., 13., 13., ...,  2.,  2.,  2.]),\n 'B3GALT2': array([7., 7., 7., ..., 5., 5., 5.]),\n 'KCNT2': array([4., 4., 4., ..., 3., 3., 3.]),\n 'ASPM': array([0., 0., 0., ..., 3., 3., 3.]),\n 'ZBTB41': array([23., 23., 23., ...,  3.,  3.,  3.]),\n 'CRB1': array([3., 3., 3., ..., 2., 2., 2.]),\n 'DENND1B': array([2., 2., 2., ..., 5., 5., 5.]),\n 'LHX9': array([0., 0., 0., ..., 3., 3., 3.]),\n 'NEK7': array([7., 7., 7., ..., 3., 3., 3.]),\n 'ZNF281': array([2., 2., 2., ..., 3., 3., 3.]),\n 'KIF14': array([11., 11., 11., ...,  3.,  3.,  3.]),\n 'DDX59': array([13., 13., 13., ...,  3.,  3.,  3.]),\n 'CAMSAP2': array([19., 19., 19., ...,  3.,  3.,  3.]),\n 'KIF21B': array([4., 4., 4., ..., 7., 7., 7.]),\n 'TMEM9': array([ 0.,  0.,  0., ..., 15., 15., 15.]),\n 'PHLDA3': array([5., 5., 5., ..., 4., 4., 4.]),\n 'CSRP1': array([0., 0., 0., ..., 3., 3., 3.]),\n 'NAV1': array([3., 3., 3., ..., 4., 4., 4.]),\n 'IPO9': array([23., 23., 23., ...,  4.,  4.,  4.]),\n 'SHISA4': array([9., 9., 9., ..., 9., 9., 9.]),\n 'TIMM17A': array([5., 5., 5., ..., 2., 2., 2.]),\n 'RNPEP': array([11., 11., 11., ...,  2.,  2.,  2.]),\n 'ARL8A': array([ 4.,  4.,  4., ..., 11., 11., 11.]),\n 'UBE2T': array([19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18., 18.,\n        18., 18., 18., 18., 18., 18., 18., 18., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19., 19.,\n        19., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17., 17.,\n        17., 17., 17., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15., 15.,\n        15., 15., 15., 15., 15.]),\n 'PPP1R12B': array([27., 27., 27., ...,  4.,  4.,  4.]),\n 'KDM5B': array([6., 6., 6., ..., 7., 7., 7.]),\n 'KLHL12': array([0., 0., 0., ..., 3., 3., 3.]),\n 'ADIPOR1': array([ 0.,  0.,  0., ..., 15., 15., 15.]),\n 'CYB5R1': array([6., 6., 6., ..., 9., 5., 5.]),\n 'TMEM183A': array([31., 31., 31., ...,  7.,  7.,  7.]),\n 'ADORA1': array([0., 0., 0., ..., 4., 4., 4.]),\n 'BTG2': array([9., 9., 9., ..., 7., 7., 7.]),\n 'ATP2B4': array([0., 0., 0., ..., 3., 3., 3.]),\n 'ZC3H11A': array([81., 81., 81., ..., 14., 14., 14.]),\n 'ZBED6': array([111., 111., 111., ...,  14.,  14.,  14.]),\n 'SNRPE': array([ 7.,  7.,  7.,  7., 15., 15., 15., 15., 15., 15., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 21.,\n        21., 21., 21., 21., 21., 21., 21., 21., 21., 21., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20.,\n        20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 20., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 14.,\n        14., 14., 14., 14., 14., 14., 14., 14., 14., 14., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24., 24.,\n        24., 24., 24., 24., 24., 24., 24., 24., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27., 27.,\n        27., 27., 27., 27., 27., 27., 27., 27., 27., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25., 25.,\n        25., 25., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23., 23.,\n        23., 23.,  6.,  6.,  6.,  6.,  4.,  4.]),\n 'PLEKHA6': array([0., 0., 0., ..., 3., 3., 3.]),\n 'MDM4': array([9., 9., 9., ..., 6., 6., 6.]),\n 'LRRN2': array([2., 2., 2., ..., 5., 5., 5.]),\n 'CNTN2': array([0., 0., 0., ..., 2., 2., 2.]),\n 'RBBP5': array([11., 11., 11., ...,  5.,  5.,  5.]),\n 'DSTYK': array([7., 7., 7., ..., 5., 5., 5.]),\n 'TMCC2': array([3., 3., 3., ..., 4., 4., 4.]),\n 'KLHDC8A': array([0., 0., 0., ..., 9., 9., 9.]),\n 'LEMD1': array([16., 16., 16., ...,  9.,  7.,  7.]),\n 'BLACAT1': array([3., 3., 3., ..., 6., 6., 6.]),\n 'CDK18': array([0., 3., 3., ..., 2., 2., 2.]),\n 'ELK4': array([3., 3., 3., ..., 3., 3., 3.]),\n 'NUCKS1': array([35., 35., 35., ...,  5.,  5.,  5.]),\n 'RAB29': array([2., 2., 2., ..., 5., 5., 5.]),\n 'SLC41A1': array([5., 5., 5., ..., 3., 3., 3.]),\n 'FAM72A': array([3., 3., 3., ..., 2., 2., 2.]),\n 'SRGAP2': array([5., 5., 5., ..., 4., 4., 4.]),\n 'EIF2D': array([2., 2., 5., ..., 7., 7., 7.]),\n 'DYRK3': array([5., 5., 5., ..., 2., 2., 2.]),\n 'MAPKAPK2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'PFKFB2': array([0., 0., 0., ..., 5., 5., 5.]),\n 'YOD1': array([0., 0., 0., ..., 5., 5., 5.]),\n 'CD55': array([3., 3., 3., ..., 2., 2., 2.]),\n 'CD46': array([25., 25., 25., ..., 12., 12., 12.]),\n 'PLXNA2': array([2., 2., 2., ..., 3., 3., 3.]),\n 'CAMK1G': array([5., 5., 5., ..., 2., 2., 2.]),\n 'UTP25': array([17., 17., 17., ...,  2.,  2.,  2.]),\n 'SYT14': array([23., 23., 23., ...,  5.,  5.,  5.]),\n 'SERTAD4': array([3., 3., 3., ..., 2., 2., 2.]),\n 'RCOR3': array([ 0.,  0.,  0., ..., 10., 10., 10.]),\n 'TRAF5': array([0., 0., 0., ..., 2., 2., 2.]),\n 'NEK2': array([2., 2., 2., ..., 3., 3., 3.]),\n 'LPGAT1': array([19., 19., 19., ...,  7.,  7.,  7.]),\n 'INTS7': array([2., 2., 2., ..., 3., 3., 3.]),\n 'DTL': array([3., 3., 3., ..., 2., 2., 2.]),\n 'PPP2R5A': array([15., 15., 15., ...,  4.,  4.,  4.]),\n 'PACC1': array([4., 4., 4., ..., 5., 5., 5.]),\n 'NENF': array([3., 3., 3., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7.,\n        7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 7., 6., 6., 6., 6.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8., 8.,\n        8., 8., 8., 8., 8., 8., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9., 9.,\n        9., 9., 9., 9., 9., 9., 9., 2., 2., 2., 2., 2., 2.]),\n 'ATF3': array([0., 0., 0., ..., 3., 3., 3.]),\n 'BATF3': array([5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5., 5.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3., 3.,\n        3.]),\n 'NSL1': array([6., 6., 6., ..., 5., 5., 5.]),\n 'TATDN3': array([3., 3., 3., ..., 6., 6., 6.]),\n 'FLVCR1': array([7., 7., 7., ..., 2., 2., 2.]),\n 'VASH2': array([23., 23., 23., ..., 10., 10., 10.]),\n 'ANGEL2': array([ 2.,  2.,  2., ..., 13., 13., 13.]),\n ...}\n\n\n\nlen(helaMergeMetaCleanW5TransLen[helaMergeMetaCleanW5TransLen['len'] <= 5000])\n\n8274\n\n\n\nlen(hela_merge_gene_protCodingMetaCoverageW5)\n\n11649\n\n\n\nhelaMergeMetaCleanW5TransLen\n\n\n\n\n\n  \n    \n      \n      gene\n      len\n    \n  \n  \n    \n      6992\n      AC022506.1\n      103\n    \n    \n      7005\n      CYP27B1\n      105\n    \n    \n      4647\n      AC083862.1\n      118\n    \n    \n      10226\n      CEACAM19\n      119\n    \n    \n      4072\n      AL035699.1\n      127\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      2305\n      ZBTB20\n      28469\n    \n    \n      3898\n      DST\n      31630\n    \n    \n      7806\n      FLRT2\n      33701\n    \n    \n      285\n      MACF1\n      34151\n    \n    \n      4124\n      SYNE1\n      34491\n    \n  \n\n11649 rows × 2 columns\n\n\n\n\ngenesSorted = helaMergeMetaCleanW5TransLen\\\n    .merge(\n        gene_counts.rename('count'),\n        left_on='gene',\n        right_index=True,\n        how='left')\\\n    .sort_values(\n        by='count',\n        ascending=False)\\\n    .drop('count', axis=1)\ngenesSorted\n\n\n\n\n\n  \n    \n      \n      gene\n      len\n    \n  \n  \n    \n      6883\n      TUBA1A\n      2882\n    \n    \n      11240\n      TMSB4X\n      1700\n    \n    \n      3920\n      EEF1A1\n      3427\n    \n    \n      11641\n      MT-CO1\n      1540\n    \n    \n      166\n      STMN1\n      2371\n    \n    \n      ...\n      ...\n      ...\n    \n    \n      5273\n      AL358113.1\n      5023\n    \n    \n      3394\n      PCDHA6\n      5372\n    \n    \n      10551\n      AL035461.4\n      5860\n    \n    \n      11219\n      P2RY8\n      9054\n    \n    \n      953\n      ZBED6\n      9910\n    \n  \n\n11649 rows × 2 columns\n\n\n\n\nhela_merge_gene_protCodingW5_absCov=computeMetaDfAverages(hela_merge_gene_protCodingMetaCoverageW5,\n                                                             genesSorted, 15000)\n\n\nplt.figure(figsize=(4,7), dpi=300, facecolor=(1,1,1))\nplt.imshow(hela_merge_gene_protCodingW5_absCov,\n           vmin=0, vmax=1, \n           aspect='auto',\n           interpolation='none')\naxes = plt.gca()\naxes.set_xlim([0,15000])\nplt.xlabel('Position on Gene 5\\' - 3\\'')\nplt.ylabel('Genes Sorted by Expression')\n#plt.yticks([], [])\n\nText(0, 0.5, 'Genes Sorted by Expression')\n\n\n\n\n\n\ngene_counts_path = '../data/talon-freeze-0421/Gene_counts_7189_allSingleCells_4seurat.tsv.gz'\ngene_counts = pd.read_csv(gene_counts_path, sep='\\t', index_col='annot_gene_name').sum(axis=1)\ngene_counts\n\nannot_gene_name\nAL669831.3           2\nMTND1P23             6\nMTND2P28           109\nMTCO1P12            27\nMTCO2P12             2\n                  ... \nEXO1                22\nTALONG000212691     26\nTALONG000212818      3\nKIF26B              49\nAL627095.2           5\nLength: 19367, dtype: int64\n\n\n\n{k: len(v) for k,v in hela_merge_gene_protCodingMetaCoverageW5.items()}\n\n{'NOC2L': 2755,\n 'KLHL17': 2838,\n 'HES4': 1038,\n 'C1orf159': 3937,\n 'SDF4': 2213,\n 'UBE2J2': 3405,\n 'ACAP3': 3791,\n 'PUSL1': 1349,\n 'INTS11': 3423,\n 'CPTP': 2507,\n 'MXRA8': 3086,\n 'AURKAIP1': 1408,\n 'CCNL2': 4141,\n 'MRPL20': 1743,\n 'ATAD3B': 4096,\n 'ATAD3A': 2862,\n 'TMEM240': 2007,\n 'SSU72': 5207,\n 'MIB2': 4124,\n 'CDK11B': 3205,\n 'SLC35E2B': 6396,\n 'CDK11A': 3124,\n 'SLC35E2A': 7292,\n 'NADK': 4193,\n 'GNB1': 3337,\n 'TMEM52': 1393,\n 'PRKCZ': 5310,\n 'FAAP20': 2856,\n 'MORN1': 6696,\n 'RER1': 5045,\n 'PEX10': 3111,\n 'PANK4': 2654,\n 'PRXL2B': 2846,\n 'PRDM16': 8977,\n 'TPRG1L': 2399,\n 'WRAP73': 2090,\n 'LRRC47': 4301,\n 'CEP104': 7176,\n 'DFFB': 3183,\n 'C1orf174': 1643,\n 'KCNAB2': 10637,\n 'CHD5': 2732,\n 'RPL22': 3042,\n 'ICMT': 4793,\n 'ACOT7': 3433,\n 'TNFRSF25': 1697,\n 'PLEKHG5': 6205,\n 'NOL9': 6625,\n 'ZBTB48': 2345,\n 'PHF13': 3630,\n 'THAP3': 1685,\n 'DNAJC11': 3471,\n 'CAMTA1': 7083,\n 'VAMP3': 2668,\n 'PER3': 911,\n 'PARK7': 1192,\n 'ERRFI1': 4006,\n 'SLC45A1': 2784,\n 'RERE': 11852,\n 'ENO1': 2912,\n 'SLC25A33': 3863,\n 'TMEM201': 6495,\n 'CLSTN1': 4777,\n 'CTNNBIP1': 3337,\n 'LZIC': 5003,\n 'NMNAT1': 4290,\n 'UBE4B': 6847,\n 'KIF1B': 12771,\n 'PGD': 2557,\n 'CENPS-CORT': 2092,\n 'CENPS': 1182,\n 'CORT': 1128,\n 'DFFA': 6623,\n 'PEX14': 2085,\n 'TARDBP': 4143,\n 'AL109811.3': 552,\n 'SRM': 1765,\n 'EXOSC10': 2791,\n 'MTOR': 8945,\n 'UBIAD1': 4821,\n 'DISP3': 5415,\n 'FBXO44': 3525,\n 'FBXO6': 1442,\n 'MAD2L2': 2414,\n 'DRAXIN': 7363,\n 'AGTRAP': 1315,\n 'MTHFR': 9501,\n 'CLCN6': 6072,\n 'KIAA2013': 3279,\n 'MFN2': 4742,\n 'MIIP': 1539,\n 'TNFRSF1B': 3696,\n 'VPS13D': 14540,\n 'PDPN': 3705,\n 'PRDM2': 10233,\n 'KAZN': 8527,\n 'TMEM51': 2236,\n 'CASP9': 4441,\n 'DNAJC16': 6482,\n 'DDI2': 10665,\n 'RSC1A1': 1852,\n 'PLEKHM2': 4132,\n 'FBLIM1': 4189,\n 'SPEN': 5431,\n 'ZBTB17': 2792,\n 'EPHA2': 3944,\n 'FBXO42': 6538,\n 'SZRD1': 3632,\n 'NECAP2': 2019,\n 'NBPF1': 4016,\n 'CROCC': 6663,\n 'MFAP2': 1043,\n 'ATP13A2': 4111,\n 'SDHB': 1326,\n 'RCC2': 4077,\n 'ARHGEF10L': 4830,\n 'IGSF21': 1890,\n 'UBR4': 19695,\n 'EMC1': 6655,\n 'MRTO4': 2047,\n 'AKR7A3': 1213,\n 'AKR7A2': 1360,\n 'SLC66A1': 2684,\n 'CAPZB': 2755,\n 'MICOS10': 3976,\n 'NBL1': 2267,\n 'OTUD3': 1588,\n 'CAMK2N1': 2324,\n 'MUL1': 2426,\n 'PINK1': 2655,\n 'DDOST': 2124,\n 'HP1BP3': 6231,\n 'EIF4G3': 6873,\n 'ECE1': 6277,\n 'NBPF3': 3885,\n 'RAP1GAP': 4152,\n 'USP48': 6387,\n 'CDC42': 16194,\n 'WNT4': 4648,\n 'ZBTB40': 9164,\n 'C1QA': 1218,\n 'EPHB2': 5195,\n 'KDM1A': 3150,\n 'LUZP1': 3466,\n 'HNRNPR': 2718,\n 'ZNF436': 4784,\n 'E2F2': 5194,\n 'RPL11': 972,\n 'ELOA': 5152,\n 'PITHD1': 2171,\n 'LYPLA2': 1998,\n 'GALE': 1880,\n 'HMGCL': 1568,\n 'FUCA1': 2045,\n 'PNRC2': 2761,\n 'SRSF10': 5585,\n 'STPG1': 3593,\n 'NIPAL3': 8609,\n 'RCAN3': 7136,\n 'SRRM1': 3459,\n 'CLIC4': 4251,\n 'SYF2': 1755,\n 'RSRP1': 2913,\n 'TMEM50A': 2262,\n 'MACO1': 2542,\n 'MTFR1L': 4531,\n 'STMN1': 2371,\n 'PAFAH2': 3732,\n 'PDIK1L': 4558,\n 'ZNF593': 730,\n 'CEP85': 3935,\n 'SH3BGRL3': 874,\n 'UBXN11': 2677,\n 'DHDDS': 4602,\n 'HMGN2': 1266,\n 'ARID1A': 9878,\n 'PIGV': 3354,\n 'GPATCH3': 2224,\n 'NUDC': 2497,\n 'TRNP1': 1977,\n 'SLC9A1': 5431,\n 'WDTC1': 4704,\n 'TMEM222': 2415,\n 'WASF2': 5669,\n 'AHDC1': 6701,\n 'IFI6': 840,\n 'FAM76A': 4032,\n 'STX12': 3101,\n 'PPP1R8': 2809,\n 'RPA2': 1966,\n 'XKR8': 2176,\n 'EYA3': 6141,\n 'DNAJC8': 1762,\n 'ATP5IF1': 2223,\n 'SESN2': 3460,\n 'MED18': 1827,\n 'PHACTR4': 3662,\n 'RCC1': 3566,\n 'TRNAU1AP': 1797,\n 'TAF12': 1669,\n 'GMEB1': 6438,\n 'YTHDF2': 2931,\n 'EPB41': 8817,\n 'SRSF4': 2298,\n 'MECR': 2640,\n 'PUM1': 5922,\n 'NKAIN1': 3025,\n 'SNRNP40': 2039,\n 'ZCCHC17': 1919,\n 'FABP3': 1296,\n 'SERINC2': 2700,\n 'PEF1': 1612,\n 'COL16A1': 5872,\n 'ADGRB2': 6074,\n 'PTP4A2': 4526,\n 'KHDRBS1': 2711,\n 'TMEM39B': 1780,\n 'KPNA6': 7353,\n 'TXLNA': 5112,\n 'CCDC28B': 1660,\n 'IQCC': 2265,\n 'TMEM234': 1409,\n 'EIF3I': 1561,\n 'HDAC1': 2116,\n 'MARCKSL1': 1544,\n 'FAM229A': 726,\n 'BSDC1': 4687,\n 'ZBTB8B': 12829,\n 'ZBTB8A': 7075,\n 'ZBTB8OS': 1734,\n 'RBBP4': 2935,\n 'SYNC': 3720,\n 'KIAA1522': 5845,\n 'YARS1': 3236,\n 'S100PBP': 5203,\n 'HPCA': 1410,\n 'AK2': 8827,\n 'AZIN2': 2387,\n 'ZNF362': 3185,\n 'PHC2': 4160,\n 'ZSCAN20': 5252,\n 'CSMD2': 1382,\n 'SMIM12': 7988,\n 'DLGAP3': 3919,\n 'ZMYM6': 7465,\n 'ZMYM1': 5034,\n 'SFPQ': 3446,\n 'ZMYM4': 3514,\n 'KIAA0319L': 5174,\n 'NCDN': 4202,\n 'PSMB2': 4526,\n 'C1orf216': 2626,\n 'CLSPN': 3687,\n 'AGO4': 7270,\n 'AGO1': 13806,\n 'AGO3': 20551,\n 'TEKT2': 1653,\n 'ADPRHL2': 1649,\n 'TRAPPC3': 1899,\n 'MAP7D1': 3799,\n 'THRAP3': 3389,\n 'STK40': 5261,\n 'LSM10': 858,\n 'OSCP1': 1817,\n 'MRPS15': 951,\n 'GRIK3': 3198,\n 'MEAF6': 2956,\n 'SNIP1': 4552,\n 'DNALI1': 2646,\n 'GNL2': 2552,\n 'C1orf109': 2912,\n 'CDCA8': 2404,\n 'MANEAL': 3012,\n 'YRDC': 1846,\n 'C1orf122': 2229,\n 'MTF1': 7935,\n 'INPP5B': 7828,\n 'SF3A3': 2772,\n 'FHL3': 1654,\n 'UTP11': 2021,\n 'RRAGC': 2679,\n 'MYCBP': 2550,\n 'AL139260.3': 607,\n 'AKIRIN1': 2686,\n 'NDUFS5': 546,\n 'MACF1': 34151,\n 'PABPC4': 3372,\n 'HPCAL4': 4756,\n 'PPIE': 5553,\n 'TRIT1': 2139,\n 'MYCL': 5061,\n 'MFSD2A': 2211,\n 'CAP1': 3322,\n 'PPT1': 4461,\n 'RLF': 1605,\n 'ZMPSTE24': 2973,\n 'COL9A2': 3150,\n 'SMAP2': 3417,\n 'ZFP69B': 2287,\n 'ZFP69': 2794,\n 'EXO5': 3090,\n 'ZNF684': 2798,\n 'NFYC': 4216,\n 'CTPS1': 5875,\n 'SCMH1': 3818,\n 'HIVEP3': 508,\n 'FOXJ3': 6888,\n 'RIMKLA': 10636,\n 'PPCS': 2808,\n 'CCDC30': 5500,\n 'PPIH': 1404,\n 'YBX1': 1900,\n 'P3H1': 3064,\n 'C1orf50': 4758,\n 'SVBP': 856,\n 'ZNF691': 2034,\n 'SLC2A1': 3675,\n 'EBNA1BP2': 1620,\n 'CDC20': 1801,\n 'ELOVL1': 1783,\n 'MED8': 2035,\n 'SZT2': 11673,\n 'HYI': 1455,\n 'PTPRF': 6559,\n 'KDM4A': 4623,\n 'ST3GAL3': 8449,\n 'IPO13': 4517,\n 'DPH2': 2464,\n 'ATP6V0B': 2118,\n 'B4GALT2': 2939,\n 'CCDC24': 1554,\n 'SLC6A9': 3993,\n 'DMAP1': 1842,\n 'ERI3': 2452,\n 'RNF220': 3664,\n 'TMEM53': 3559,\n 'ARMH1': 2196,\n 'KIF2C': 3340,\n 'RPS8': 776,\n 'PLK3': 2338,\n 'EIF2B3': 2176,\n 'HECTD3': 3817,\n 'UROD': 2689,\n 'MUTYH': 3846,\n 'TOE1': 1885,\n 'CCDC163': 2149,\n 'MMACHC': 5047,\n 'PRDX1': 1502,\n 'AKR1A1': 2405,\n 'NASP': 2761,\n 'GPBP1L1': 3642,\n 'TMEM69': 1463,\n 'IPP': 3307,\n 'MAST2': 6243,\n 'PIK3R3': 5930,\n 'AL358075.4': 1551,\n 'POMGNT1': 3709,\n 'RAD54L': 3135,\n 'LRRC41': 4126,\n 'UQCRH': 535,\n 'NSUN4': 5257,\n 'FAAH': 2040,\n 'MKNK1': 3349,\n 'ATPAF1': 4487,\n 'EFCAB14': 5815,\n 'CYP4X1': 2254,\n 'STIL': 5547,\n 'CMPK1': 3506,\n 'SPATA6': 5083,\n 'BEND5': 1691,\n 'ELAVL4': 7172,\n 'DMRTA2': 3166,\n 'FAF1': 6819,\n 'CDKN2C': 2246,\n 'RNF11': 3072,\n 'EPS15': 5161,\n 'OSBPL9': 3841,\n 'NRDC': 4063,\n 'TXNDC12': 2181,\n 'KTI12': 1706,\n 'BTF3L4': 2696,\n 'ZFYVE9': 5192,\n 'ORC1': 3119,\n 'PRPF38A': 5231,\n 'TUT4': 5962,\n 'COA7': 3986,\n 'ZYG11B': 8204,\n 'ECHDC2': 1588,\n 'SCP2': 6322,\n 'CPT2': 2815,\n 'CZIB': 1100,\n 'MAGOH': 654,\n 'LRP8': 9577,\n 'NDC1': 4550,\n 'YIPF1': 1819,\n 'HSPB11': 2372,\n 'LRRC42': 1908,\n 'TMEM59': 9061,\n 'TCEANC2': 10674,\n 'MRPL37': 2141,\n 'SSBP3': 3594,\n 'TTC4': 2354,\n 'DHCR24': 4624,\n 'USP24': 11016,\n 'PLPP3': 3271,\n 'PRKAA2': 9360,\n 'DAB1': 5682,\n 'OMA1': 1101,\n 'MYSM1': 7158,\n 'JUN': 3255,\n 'HOOK1': 2421,\n 'NFIA': 6411,\n 'TM2D1': 4017,\n 'PATJ': 6290,\n 'USP1': 3865,\n 'DOCK7': 9878,\n 'ATG4C': 3114,\n 'ALG6': 3323,\n 'ITGB3BP': 1063,\n 'EFCAB7': 2176,\n 'PGM1': 3461,\n 'RAVER2': 4399,\n 'JAK1': 6487,\n 'AK4': 7282,\n 'DNAJC6': 6500,\n 'LEPROT': 5007,\n 'LEPR': 10965,\n 'PDE4B': 6712,\n 'SGIP1': 5757,\n 'MIER1': 4794,\n 'SLC35D1': 6191,\n 'SERBP1': 4318,\n 'GADD45A': 1350,\n 'GNG12': 4393,\n 'WLS': 3359,\n 'DEPDC1': 5436,\n 'LRRC7': 7183,\n 'LRRC40': 2841,\n 'SRSF11': 3730,\n 'ANKRD13C': 4077,\n 'HHLA3': 903,\n 'CTH': 2138,\n 'ZRANB2': 3143,\n 'FPGT': 3332,\n 'FPGT-TNNI3K': 8941,\n 'TNNI3K': 2766,\n 'ERICH3': 7694,\n 'CRYZ': 2352,\n 'TYW3': 3853,\n 'SLC44A5': 4437,\n 'ACADM': 2732,\n 'RABGGTB': 1527,\n 'ST6GALNAC5': 5545,\n 'PIGK': 5512,\n 'AK5': 4522,\n 'AC118549.1': 6585,\n 'USP33': 4833,\n 'MIGA1': 7226,\n 'NEXN': 2720,\n 'FUBP1': 2603,\n 'DNAJB4': 3040,\n 'IFI44L': 6159,\n 'IFI44': 1724,\n 'ADGRL4': 4563,\n 'ADGRL2': 6663,\n 'TTLL7': 2566,\n 'PRKACB': 6317,\n 'SAMD13': 2167,\n 'RPF1': 2288,\n 'GNG5': 938,\n 'CTBS': 6569,\n 'SSX2IP': 4606,\n 'C1orf52': 3281,\n 'BCL10': 2831,\n 'DDAH1': 4585,\n 'CCN1': 2276,\n 'ZNHIT6': 6201,\n 'ODF2L': 3519,\n 'SH3GLB1': 6478,\n 'SELENOF': 1879,\n 'HS2ST1': 7424,\n 'AC093155.3': 942,\n 'LMO4': 5138,\n 'PKN2': 5812,\n 'GTF2B': 1619,\n 'KYAT3': 2033,\n 'RBMXL1': 5085,\n 'LRRC8B': 8211,\n 'LRRC8C': 7168,\n 'LRRC8D': 4850,\n 'ZNF326': 3157,\n 'ZNF644': 5977,\n 'HFM1': 1634,\n 'CDC7': 3409,\n 'BTBD8': 4239,\n 'GLMN': 2058,\n 'RPAP2': 2971,\n 'EVI5': 2114,\n 'RPL5': 1184,\n 'DIPK1A': 3089,\n 'MTF2': 2611,\n 'TMED5': 6051,\n 'CCDC18': 3731,\n 'DR1': 10122,\n 'FNBP1L': 5513,\n 'BCAR3': 4131,\n 'DNTTIP2': 5915,\n 'GCLM': 4907,\n 'ARHGAP29': 2098,\n 'ABCD3': 3872,\n 'F3': 2296,\n 'CNN3': 2286,\n 'ALG14': 9373,\n 'TLCD4-RWDD3': 1959,\n 'RWDD3': 1195,\n 'PTBP2': 3082,\n 'DPYD': 5605,\n 'SNX7': 1912,\n 'PLPPR5': 4280,\n 'PLPPR4': 5538,\n 'PALMD': 2537,\n 'AGL': 5916,\n 'SLC35A3': 15753,\n 'AC118553.2': 2799,\n 'MFSD14A': 2777,\n 'SASS6': 1522,\n 'TRMT13': 1794,\n 'DBT': 11301,\n 'RTCA': 2877,\n 'CDC14A': 5259,\n 'VCAM1': 3099,\n 'EXTL2': 3269,\n 'SLC30A7': 8598,\n 'DPH5': 1785,\n 'S1PR1': 3424,\n 'OLFM3': 4123,\n 'COL11A1': 7601,\n 'RNPC3': 3910,\n 'AMY2B': 3046,\n 'PRMT6': 2619,\n 'NTNG1': 5401,\n 'SLC25A24': 6539,\n 'HENMT1': 2188,\n 'PRPF38B': 2698,\n 'STXBP3': 2487,\n 'AKNAD1': 1379,\n 'GPSM2': 8306,\n 'CLCC1': 4962,\n 'WDR47': 4421,\n 'TAF13': 812,\n 'TMEM167B': 2828,\n 'C1orf194': 886,\n 'KIAA1324': 7200,\n 'SARS1': 1965,\n 'CELSR2': 11013,\n 'PSRC1': 2175,\n 'SORT1': 7842,\n 'PSMA5': 4620,\n 'ATXN7L2': 2316,\n 'CYB561D1': 3553,\n 'GNAI3': 9042,\n 'AMPD2': 5019,\n 'GSTM4': 5086,\n 'GSTM2': 4199,\n 'GSTM1': 1477,\n 'GSTM5': 1747,\n 'GSTM3': 4214,\n 'CSF1': 4986,\n 'AHCYL1': 4633,\n 'STRIP1': 3319,\n 'RBM15': 4668,\n 'LAMTOR5': 1469,\n 'KCNA3': 2474,\n 'LRIF1': 3500,\n 'DRAM2': 2420,\n 'CEPT1': 2336,\n 'WDR77': 2490,\n 'ATP5PB': 1185,\n 'RAP1A': 1836,\n 'DDX20': 5345,\n 'KCND3': 4991,\n 'CTTNBP2NL': 5929,\n 'WNT2B': 12250,\n 'ST7L': 4798,\n 'CAPZA1': 2356,\n 'RHOC': 3171,\n 'AL603832.3': 811,\n 'SLC16A1': 5007,\n 'LRIG2': 11564,\n 'MAGI3': 5370,\n 'PHTF1': 4327,\n 'RSBN1': 6619,\n 'AP4B1': 3481,\n 'DCLRE1B': 3866,\n 'HIPK1': 9081,\n 'SYT6': 5101,\n 'TRIM33': 8439,\n 'BCAS2': 1273,\n 'DENND2C': 1511,\n 'NRAS': 4324,\n 'CSDE1': 4711,\n 'SIKE1': 5504,\n 'TSPAN2': 3214,\n 'VANGL1': 8747,\n 'NHLH2': 7539,\n 'ATP1A1': 4662,\n 'CD58': 1747,\n 'IGSF3': 7388,\n 'PTGFRN': 6312,\n 'TTF2': 9437,\n 'TRIM45': 4323,\n 'MAN1A2': 9665,\n 'GDAP2': 9604,\n 'WDR3': 3644,\n 'WARS2': 2832,\n 'ZNF697': 5577,\n 'PHGDH': 2825,\n 'NOTCH2': 7588,\n 'FAM72B': 2372,\n 'NBPF8': 7716,\n 'PDE4DIP': 15420,\n 'SEC22B': 4448,\n 'NOTCH2NLB': 1029,\n 'NOTCH2NLA': 2829,\n 'NOTCH2NLC': 5196,\n 'NBPF10': 4175,\n 'AC242842.3': 3939,\n 'AC253572.1': 941,\n 'TXNIP': 2809,\n 'POLR3GL': 1176,\n 'AC243547.3': 190,\n 'ANKRD34A': 3667,\n 'LIX1L': 3987,\n 'RBM8A': 4958,\n 'PEX11B': 1716,\n 'PIAS3': 3174,\n 'NUDT17': 1471,\n 'POLR3C': 3802,\n 'RNF115': 1613,\n 'GPR89A': 2231,\n 'NBPF12': 8988,\n 'PRKAB2': 5341,\n 'CHD1L': 2610,\n 'BCL9': 5514,\n 'GPR89B': 2158,\n 'NBPF24': 3510,\n 'NBPF14': 2421,\n 'NBPF15': 3852,\n 'NBPF16': 1626,\n 'H3-2': 2659,\n 'H2BC18': 2538,\n 'H4C14': 583,\n 'H2AC19': 562,\n 'HIST2H2AA4': 547,\n 'H4C15': 1132,\n 'BOLA1': 1348,\n 'SV2A': 4784,\n 'SF3B4': 1702,\n 'MTMR11': 2959,\n 'OTUD7B': 3092,\n 'VPS45': 3433,\n 'PLEKHO1': 2716,\n 'ANP32E': 3604,\n 'CA14': 1864,\n 'APH1A': 2358,\n 'C1orf54': 1268,\n 'CIART': 2020,\n 'MRPS21': 1640,\n 'PRPF3': 2374,\n 'RPRD2': 5271,\n 'TARS2': 2776,\n 'ECM1': 2164,\n 'MCL1': 4076,\n 'ENSA': 4208,\n 'GOLPH3L': 3188,\n 'ARNT': 4873,\n 'SETDB1': 5032,\n 'CERS2': 2995,\n 'MINDY1': 3574,\n 'PRUNE1': 3116,\n 'C1orf56': 2083,\n 'CDC42SE1': 3506,\n 'MLLT11': 2481,\n 'GABPB2': 8837,\n 'SEMA6C': 5431,\n 'SCNM1': 926,\n 'LYSMD1': 2506,\n 'VPS72': 1558,\n 'PIP5K1A': 4043,\n 'PSMD4': 1542,\n 'ZNF687': 6205,\n 'PI4KB': 4814,\n 'RFX5': 4067,\n 'SELENBP1': 2014,\n 'PSMB4': 916,\n 'POGZ': 6055,\n 'TUFT1': 3109,\n 'SNX27': 7532,\n 'CELF3': 3234,\n 'AL589765.1': 1758,\n 'RIIAD1': 1869,\n 'MRPL9': 1271,\n 'TDRKH': 4005,\n 'THEM4': 5100,\n 'S100A11': 561,\n 'S100A6': 860,\n 'S100A16': 1665,\n 'S100A13': 915,\n 'CHTOP': 4193,\n 'SNAPIN': 1001,\n 'ILF2': 2178,\n 'INTS3': 5689,\n 'SLC27A3': 3349,\n 'GATAD2B': 7892,\n 'SLC39A1': 3386,\n 'CREB3L4': 2044,\n 'JTB': 1471,\n 'RAB13': 1578,\n 'RPS27': 350,\n 'TPM3': 9539,\n 'C1orf43': 2322,\n 'UBAP2L': 4677,\n 'HAX1': 1247,\n 'UBE2Q1': 3237,\n 'ADAR': 7261,\n 'KCNN3': 13597,\n 'PMVK': 1000,\n 'PBXIP1': 3546,\n 'PYGO2': 3327,\n 'SHC1': 4340,\n 'CKS1B': 1483,\n 'FLAD1': 3972,\n 'ADAM15': 3265,\n 'EFNA4': 1255,\n 'AL691442.2': 1040,\n 'EFNA3': 1815,\n 'EFNA1': 1550,\n 'SLC50A1': 1677,\n 'DPM3': 620,\n 'KRTCAP2': 550,\n 'AL713999.1': 751,\n 'TRIM46': 4312,\n 'THBS3': 3314,\n 'MTX1': 1631,\n 'GBA': 2509,\n 'FAM189B': 3191,\n 'SCAMP3': 1613,\n 'CLK2': 2152,\n 'HCN3': 3836,\n 'FDPS': 1680,\n 'RUSC1': 4545,\n 'ASH1L': 11607,\n 'MSTO1': 2793,\n 'YY1AP1': 3765,\n 'DAP3': 2869,\n 'GON4L': 6282,\n 'SYT11': 5180,\n 'RIT1': 3557,\n 'KHDC4': 4511,\n 'ARHGEF2': 5883,\n 'SSR2': 1398,\n 'UBQLN4': 3580,\n 'LAMTOR2': 656,\n 'MEX3A': 6589,\n 'LMNA': 3429,\n 'SEMA4A': 3868,\n 'SLC25A44': 3661,\n 'PMF1-BGLAP': 994,\n 'PMF1': 1192,\n 'BGLAP': 504,\n 'PAQR6': 2529,\n 'SMG5': 4557,\n 'TMEM79': 2274,\n 'GLMP': 1849,\n 'CCT3': 2300,\n 'C1orf61': 766,\n 'IQGAP3': 6011,\n 'NAXE': 1444,\n 'GPATCH4': 1977,\n 'BCAN': 3923,\n 'NES': 5566,\n 'CRABP2': 1080,\n 'ISG20L2': 3665,\n 'RRNAD1': 2508,\n 'MRPL24': 1600,\n 'HDGF': 2718,\n 'PRCC': 2162,\n 'ETV3': 6326,\n 'KIRREL1': 7870,\n 'IFI16': 3865,\n 'AIM2': 1470,\n 'CADM3': 3845,\n 'ACKR1': 1201,\n 'DUSP23': 825,\n 'VSIG8': 1816,\n 'TAGLN2': 2153,\n 'IGSF9': 4059,\n 'IGSF8': 2501,\n 'ATP1A2': 5433,\n 'CASQ1': 1991,\n 'PEA15': 2776,\n 'DCAF8': 5116,\n 'AL139011.2': 912,\n 'PEX19': 3926,\n 'COPA': 5351,\n 'NCSTN': 3012,\n 'F11R': 4828,\n 'TSTD1': 720,\n 'USF1': 1850,\n 'KLHDC9': 1364,\n 'PFDN2': 596,\n 'NIT1': 3161,\n 'DEDD': 2529,\n 'UFC1': 886,\n 'USP21': 2400,\n 'PPOX': 1949,\n 'B4GALT3': 2413,\n 'NDUFS2': 2069,\n 'TOMM40L': 2960,\n 'SDHC': 13564,\n 'DUSP12': 1328,\n 'ATF6': 7468,\n 'OLFML2B': 3413,\n 'NOS1AP': 7823,\n 'AL512785.2': 863,\n 'C1orf226': 4311,\n 'UHMK1': 8581,\n 'UAP1': 2375,\n 'HSD17B7': 1401,\n 'RGS5': 6093,\n 'NUF2': 2384,\n 'PBX1': 8013,\n 'MGST3': 1394,\n 'ALDH9A1': 2694,\n 'TMCO1': 5251,\n 'UCK2': 5657,\n 'POGK': 6575,\n 'TADA1': 2094,\n 'POU2F1': 14210,\n 'CD247': 1158,\n 'CREG1': 3284,\n 'RCSD1': 5580,\n 'MPZL1': 3889,\n 'MPC2': 2582,\n 'DCAF6': 3606,\n 'GPR161': 9092,\n 'TIPRL': 3184,\n 'SFT2D2': 11092,\n 'ATP1B1': 2590,\n 'NME7': 1619,\n 'BLZF1': 3224,\n 'CCDC181': 2627,\n 'SLC19A2': 3610,\n 'C1orf112': 4849,\n 'METTL18': 1573,\n 'SCYL3': 6792,\n 'KIFAP3': 4571,\n 'GORAB': 3131,\n 'PRRX1': 7748,\n 'PRRC2C': 9006,\n 'VAMP4': 4984,\n 'EEF1AKNMT': 3366,\n 'DNM3': 5318,\n 'PIGC': 2628,\n 'SUCO': 6104,\n 'PRDX6': 1688,\n 'ANKRD45': 2658,\n 'KLHL20': 3412,\n 'CENPL': 2468,\n 'DARS2': 4309,\n 'ZBTB37': 3798,\n 'RC3H1': 11452,\n 'RABGAP1L': 13305,\n 'CACYBP': 3468,\n 'MRPS14': 2113,\n 'COP1': 2911,\n 'PAPPA2': 576,\n 'ASTN1': 7671,\n 'BRINP2': 4095,\n 'RASAL2': 5586,\n 'RALGPS2': 6260,\n 'ANGPTL1': 3596,\n 'FAM20B': 6044,\n 'TOR3A': 2285,\n 'ABL2': 12420,\n 'SOAT1': 7003,\n 'TOR1AIP2': 10768,\n 'TOR1AIP1': 9035,\n 'CEP350': 7720,\n 'QSOX1': 9274,\n 'ACBD6': 1668,\n 'XPR1': 4329,\n 'KIAA1614': 9538,\n 'STX6': 5072,\n 'CACNA1E': 8285,\n 'GLUL': 5544,\n 'DHX9': 4256,\n 'LAMC1': 8004,\n 'NMNAT2': 5644,\n 'SMG7': 3228,\n 'ARPC5': 1925,\n 'RGL1': 5303,\n 'COLGALT2': 6712,\n 'TSEN15': 6301,\n 'C1orf21': 10291,\n 'EDEM3': 6932,\n 'RNF2': 3637,\n 'TRMT1L': 4463,\n 'SWT1': 2694,\n 'IVNS1ABP': 4713,\n 'TPR': 7660,\n 'ODR4': 2929,\n 'OCLM': 133,\n 'BRINP3': 3725,\n 'RGS1': 1920,\n 'RGS2': 1346,\n 'UCHL5': 6149,\n 'RO60': 2928,\n 'GLRX2': 1297,\n 'CDC73': 5940,\n 'B3GALT2': 3546,\n 'KCNT2': 4558,\n 'ASPM': 9891,\n 'ZBTB41': 8476,\n 'CRB1': 11444,\n 'DENND1B': 4539,\n 'LHX9': 9668,\n 'NEK7': 4983,\n 'ZNF281': 4893,\n 'KIF14': 3267,\n 'DDX59': 2810,\n 'CAMSAP2': 6179,\n 'KIF21B': 5517,\n 'TMEM9': 2193,\n 'PHLDA3': 2796,\n 'CSRP1': 2206,\n 'NAV1': 7795,\n 'IPO9': 4849,\n 'SHISA4': 1339,\n 'TIMM17A': 1648,\n 'RNPEP': 2588,\n 'ARL8A': 1793,\n 'UBE2T': 876,\n 'PPP1R12B': 12448,\n 'KDM5B': 12855,\n 'KLHL12': 3502,\n 'ADIPOR1': 2254,\n 'CYB5R1': 1762,\n 'TMEM183A': 3029,\n 'ADORA1': 3864,\n 'BTG2': 2727,\n 'ATP2B4': 4430,\n 'ZC3H11A': 9472,\n 'ZBED6': 9910,\n 'SNRPE': 528,\n 'PLEKHA6': 7597,\n 'MDM4': 10384,\n 'LRRN2': 5581,\n 'CNTN2': 8408,\n 'RBBP5': 4402,\n 'DSTYK': 8473,\n 'TMCC2': 4630,\n 'KLHDC8A': 3622,\n 'LEMD1': 1039,\n 'BLACAT1': 6481,\n 'CDK18': 3225,\n 'ELK4': 5749,\n 'NUCKS1': 3151,\n 'RAB29': 3492,\n 'SLC41A1': 5015,\n 'FAM72A': 3618,\n 'SRGAP2': 7144,\n 'EIF2D': 2009,\n 'DYRK3': 8799,\n 'MAPKAPK2': 3589,\n 'PFKFB2': 9582,\n 'YOD1': 6519,\n 'CD55': 4038,\n 'CD46': 3369,\n 'PLXNA2': 11506,\n 'CAMK1G': 3262,\n 'UTP25': 10409,\n 'SYT14': 6821,\n 'SERTAD4': 5220,\n 'RCOR3': 4805,\n 'TRAF5': 4092,\n 'NEK2': 2873,\n 'LPGAT1': 5248,\n 'INTS7': 4428,\n 'DTL': 4602,\n 'PPP2R5A': 3530,\n 'PACC1': 2662,\n 'NENF': 914,\n 'ATF3': 2491,\n 'BATF3': 834,\n 'NSL1': 13203,\n 'TATDN3': 3095,\n 'FLVCR1': 5917,\n 'VASH2': 6110,\n 'ANGEL2': 4692,\n ...}\n\n\n\n\n\n11649"
  },
  {
    "objectID": "analysis/Figure2_isoFraction.html",
    "href": "analysis/Figure2_isoFraction.html",
    "title": "Figure 2 - Isoform Fraction analysis",
    "section": "",
    "text": "suppressPackageStartupMessages({\n  library(tidyverse)\n  library(IsoformSwitchAnalyzeR)\n  library(rtracklayer)\n  library(limma)\n  library(edgeR)\n  library(DESeq2)\n  library(WGCNA)\n})\n\nmyDesign = tribble(\n  ~sampleID, ~condition,~donor,\n  \"VZ_209\", \"VZ\",\"209\",\n  \"VZ_334\", \"VZ\",\"334\",\n  \"VZ_336\", \"VZ\",\"336\",\n  \"CP_209\", \"CP\",\"209\",\n  \"CP_334\", \"CP\",\"334\",\n  \"CP_336\", \"CP\",\"336\",\n) %>%\n  dplyr::mutate(\n    dplyr::across(condition, as_factor)\n  )\n\ncts = read_tsv(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\nRows: 214516 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcr...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncts.collapse = cts %>%\n    mutate(\n      VZ_209 = rowSums(across(matches(\"209_.*_VZ\"))),\n      VZ_334 = rowSums(across(matches(\"334_.*_VZ\"))),\n      VZ_336 = rowSums(across(matches(\"336_.*_VZ\"))),\n      CP_209 = rowSums(across(matches(\"209_.*_CP\"))),\n      CP_334 = rowSums(across(matches(\"334_.*_CP\"))),\n      CP_336 = rowSums(across(matches(\"336_.*_CP\"))),\n      .keep = \"unused\"\n    ) %>%\n    dplyr::select(!c(\"gene_ID\", \"transcript_ID\", \"annot_transcript_name\")) %>%\n    dplyr::rename(\n      gene_id = \"annot_gene_id\",\n      transcript_id = \"annot_transcript_id\",\n      gene_name = \"annot_gene_name\"\n    ) %>%\n    mutate(\n      gene_novelty = as.factor(gene_novelty),\n      transcript_novelty = as.factor(transcript_novelty),\n      ISM_subtype = ISM_subtype %>% na_if(\"None\") %>% as.factor()\n    )\n  cts$counts = rowSums(as.matrix(cts.collapse[,9:14]))\n  \n  cts$novelty2 = as.character(cts$transcript_novelty)\n  cts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Prefix\")] = \"ISM_Prefix\"\n  cts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Suffix\")] = \"ISM_Suffix\"\n  cts$novelty2[cts$novelty2 %in% c(\"Antisense\", \"Genomic\", \"Intergenic\", \"ISM\")] = \"Other\"\n  cts$novelty2 = factor(cts$novelty2,levels=c(\"Known\", \"ISM_Prefix\", \"ISM_Suffix\", \"NIC\", \"NNC\", \"Other\"))\n  \ndatExpr.counts = as.data.frame(cts.collapse[,9:14])\nrownames(datExpr.counts) = cts$annot_transcript_id\n\ntalonSwitchList = readRDS(\"data/working/talonSwitchList_preFilter.rds\")\ntalon_filtered_isoforms = talonSwitchList$isoformFeatures$isoform_id\nlocalAnnoation <- unique(as.data.frame(talonSwitchList$exons@elementMetadata[,c(\"gene_id\", \"isoform_id\")]))"
  },
  {
    "objectID": "analysis/Figure2_isoFraction.html#get-average-gene-expression-and-isoform-number",
    "href": "analysis/Figure2_isoFraction.html#get-average-gene-expression-and-isoform-number",
    "title": "Figure 2 - Isoform Fraction analysis",
    "section": "Get average gene expression and isoform number",
    "text": "Get average gene expression and isoform number\n\ngenes = cts %>% dplyr::select(annot_gene_id, annot_transcript_id,annot_gene_name) %>% group_by(annot_gene_id) %>% summarise(numIso=n_distinct(annot_transcript_id))\n\ncountMat = as.matrix(cts.collapse[,9:14])\ncs = colSums(countMat) / 1000000 ## TPM normalize\ncountMat.tpm = t(apply(countMat, 1, function(x) { x / cs}))\nisoTPM = data.frame(annot_gene_id = cts$annot_gene_id, annot_transcript_id = cts$annot_transcript_id, isoTPM=rowMeans(countMat.tpm))\n\ngenes <- genes %>% left_join(isoTPM %>% group_by(annot_gene_id) %>% summarise(geneTPM = log2(.1 + mean(isoTPM))))\n\nJoining, by = \"annot_gene_id\""
  },
  {
    "objectID": "analysis/Figure2_isoFraction.html#treeplot",
    "href": "analysis/Figure2_isoFraction.html#treeplot",
    "title": "Figure 2 - Isoform Fraction analysis",
    "section": "TreePlot",
    "text": "TreePlot\n\nlibrary(treemapify)\n\ndf_treemap = cts  %>% dplyr::select(Gene=annot_gene_name, Isoform=annot_transcript_name, novelty2, counts) %>% filter(Gene%in% c(\"TBR1\",\"SATB2\", \"SOX5\", \"SOX2\", \"EOMES\", \"DLX1\",\"POU3F2\", \"HOPX\", \"HES1\", \"RBFOX2\"))\n\n\nggplot(df_treemap, aes(area=counts, fill=Gene, label=Isoform, alpha=(novelty2==\"Known\"), subgroup=Gene)) + \n  geom_treemap() +geom_treemap_subgroup_border(colour = \"black\", size = 5, alpha=1) +\n  geom_treemap_subgroup_text(place = \"centre\", grow = TRUE,\n                             alpha = 0.95, colour = \"black\",\n                             fontface = \"italic\") +\n  geom_treemap_text(colour = \"white\", place = \"top\", alpha=.5,\n                    size = 15, grow = F)+   theme(legend.position = \"none\")\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\n\n\ndf_treemap = cts  %>% dplyr::select(Gene=annot_gene_name, Isoform=annot_transcript_name, novelty2, counts) %>% filter(Gene%in% c(\"SCN2A\", \"CHD8\", \"SYNGAP1\", \"ADNP\", \"PTEN\", \"FOXP1\", \"CHD2\", \"POGZ\", \"GRIN2B\", \"KTM5B\", \"ARID1B\", \"ASH1L\"))\n\n\nFig5_ASDtreeplot = ggplot(df_treemap, aes(area=counts, fill=Gene, label=Isoform, alpha=(novelty2==\"Known\"), subgroup=Gene)) + \n  geom_treemap() +geom_treemap_subgroup_border(colour = \"black\", size = 2, alpha=1) +\n  geom_treemap_subgroup_text(place = \"centre\", grow = F,\n                             alpha = 0.95, colour = \"black\",\n                             fontface = \"italic\") +\n  geom_treemap_text(colour = \"grey\", place = \"top\", alpha=.5,\n                    size = 15, grow = F)+   theme(legend.position = \"none\") + \n  scale_fill_brewer(palette = 'Paired')\n\nggsave(Fig5_ASDtreeplot, file=\"output/figures/Fig5/Fig5_ASDtreeplot.pdf\",width=5,height=3)\n\nWarning: Using alpha for a discrete variable is not advised."
  },
  {
    "objectID": "analysis/Figure2_novel_exons.html",
    "href": "analysis/Figure2_novel_exons.html",
    "title": "Figure 2 - Novel Exons",
    "section": "",
    "text": "options(stringsAsFactors = F)\noptions(ucscChromosomeNames = F)\n\nsuppressMessages({\n  library(data.table)\n  library(tidyverse)\n  library(rtracklayer)\n  library(GenomicFeatures)\n  library(GenomicRanges)\n  library(plyranges)\n#  devtools::install_github(\"mskilab/gUtils\")\n  library(gUtils)\n\n})\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]\n\n # Gencode v33 Annotations\n  gencode=\"ref/gencode.v33lift37.annotation.gtf.gz\"\n  gr.gencode = rtracklayer::import(gencode)\n  #txdb.gencode = makeTxDbFromGRanges(gr.gencode)\n\n  # Isoseq Annotations\n  isoseq=\"data/cp_vz_0.75_min_7_recovery_talon.gtf.gz\"\n  gr.isoseq = rtracklayer::import(isoseq)\n  #txdb.isoseq = makeTxDbFromGRanges(gr.isoseq)"
  },
  {
    "objectID": "analysis/Figure2_novel_exons.html#ashoks-code-using-bash-and-bedtools",
    "href": "analysis/Figure2_novel_exons.html#ashoks-code-using-bash-and-bedtools",
    "title": "Figure 2 - Novel Exons",
    "section": "Ashok’s code using bash and bedtools",
    "text": "Ashok’s code using bash and bedtools\n\n\ngzcat ref/gencode.v33lift37.annotation.gtf.gz | awk '{if($3==\"exon\") { for(i=1;i<=NF;i++)if($i~/(exon_id)/){ print $1\"\\t\"$4\"\\t\"$5\"\\t\"$7\"\\t\"$16\"\\t\"$i\"\\t\"$(i+1)}}}' |  sed 's/[\";]//g' | awk '{print $1\"\\t\"$2\"\\t\"$3\"\\t\"$5\"_\"$6\"_\"$7\"\\t\"\"1000\"\"\\t\"$4}' | awk '!seen[$0]++' > data/working/novel_exons/All_Gencode_Exon.bed\n\ngzcat data/cp_vz_0.75_min_7_recovery_talon.gtf.gz | awk '{if($3==\"exon\") { for(i=1;i<=NF;i++)if($i~/(exon_status|talon_exon|gene_name)/){ printf \"%s%s\",(!c++? \"\":FS),$i\"\\t\"$(i+ 1)  }; print \"\\t\"$1\"\\t\"$4\"\\t\"$5\"\\t\"$7; c=0 }\n}' | sed 's/[\";]//g' | awk '{if($6==\"NOVEL\") print $7\"\\t\"$8\"\\t\"$9\"\\t\"$2\"_\"$3\"_\"$4\"\\t\"\"1000\"\"\\t\"$NF}' | awk '!seen[$0]++' > data/working/novel_exons/All_Novel_Exon.bed\n\nbedtools intersect -a data/working/novel_exons/All_Novel_Exon.bed -b data/working/novel_exons/All_Gencode_Exon.bed -v > data/working/novel_exons/No_genecode_ovelap_novel_exon.bed\n\nsort -k 1,1 -k2,2n  data/working/novel_exons/All_Novel_Exon.bed > data/working/novel_exons/All_Novel_Exon_sorted.bed\nsort -k 1,1 -k2,2n  data/working/novel_exons/All_Gencode_Exon.bed > data/working/novel_exons/All_Gencode_Exon_sorted.bed\n\n\nbedtools multiinter -header -names Novel Gencode -i data/working/novel_exons/All_Novel_Exon_sorted.bed data/working/novel_exons/All_Gencode_Exon_sorted.bed > data/working/novel_exons/bulk_NewCoding.txt\n\n***** WARNING: File data/working/novel_exons/All_Novel_Exon.bed has inconsistent naming convention for record:\nGL000204.1  56744   57007   TALONG000062493_talon_exon_1018404  1000    -\n\n***** WARNING: File data/working/novel_exons/All_Novel_Exon.bed has inconsistent naming convention for record:\nGL000204.1  56744   57007   TALONG000062493_talon_exon_1018404  1000    -\n\n\n#Mike’s code using R\n\n#How many distinct GENCODE exons?\n  exons.gencode_unique = gr.gencode %>% as_tibble() %>% filter(type=='exon') %>%\n    dplyr::select(seqnames, start, end, exon_id)\n  exons.gencode_unique$seqnames=as.character(exons.gencode_unique$seqnames)\n  length(unique(exons.gencode_unique$exon_id)) #748355 unique exon IDs in gencode\n\n[1] 748355\n\n  exons.gencode_unique$coord = paste0(exons.gencode_unique$seqnames, \":\", exons.gencode_unique$start, \"-\", exons.gencode_unique$end)\n  length(unique(exons.gencode_unique$coord)) #634758 unique chr-start-stop in gencode\n\n[1] 634758\n\n  exons.gencode = unique(gr.gencode[gr.gencode$type=='exon',])\n  length(exons.gencode)\n\n[1] 634771\n\n  ashok.gencode= read.table(\"data/working/novel_exons/All_Gencode_Exon_sorted.bed\")\n  dim(ashok.gencode) # 750284 in Ashok's bed file\n\n[1] 750284      6\n\n  # How many distinct IsoSeq exons? ~83k\n    exons.isoseq_unique = gr.isoseq %>% as_tibble() %>% filter(type=='exon',exon_status==\"NOVEL\") %>% dplyr::select(seqnames, start, end, exon_id) %>% mutate(coord=paste0(as.character(seqnames), \":\", start, \"-\", end))\n  length(unique(exons.isoseq_unique$exon_id)) #334861 by exon_ID in Talon\n\n[1] 82882\n\n  length(unique(exons.isoseq_unique$coord)) #334774 by coordinates\n\n[1] 82850\n\n   ashok.isoseq = read.table(\"data/working/novel_exons/All_Novel_Exon.bed\")\n  dim(ashok.isoseq) #83153 in Ashok's bed file\n\n[1] 83153     6\n\n  exons.isoseq = unique(gr.isoseq[gr.isoseq$type==\"exon\",])\n  \n  \n  # Find compltely non-overlapping exons\n  ## Used two methods, both give 7039 unique exons in TALON not overlapping in Gencode -- from 3549 genes\n  novel <- exons.isoseq %>% filter_by_non_overlaps(exons.gencode, minoverlap = 2L) %>% filter(grepl(\"chr\", seqnames))\n  \n  length(novel) #7039 novel exons\n\n[1] 7039\n\n  length(unique(novel$gene_id)) #3551 genes with novel exons\n\n[1] 3551\n\n  sum(width(novel %>% reduce_ranges())) #3849462 bp --> 3.85MB of novel exons\n\n[1] 3849462\n\n  novel2 = subsetByOverlaps(exons.isoseq, exons.gencode,invert = T,type='any',ignore.strand=T, minoverlap = 2L)\n  novel2 = novel2[grepl('chr',seqnames(novel2))]\n  length(unique(novel2$gene_name))\n\n[1] 3549\n\n  these_novel = novel2 %>% as_tibble()\n  \n  write.csv(these_novel, file=\"data/working/novel_exons/mike_novel.csv\")\n \n  ## Write GTF for novel exons, and control (strand flipped exons)\n   export(novel2,\"data/working/novel_exons/novel_exons_mike.gff\",format = \"gff\")\n    export(gr.flipstrand(novel2),\"data/working/novel_exons/novel_exons_strandflip_mike.gff\",format = \"gff\")\n   \n  \n   \n  ashok.novel =  read.table(\"data/working/novel_exons/No_genecode_ovelap_novel_exon.bed\")\n  ashok.novel = ashok.novel[grepl(\"chr\",ashok.novel$V1),]\n  dim(ashok.novel) # Ashok gets 7041 isoforms in 3542 genes\n\n[1] 7041    6\n\n  ashok.novel.genes = unique(unlist(lapply(strsplit(ashok.novel$V4, \"_\"),'[',1)))\n  \n  length(intersect(ashok.novel.genes, novel2$gene_name))\n\n[1] 3539\n\n  ashok.novel.genes[!ashok.novel.genes %in% novel2$gene_name]\n\n[1] \"SLC35A1\"    \"PPP1R32\"    \"AC007262.2\"\n\n  novel2$gene_name[!novel2$gene_name %in% ashok.novel.genes]\n\n [1] \"PINK1\"           \"ERI3\"            \"RBM5\"            \"B3GALNT1\"       \n [5] \"PDK4\"            \"SMARCD3\"         \"RBM17\"           \"ABLIM1\"         \n [9] \"DDB1\"            \"TALONG000089386\"\n\n\n\nthese_novel %>% head()\n\n# A tibble: 6 × 54\n  seqnames  start    end width strand source type  score phase gene_id   gene_…¹\n  <fct>     <int>  <int> <int> <fct>  <fct>  <fct> <dbl> <int> <chr>     <chr>  \n1 chr1      18913  19139   227 -      TALON  exon     NA    NA ENSG0000… WASH7P \n2 chr1      18913  20286  1374 -      TALON  exon     NA    NA ENSG0000… WASH7P \n3 chr1      18913  21119  2207 -      TALON  exon     NA    NA ENSG0000… WASH7P \n4 chr1      18913  20960  2048 -      TALON  exon     NA    NA ENSG0000… WASH7P \n5 chr1      18913  19416   504 -      TALON  exon     NA    NA ENSG0000… WASH7P \n6 chr1     840675 841059   385 +      TALON  exon     NA    NA ENSG0000… AL6456…\n# … with 43 more variables: gene_status <chr>, gene_type <chr>,\n#   talon_gene <chr>, havana_gene <chr>, hgnc_id <chr>, level <chr>,\n#   remap_num_mappings <chr>, remap_status <chr>, remap_target_status <chr>,\n#   transcript_id <chr>, transcript_status <chr>, transcript_name <chr>,\n#   talon_transcript <chr>, NNC_transcript <chr>, exon_number <chr>,\n#   exon_id <chr>, talon_exon <chr>, exon_status <chr>, ont <chr>,\n#   remap_original_location <chr>, source.1 <chr>, tag <chr>, …\n\nthese_novel$protein_coding = these_novel$gene_type==\"protein_coding\"\nthese_novel$protein_coding[is.na(these_novel$protein_coding)] = F\nthese_novel$protein_coding = factor(these_novel$protein_coding, levels=c(TRUE,FALSE))\nFig2_exonWidth = ggplot(these_novel, aes(x=width,fill=protein_coding)) + geom_histogram(alpha=.5) + scale_x_log10(limits=c(10,10000))  + theme_bw() +\n  labs(x=\"Novel exon width (bp)\")\nFig2_exonWidth\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 62 rows containing non-finite values (stat_bin).\n\n\nWarning: Removed 4 rows containing missing values (geom_bar).\n\n\n\n\nggsave(Fig2_exonWidth, file=\"output/figures/Fig2/Fig2_exonWidth.pdf\",width=4,height=3)\n\n`stat_bin()` using `bins = 30`. Pick better value with `binwidth`.\n\n\nWarning: Removed 62 rows containing non-finite values (stat_bin).\nRemoved 4 rows containing missing values (geom_bar)."
  },
  {
    "objectID": "analysis/Figure2_PlotGene.html",
    "href": "analysis/Figure2_PlotGene.html",
    "title": "Figure 2 - Plot One Gene",
    "section": "",
    "text": "options(stringsAsFactors = F)\noptions(ucscChromosomeNames = F)\n\nsuppressMessages({\n  library(data.table)\n  library(tidyverse)\n  library(IsoformSwitchAnalyzeR)\n  library(rtracklayer)\n  library(ggrepel)\n  library(scales)\n  library(GenomicFeatures)\n  library(GenomicRanges)\n  library(GenomicInteractions)\n  library(Gviz)\n\n})\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]"
  },
  {
    "objectID": "analysis/Figure2_PlotGene.html#plot-one-gene",
    "href": "analysis/Figure2_PlotGene.html#plot-one-gene",
    "title": "Figure 2 - Plot One Gene",
    "section": "Plot One Gene",
    "text": "Plot One Gene\n\nisoseq.gene.names = rtracklayer::import(\"data/cp_vz_0.75_min_7_recovery_talon.gtf.gz\") %>%\n  as_tibble() %>%\n  dplyr::filter(type == \"gene\") %>%\n  dplyr::select(gene_id, gene_name)\n\ngr.isoseq = gr.isoseq %>% left_join(isoseq.gene.names)\n\nJoining, by = \"gene_id\"\n\nannot.gene = as_tibble(gr.gencode) %>% filter(type==\"gene\")\n  \ncurrent_gene=\"UBE3A\"\ngenes_to_plot = data.frame(V1 = current_gene, V2 = unique(na.omit(gr.gencode$transcript_id[which(gr.gencode$gene_name==current_gene)])), V3=\"Gencode\")\n\ngenes_to_plot = rbind(genes_to_plot, data.frame(V1 = current_gene, V2 = unique(na.omit(gr.isoseq$transcript_id[which(gr.isoseq$gene_name==current_gene)])), V3=\"Isoseq\"))\ngenes_to_plot = genes_to_plot[!apply(is.na(genes_to_plot), 1,any),]\n\n\n\n gencode_only=base::setdiff(with(genes_to_plot,V2[V1 == current_gene & V3==\"Gencode\"]) , with(genes_to_plot,V2[V1 == current_gene & V3==\"Isoseq\"]))\n  \n shared=base::intersect(with(genes_to_plot,V2[V1 == current_gene & V3==\"Gencode\"]) , with(genes_to_plot,V2[V1 == current_gene & V3==\"Isoseq\"]))\n  \n novel=base::setdiff(with(genes_to_plot,V2[V1 == current_gene & V3==\"Isoseq\"]) , with(genes_to_plot,V2[V1 == current_gene & V3==\"Gencode\"]))\n  novel=novel[grepl(\"^TALON\",novel)]\n\n\n  # gencode tracks\n  gencode_only_transcript_onegene=gencode_transcript[gencode_only,]\n  gencode_only_transcript_onegene=unlist(gencode_only_transcript_onegene)\n  elementMetadata(gencode_only_transcript_onegene)$transcript <- names(gencode_only_transcript_onegene)\n  gencode_only_track=GeneRegionTrack(gencode_only_transcript_onegene,group = \"transcript\",name = \"Gencode undetected\")\n\n  shared_transcript=gencode_transcript[shared,]\n  shared_transcript=unlist(shared_transcript)\n  elementMetadata(shared_transcript)$transcript=names(shared_transcript)\n  shared_track=GeneRegionTrack(shared_transcript,group = \"transcript\",name = \"Gencode detected\")\n  displayPars(gencode_only_track)=list(stacking=\"squish\",\n                                       background.panel = \"#ffffb2\",\n                                       fill=\"#006d2c\",\n                                       col=\"#006d2c\",\n                                       lwd=0.3,\n                                       col.line=\"black\",\n                                       fontcolor.title=\"black\",\n                                       background.title=\"#bd0026\")\n  displayPars(shared_track)=list(stacking=\"squish\",\n                                 background.panel = \"#f1eef6\",\n                                 fill=\"#d62424\",\n                                 col=\"#d62424\",\n                                 lwd=0.3,\n                                 col.line=\"black\",\n                                 fontcolor.title=\"black\",\n                                 background.title=\"#045a8d\")\n  # isoseq tracks\n  isoseq_transcript_onegene=isoseq_transcript[novel,]\n  isoseq_transcript_onegene=unlist(isoseq_transcript_onegene)\n  elementMetadata(isoseq_transcript_onegene)$transcript=names(isoseq_transcript_onegene)\n  seqlevels(isoseq_transcript_onegene) = seqlevels(isoseq_transcript_onegene)[1:25]\n  isoseq_track=GeneRegionTrack(isoseq_transcript_onegene,group = \"transcript\",name = \"Novel\", u=FALSE)\n  displayPars(isoseq_track)=list(stacking=\"squish\",\n                                 background.panel = \"#bcbddc\",\n                                 fill=\"#171cc7\",\n                                 col=\"#171cc7\",\n                                 lwd=0.3,\n                                 col.line=\"black\",\n                                 showId = FALSE,\n                                 transcriptAnnotation = \"transcript\",\n                                 fontcolor.title=\"black\",\n                                 background.title=\"#7a0177\")\n\n\n  # universal tracks\n  axisTrack <- GenomeAxisTrack()\n  ideoTrack <- IdeogramTrack(genome = \"hg19\", chromosome = unique(seqnames(gencode_only_track)))\n\n  leftmost=min(c(gencode_only_transcript_onegene@ranges@start,shared_transcript@ranges@start,isoseq_transcript_onegene@ranges@start))\n  rightmost=max(c(gencode_only_transcript_onegene@ranges@start,shared_transcript@ranges@start,isoseq_transcript_onegene@ranges@start))\n  extra=(rightmost - leftmost)*0.05\n  plotTracks(list(ideoTrack,axisTrack,jc_track,cage,gencode_only_track,shared_track,isoseq_track),\n             chromosome = unique(seqnames(isoseq_track)),\n             from = leftmost - extra,\n             to = rightmost + extra,\n             sizes = c(1.5,1.5,1.5,1.5,5, max(1.5,0.35*length(shared)),max(2,0.3*length(novel))))\n\n\n\n\n\n#devtools::install_github(\"dzhang32/ggtranscript\")\nlibrary(ggtranscript)\n\nthis_gene=\"UBE3A\"\n\nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\" & (counts > 10 | novelty2==\"Known\"))\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\" & (counts > 10 | novelty2==\"Known\"))\n\ng1<-these_exons %>% \n    ggplot(aes(\n        xstart = start,\n        xend = end,\n        y = reorder(annot_transcript_name, counts)\n    )) +\n    geom_range(\n        aes(fill = log2(1+cpm), group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = log2(1+cpm), group=novelty2)) + \n    geom_intron(\n        data = to_intron(these_exons, \"annot_transcript_name\"),\n        aes(strand = strand),arrow.min.intron.length = 500,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) + facet_grid(novelty2~.,scale='free',space='free') + theme_bw() + labs(y=\"\") + ggtitle(this_gene,subtitle = unique(these_exons$seqnames)) + theme(plot.title = element_text(hjust=.5), plot.subtitle = element_text(hjust=.5))\ng1 \n\n\n\nggsave(g1, file=paste0(\"output/figures/switch_plots/ggtranscript_\", this_gene,\".pdf\"),height=10, width=12)\n\n# \n# these_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & (type == \"exon\" | type==\"CDS\")& (counts > 100 | novelty2==\"Known\"))\n# \n# this_gene_rescaled <- shorten_gaps(\n#   these_exons, \n#   to_intron(these_exons %>% filter(type==\"exon\"), \"annot_transcript_name\"), \n#   group_var = \"annot_transcript_name\"\n#   )\n# \n# this_cds_rescaled <- shorten_gaps(\n#   this_cds, \n#   to_intron(this_cds, \"annot_transcript_name\"), \n#   group_var = \"annot_transcript_name\"\n#   )\n# \n# this_gene_rescaled %>%\n#     dplyr::filter(type == \"exon\") %>%\n#     ggplot(aes(\n#         xstart = start,\n#         xend = end,\n#         y = annot_transcript_name\n#     )) +\n#     geom_range(\n#       aes(fill = log(1+cpm)), height=.25) + \n#     geom_range(data=this_gene_rescaled %>% filter(type==\"CDS\"),aes(fill = log(1+cpm)))+\n#     geom_intron(\n#         data = this_gene_rescaled %>% dplyr::filter(type == \"intron\"), \n#         arrow.min.intron.length = 200, aes(strand=strand)\n#     )+ facet_grid(novelty2~.,scale='free',space='free') + theme_bw() + labs(y=\"\")"
  },
  {
    "objectID": "analysis/Figure2_plotNovelGenes.html",
    "href": "analysis/Figure2_plotNovelGenes.html",
    "title": "Figure 2 - Plot Novel Genes",
    "section": "",
    "text": "options(stringsAsFactors = F)\noptions(ucscChromosomeNames = F)\n\nsuppressMessages({\n  library(data.table)\n  library(tidyverse)\n  library(IsoformSwitchAnalyzeR)\n  library(rtracklayer)\n  library(ggrepel)\n  library(scales)\n  library(GenomicFeatures)\n  library(GenomicRanges)\n  library(GenomicInteractions)\n  library(Gviz)\n  library(ggtranscript)\n\n\n})\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]\n\n\nif(!file.exists('data/working/locusPlot_workingData.RData')) {\n  \n  # CAGE tracks\n  cage=AnnotationTrack(range = \"ref/CAGE/hg19.cage_peak_phase1and2combined_coord.bed\",\n                       background.panel = \"#99d8c9\",\n                       fill=\"#fc9272\",\n                       name = \"CAGE peaks\",\n                       col.line=\"#99d8c9\",\n                       background.title=\"#2ca25f\",\n                       fontcolor.title=\"black\")\n  \n  # Intropolis junctions\n  jc=read.delim(\"ref/intropolis/intropolis_v1_hg19_2samples_10counts_starSJout.tsv.gz\",header = F)\n  jc= jc[jc$V7>100,]\n  anchor.one = GRanges(jc$V1, IRanges(jc$V2 + 1, width=5))\n  anchor.two = GRanges(jc$V1, IRanges(jc$V3, width=5))\n  interaction_counts = log2(jc$V7)\n  \n  jc_object=GenomicInteractions(anchor.one,anchor.two,interaction_counts)\n  jc_track=InteractionTrack(jc_object,name = \"Intropolis junctions\")\n  displayPars(jc_track)=list(background.panel = \"#fee0d2\",\n                             col.interactions =\"#6a51a3\", #\"#43a2ca\",\n                             col.anchors.line = \"gray\",\n                             col.anchors.line = \"gray\",\n                             lwd=0.6,\n                             fontcolor.title=\"black\",\n                             background.title=\"#de2d26\",\n                             plot.outside = FALSE)\n  \n  # Gencode v33 Annotations\n  gencode=\"ref/gencode.v33lift37.annotation.gtf.gz\"\n  gencode_txdb=makeTxDbFromGFF(gencode, format=\"gtf\")\n  gencode_transcript=exonsBy(gencode_txdb,by=\"tx\",use.names=T)\n  gr.gencode = rtracklayer::import(gencode) %>% as_tibble()\n  \n  # Isoseq Annotations\n  isoseq=\"data/sqanti/cp_vz_0.75_min_7_recovery_talon_corrected.gtf.cds.gff.gz\"\n  isoseq_txdb=makeTxDbFromGFF(isoseq, format=\"gtf\")\n  isoseq_transcript=exonsBy(isoseq_txdb,by=\"tx\",use.names=T)\n  gr.isoseq = rtracklayer::import(isoseq) %>% as_tibble()\n  \n  cts = read_table(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\ncts$novelty2 = as.character(cts$transcript_novelty)\ncts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Prefix\")] = \"ISM_Prefix\"\ncts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Suffix\")] = \"ISM_Suffix\"\ncts$novelty2[cts$novelty2 %in% c(\"Antisense\", \"Genomic\", \"Intergenic\", \"ISM\")] = \"Other\"\ncts$novelty2 = factor(cts$novelty2,levels=c(\"Known\", \"ISM_Prefix\", \"ISM_Suffix\", \"NIC\", \"NNC\", \"Other\"))\ncts$counts = rowSums(cts[,c(12:35)])\ncts$cpm = cts$counts / (sum(cts$counts)/1000000)\n\ngr.isoseq.old = gr.isoseq\n\ngr.isoseq <- gr.isoseq.old %>% left_join(cts, by=c(\"transcript_id\" = \"annot_transcript_id\"))\n\n  save.image('data/working/locusPlot_workingData.RData')\n\n} else {\n  load('data/working/locusPlot_workingData.RData')\n}"
  },
  {
    "objectID": "analysis/Figure2_plotNovelGenes.html#find-novel-intergenic-genes",
    "href": "analysis/Figure2_plotNovelGenes.html#find-novel-intergenic-genes",
    "title": "Figure 2 - Plot Novel Genes",
    "section": "Find Novel Intergenic Genes",
    "text": "Find Novel Intergenic Genes\n\ngr.isoseq %>% filter(type == \"transcript\") %>% dplyr::select(gene_novelty) %>% pull() %>% table()\n\nintergenic <-  gr.isoseq %>% filter(type == \"transcript\",gene_novelty==\"Intergenic\", transcript_novelty %in% c(\"Genomic\", \"Intergenic\"), !grepl(\"^GL\", seqnames)) %>% arrange(-counts)\n\n#table(intergenic$transcript_novelty)\n#intergenic %>% dplyr::select(seqnames, start, end, annot_gene_id, transcript_id, gene_id, gene_name, counts, gene_novelty, novelty2) %>% arrange(-counts)\n\n\n\ng = list()\nfor(this_gene in unique(intergenic$annot_gene_name)) {\n\n\nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\")\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\")\nthis.start = min(c(these_exons$start, these_exons$end)-5e4)\nthis.end = max(c(these_exons$start, these_exons$end)+5e4)\n\ngencode_exons =gr.gencode %>% dplyr::filter(type==\"exon\", seqnames==as.character(these_exons$seqnames[1]),start > this.start, end < this.end)\n\ng[[length(g) + 1]] = ggplot(these_exons, aes(xstart = start,xend = end, y = annot_transcript_name)) +\n  geom_range(aes(fill = counts, group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = counts, group=novelty2)) + \n    geom_intron(\n        data = to_intron(these_exons, \"annot_transcript_name\"),\n        aes(strand = strand),arrow.min.intron.length = 5000,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) +\n  xlim(this.start, this.end) + \n  geom_range(data=gencode_exons, fill='darkgrey', aes(xstart = start,xend = end, y=gene_name)) +\n  geom_intron(\n        data = to_intron(gencode_exons, \"transcript_name\"),\n        aes(strand = strand,y=gene_name),arrow.min.intron.length = 5000,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) +\n  \n  facet_grid(source~.,scales = 'free', space = 'free') + ggtitle(this_gene, subtitle = paste0(these_exons$seqnames[1], \":\", this.start+5e4,\"-\", this.end-5e4)) + theme(legend.position = 'none') + labs(x=these_exons$seqnames[1], y=\"\")  +theme_bw()\n}\n\npdf(file=\"output/figures/supplement/Fig2_supplement_novelGenes.pdf\",width=10,height=8)\ng\ndev.off()"
  },
  {
    "objectID": "analysis/Figure2_plotNovelGenes.html#plot-antisense-genes",
    "href": "analysis/Figure2_plotNovelGenes.html#plot-antisense-genes",
    "title": "Figure 2 - Plot Novel Genes",
    "section": "Plot antisense genes",
    "text": "Plot antisense genes\n\nantisense = gr.isoseq %>% filter(type == \"transcript\",gene_novelty==\"Antisense\", !grepl(\"^GL\", seqnames)) %>% arrange(-counts)\n\n\ng.antisense = list()\nfor(this_gene in unique(antisense$annot_gene_name)) {\nprint(length(g.antisense))\n\nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\")\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\")\nthis.start = min(c(these_exons$start, these_exons$end)-5e4)\nthis.end = max(c(these_exons$start, these_exons$end)+5e4)\n\ngencode_exons =gr.gencode %>% dplyr::filter(type==\"exon\", seqnames==as.character(these_exons$seqnames[1]),start > this.start, end < this.end)\n\ng.antisense[[length(g.antisense) + 1]] = ggplot(these_exons, aes(xstart = start,xend = end, y = annot_transcript_name)) +\n  geom_range(aes(fill = counts, group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = counts, group=novelty2)) + \n    geom_intron(\n        data = to_intron(these_exons, \"annot_transcript_name\"),\n        aes(strand = strand),arrow.min.intron.length = 5000,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) +\n  xlim(this.start, this.end) + \n  geom_range(data=gencode_exons, fill='darkgrey', aes(xstart = start,xend = end, y=gene_name)) +\n  geom_intron(\n        data = to_intron(gencode_exons, \"transcript_name\"),\n        aes(strand = strand,y=gene_name),arrow.min.intron.length = 5000,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) +\n  \n  facet_grid(source~.,scales = 'free', space = 'free') + ggtitle(this_gene, subtitle = paste0(these_exons$seqnames[1], \":\", this.start+5e4,\"-\", this.end-5e4)) + theme(legend.position = 'none') + labs(x=these_exons$seqnames[1], y=\"\")  +theme_bw()\n}\n\npdf(file=\"output/figures/supplement/Fig2_supplement_antisenseGenes.pdf\",width=10,height=8)\ng.antisense\ndev.off()"
  },
  {
    "objectID": "analysis/Figure2_plotNovelGenes.html#novel-gene-talong000088362",
    "href": "analysis/Figure2_plotNovelGenes.html#novel-gene-talong000088362",
    "title": "Figure 2 - Plot Novel Genes",
    "section": "Novel gene: TALONG000088362",
    "text": "Novel gene: TALONG000088362\n\nthis_gene = \"TALONG000088362\"   \nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\")\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\")\nthis.start = min(c(these_exons$start, these_exons$end)-5e4)\nthis.end = max(c(these_exons$start, these_exons$end)+5e4)\n\ngencode_exons =gr.gencode %>% dplyr::filter(type==\"exon\", seqnames==as.character(these_exons$seqnames[1]),start > this.start, end < this.end)\n\nFigS3F <- ggplot(these_exons, aes(xstart = start,xend = end, y = annot_transcript_name)) +\n  geom_range(aes(fill = log2(1+cpm), group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = log2(1+cpm), group=novelty2)) + \n    geom_intron(\n        data = to_intron(these_exons, \"annot_transcript_name\"),\n        aes(strand = strand),arrow.min.intron.length = 5000,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) +\n  xlim(this.start, this.end) + \n  geom_range(data=gencode_exons, fill='darkgrey', aes(xstart = start,xend = end, y=gene_name)) +\n  geom_intron(\n        data = to_intron(gencode_exons, \"transcript_name\"),\n        aes(strand = strand,y=gene_name),arrow.min.intron.length = 5000,\n        arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n        color='grey60',\n    ) +\n  \n  facet_grid(source~.,scales = 'free', space = 'free') + ggtitle(this_gene, subtitle = paste0(these_exons$seqnames[1], \":\", this.start+5e4,\"-\", this.end-5e4)) + theme(legend.position = 'none') + labs(x=these_exons$seqnames[1], y=\"\")  +theme_bw() + scale_fill_gradient(low = 'darkgrey', high='red', limits=c(0,12)) + theme(legend.position = 'none')\nggsave(FigS3F, file='output/figures/supplement/FigS3F.pdf', height=4, width=6)"
  },
  {
    "objectID": "analysis/Figure2_NF1Locus.html",
    "href": "analysis/Figure2_NF1Locus.html",
    "title": "Figure 2 - NF1 Locus",
    "section": "",
    "text": "Required libraries\n\nlibrary(Gviz)\nlibrary(GenomicFeatures)\nlibrary(GenomicRanges)\nlibrary(GenomicInteractions)\nlibrary(data.table)\n\noptions\n\noptions(stringsAsFactors = F)\noptions(Gviz.scheme = \"myScheme\")\noptions(ucscChromosomeNames = F)\n\nglobal themes\n\nscheme <- getScheme()\nscheme$GeneRegionTrack$col <- NULL\naddScheme(scheme, \"myScheme\")\n\nprepare gencode\n\ngencode=\"ref/gencode.v33lift37.annotation.gtf.gz\"\ngencode_txdb=makeTxDbFromGFF(gencode, format=\"gtf\")\n\nImport genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... \n\n\nWarning in .get_cds_IDX(mcols0$type, mcols0$phase): The \"phase\" metadata column contains non-NA values for features of type\n  stop_codon. This information was ignored.\n\n\nWarning in .reject_transcripts(bad_tx, because): The following transcripts were dropped because they have incompatible\n  CDS and stop codons: ENST00000422803.2_2, ENST00000618549.1_2,\n  ENST00000619291.4_2, ENST00000621077.1_2, ENST00000621229.1_2,\n  ENST00000631326.2_2\n\n\nOK\n\ngencode_transcript=exonsBy(gencode_txdb,by=\"tx\",use.names=T)\n\nprepare fetalIsoSeq\n\nisoseq=\"data/cp_vz_0.75_min_7_recovery_talon.gtf.gz\"\nisoseq_txdb=makeTxDbFromGFF(isoseq, format=\"gtf\")\n\nImport genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... OK\n\nisoseq_transcript=exonsBy(isoseq_txdb,by=\"tx\",use.names=T)\n\npeak files\n\ncagefile=fread(\"data/all_cage.txt.gz\",header = F)\npolyafile=fread(\"data/polya.txt.gz\",header = F)\natacfile=fread(\"data/all_atac.txt.gz\",header = F)\n\ngenes of interest\n\ngenes_to_plot=read.delim(\"data/plotgene_transcripts_codingOnly_finalFrezee_reannotated.txt\",header = F)\n\ncurrent_gene=\"NF1\"\nchr=unique(genes_to_plot$V1[genes_to_plot$V2 == current_gene])\nstrd=unique(genes_to_plot$V4[genes_to_plot$V2 == current_gene])\n\nGRange object for transcripts\n\noptions(ucscChromosomeNames=FALSE)\n\ngencode_only=base::setdiff(with(genes_to_plot,V3[V2 == current_gene & V5==\"gencode\"]) , with(genes_to_plot,V3[V2 == current_gene & V5==\"fetalIsoSeq\"]))\nshared=base::intersect(with(genes_to_plot,V3[V2 == current_gene & V5==\"gencode\"]) , with(genes_to_plot,V3[V2 == current_gene & V5==\"fetalIsoSeq\"]))\nnovel=base::setdiff(with(genes_to_plot,V3[V2 == current_gene & V5==\"fetalIsoSeq\"]) , with(genes_to_plot,V3[V2 == current_gene & V5==\"gencode\"]))\nnovel=novel[grepl(\"^TALON\",novel)]\n\ngencode_only_transcript_onegene=gencode_transcript[gencode_only,]\ngencode_only_transcript_onegene=unlist(gencode_only_transcript_onegene)\nelementMetadata(gencode_only_transcript_onegene)$transcript <- names(gencode_only_transcript_onegene)\ngencode_only_track=GeneRegionTrack(gencode_only_transcript_onegene,group = \"transcirpt\",name = \"Gencode undetected\")\n\nshared_transcript=gencode_transcript[shared,]\nshared_transcript=unlist(shared_transcript)\nelementMetadata(shared_transcript)$transcript=names(shared_transcript)\nshared_track=GeneRegionTrack(shared_transcript,group = \"transcript\",name = \"Gencode detected\")\n\nisoseq_transcript_onegene=isoseq_transcript[novel,]\nisoseq_transcript_onegene=unlist(isoseq_transcript_onegene)\nelementMetadata(isoseq_transcript_onegene)$transcript=names(isoseq_transcript_onegene)\nisoseq_track=GeneRegionTrack(isoseq_transcript_onegene,group = \"transcript\",name = \"Novel\")\n\ndisplayPars(gencode_only_track)=list(stacking=\"squish\",\n                                     background.panel = \"#ffffb2\",\n                                     fill=\"#006d2c\",\n                                     col=\"#006d2c\",\n                                     lwd=0.3,\n                                     col.line=\"black\",\n                                     fontcolor.title=\"black\",\n                                     background.title=\"#d1861d\")\ndisplayPars(shared_track)=list(stacking=\"squish\",\n                               background.panel = \"#f1eef6\",\n                               fill=\"#d62424\",\n                               col=\"#d62424\",\n                               lwd=0.3,\n                               col.line=\"black\",\n                               fontcolor.title=\"black\",\n                               background.title=\"#756e72\")\ndisplayPars(isoseq_track)=list(stacking=\"squish\",\n                               background.panel = \"#bcbddc\",\n                               fill=\"#171cc7\",\n                               col=\"#171cc7\",\n                               lwd=0.3,\n                               col.line=\"black\",\n                               showId = TRUE,\n                               transcriptAnnotation = \"transcript\",\n                               fontcolor.title=\"black\",\n                               background.title=\"#045a8d\")\n\nuniversal tracks\n\naxisTrack <- GenomeAxisTrack()\nideoTrack <- IdeogramTrack(genome = \"hg19\", chromosome = chr)\n\nfind plot range\n\nleftmost=min(c(gencode_only_transcript_onegene@ranges@start,shared_transcript@ranges@start,isoseq_transcript_onegene@ranges@start))\nrightmost=max(c(gencode_only_transcript_onegene@ranges@start,shared_transcript@ranges@start,isoseq_transcript_onegene@ranges@start))\n\ncurrentcagefile=cagefile[cagefile$V1 == chr & cagefile$V4 == strd & cagefile$V2 >= leftmost & cagefile$V3 <= rightmost,]\ncurrentpolyafile=polyafile[polyafile$V1 == chr & polyafile$V4 == strd & polyafile$V2 >= leftmost & polyafile$V3 <= rightmost,]\ncurrentatacfile=atacfile[atacfile$V1 == chr & atacfile$V2 >= leftmost & atacfile$V3 <= rightmost,]\n\ncurrentcagefile=currentcagefile[!duplicated(currentcagefile),]\ncurrentpolyafile=currentpolyafile[!duplicated(currentpolyafile),]\ncurrentatacfile=currentatacfile[!duplicated(currentatacfile),]\n\nCAGE, ployA and ATAC tracks\n\ncage=AnnotationTrack(start=currentcagefile$V2,\n                     end = currentcagefile$V3,\n                     chromosome = currentcagefile$V1,\n                     strand = currentcagefile$V4,\n                     background.panel = \"#99d8c9\",\n                     stacking = \"full\",\n                     fill=\"black\",\n                     name = \"CAGE peaks\",\n                     col=NULL,\n                     col.line=\"#99d8c9\",\n                     background.title=\"#2ca25f\",\n                     fontcolor.title=\"black\")\n\n\npolya=AnnotationTrack(start=currentpolyafile$V2,\n                      end = currentpolyafile$V3,\n                      chromosome = currentpolyafile$V1,\n                      strand = currentpolyafile$V4,\n                      background.panel = \"#fee0d2\",\n                      fill=\"black\",\n                      name = \"PolyA sites\",\n                      col=NULL,\n                      col.line=\"#fee0d2\",\n                      background.title=\"#ef6548\",\n                      fontcolor.title=\"black\")\n\natac=AnnotationTrack(start=currentatacfile$V2,\n                     end = currentatacfile$V3,\n                     chromosome = currentatacfile$V1,\n                     background.panel = \"#f0bdd7\",\n                     fill=\"black\",\n                     name = \"ATAC\",\n                     col=NULL,\n                     col.line=\"#f0bdd7\",\n                     background.title=\"#e67ab1\",\n                     fontcolor.title=\"black\")\n\n\ndisplayPars(cage)$stacking=\"dense\"\ndisplayPars(polya)$stacking=\"dense\"\ndisplayPars(atac)$stacking=\"dense\"\n\nplot\n\nextra=(rightmost - leftmost)*0.05\n\nplotTracks(list(ideoTrack,axisTrack,cage,polya,atac,gencode_only_track,shared_track,isoseq_track),\n           chromosome = chr,\n           from = leftmost - extra,\n           to = rightmost + extra,\n           sizes = c(1,1,1,1,1,max(1.5,0.35*length(gencode_only)),max(1.5,0.35*length(shared)),max(2,0.3*length(novel))))"
  },
  {
    "objectID": "analysis/Figure2_PeptideSupport.html",
    "href": "analysis/Figure2_PeptideSupport.html",
    "title": "Figure 2 - Peptide Support",
    "section": "",
    "text": "Required libraries\n\nlibrary(tidyverse)\nlibrary(scatterpie)\n\nplot\n\nplotdat=read.delim(\"data/stepwise_filtering_by_novelty.txt\")\nplotdat$category=factor(plotdat$category,levels = c(\"total\",\"protein_coding\",\"validatable_orf\",\"peptide_supported\"))\nplotdat$novelty=factor(plotdat$novelty,levels = c(\"Known\",\"ISM\",\"NIC\",\"NNC\",\"other\"))\nggplot(plotdat)+\n  geom_bar(aes(novelty,N,fill=category),stat = \"identity\",position = \"dodge\")+\n#  scale_y_continuous(labels = scales::percent)+\n#  scale_y_continuous(labels = scientific_10)+\n  xlab(\"\")+\n  ylab(expression(Transcript~(x10^3)))+\n  theme_bw()+\n  theme(text = element_text(family = \"Arial\",size = 16,face = \"bold\"))"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "",
    "text": "https://bioconductor.org/packages/3.14/bioc/vignettes/IsoformSwitchAnalyzeR/inst/doc/IsoformSwitchAnalyzeR.html"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#build-switch-list",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#build-switch-list",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Build switch list",
    "text": "Build switch list\n\nMake design\n\nmyDesign = tribble(\n  ~sampleID, ~condition, ~donor,\n  \"VZ_209\", \"VZ\", \"209\",\n  \"VZ_334\", \"VZ\", \"334\",\n  \"VZ_336\", \"VZ\", \"336\",\n  \"CP_209\", \"CP\", \"209\",\n  \"CP_334\", \"CP\", \"334\",\n  \"CP_336\", \"CP\", \"336\",\n) %>%\n  dplyr::mutate(\n    dplyr::across(c(condition, donor), as_factor)\n  )\n\n\n\nExtract Expresssion\n\ncts = read_table(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  .default = col_double(),\n  annot_gene_id = col_character(),\n  annot_transcript_id = col_character(),\n  annot_gene_name = col_character(),\n  annot_transcript_name = col_character(),\n  gene_novelty = col_character(),\n  transcript_novelty = col_character(),\n  ISM_subtype = col_character()\n)\nℹ Use `spec()` for the full column specifications.\n\ncts = cts %>%\n  mutate(\n    VZ_209 = rowSums(across(matches(\"209_.*_VZ\"))),\n    VZ_334 = rowSums(across(matches(\"334_.*_VZ\"))),\n    VZ_336 = rowSums(across(matches(\"336_.*_VZ\"))),\n    CP_209 = rowSums(across(matches(\"209_.*_CP\"))),\n    CP_334 = rowSums(across(matches(\"334_.*_CP\"))),\n    CP_336 = rowSums(across(matches(\"336_.*_CP\"))),\n    .keep = \"unused\"\n  ) %>%\n  dplyr::select(!c(\"gene_ID\", \"transcript_ID\", \"annot_transcript_name\")) %>%\n  dplyr::rename(\n    gene_id = \"annot_gene_id\",\n    transcript_id = \"annot_transcript_id\",\n    gene_name = \"annot_gene_name\"\n  ) %>%\n  mutate(\n    gene_novelty = as.factor(gene_novelty),\n    transcript_novelty = as.factor(transcript_novelty),\n    ISM_subtype = ISM_subtype %>% na_if(\"None\") %>% as.factor()\n  )\ntalonExpression = cts %>%\n  dplyr::select(transcript_id, starts_with(c(\"VZ\", \"CP\"))) %>%\n  dplyr::rename(isoform_id = \"transcript_id\")\ntalonExpression\n\n# A tibble: 214,516 × 7\n   isoform_id          VZ_209 VZ_334 VZ_336 CP_209 CP_334 CP_336\n   <chr>                <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 ENST00000494149.2_2      0      0      2      0      0      0\n 2 ENST00000424587.2        0      0      0      0      0      2\n 3 ENST00000445840.1        1      1      0      0      0      0\n 4 ENST00000457540.1_1      0      1      1      0      0      0\n 5 ENST00000414273.1_1      0      0      1      0      0      0\n 6 ENST00000655765.1_2      0      2      0      2      1      2\n 7 ENST00000457084.1_2      0      2      0      0      0      0\n 8 ENST00000591702.1_2      1      0      2      2      0      0\n 9 ENST00000644482.1_1      3      0      0      0      0      0\n10 ENST00000445118.7_3      1      0      0      8      0      0\n# … with 214,506 more rows\n\n\n\n\nCreate pre-filtered switchAnalyzeRlist\nIsoformSwitchAnalyzeR will make assumptions based on whether file extension is .gtf(.gz) or .gff(.gz)… was necessary to symlink _corrected.gtf.cds.gff.\n\nrdata_path  = \"data/working/talonSwitchList_preFilter.rds\"\nif(!file.exists(rdata_path)) { \n  talonSwitchList <- importRdata(\n      isoformCountMatrix   = talonExpression,\n      designMatrix         = myDesign,\n      isoformExonAnnoation = 'data/cp_vz_0.75_min_7_recovery_talon.gtf.gz',\n      isoformNtFasta       = 'data/sqanti/cp_vz_0.75_min_7_recovery_talon_corrected.fasta.gz',\n      addAnnotatedORFs     = FALSE,\n      fixStringTieAnnotationProblem = FALSE # otherwise will mess up gene_ids\n  )\n  talonSwitchList <- addORFfromGTF(\n    switchAnalyzeRlist     = talonSwitchList,\n    pathToGTF              = 'data/sqanti/cp_vz_0.75_min_7_recovery_talon_corrected.gtf.cds.gtf.gz'\n  )\n  talonSwitchList <- preFilter(\n    switchAnalyzeRlist         = talonSwitchList,\n    geneExpressionCutoff       = 1,     # default\n    isoformExpressionCutoff    = 0,     # default\n    IFcutoff                   = 0.01,  # default\n    removeSingleIsoformGenes   = TRUE,  # default\n    reduceToSwitchingGenes     = FALSE, # default (we didn't run DEXSeq yet)\n    keepIsoformInAllConditions = TRUE   # we only have 2 conditions so doesn't matter\n  )\n  saveRDS(talonSwitchList, file = rdata_path)\n} else {\n  talonSwitchList = readRDS(rdata_path)\n}\nsummary(talonSwitchList)\n\nThis switchAnalyzeRlist list contains:\n 102319 isoforms from 10809 genes\n 1 comparison from 2 conditions (in total 6 samples)\n\nFeature analyzed:\n[1] \"ntSequence, ORFs\"\n\n\n\nswitchPlot(\n  talonSwitchList,\n  gene='KMT2E'\n)\n\nWarning in switchPlot(talonSwitchList, gene = \"KMT2E\"): We recomend\nrunning the isoform switching analysis before doing the transcript plot.\nSee ?detectIsoformSwitching for more details\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#run-deseq2",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#run-deseq2",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Run DESeq2",
    "text": "Run DESeq2\n\nDTE\n\ncts_preFilter = talonExpression %>% filter(isoform_id %in% talonSwitchList$isoformFeatures$isoform_id)\ncts_preFilter\n\n# A tibble: 102,319 × 7\n   isoform_id           VZ_209 VZ_334 VZ_336 CP_209 CP_334 CP_336\n   <chr>                 <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 ENST00000669922.1_2       4     10      4      6      9     10\n 2 ENST00000659124.1_2       4      0      0      9      0      0\n 3 ENST00000441765.6_3       1      0      0      0      1      0\n 4 ENST00000668541.1_2       0      0      0      5      1      5\n 5 ENST00000327044.7_3     283    672    708    804    820    665\n 6 ENST00000428771.6_3       0      1      0      0      2      0\n 7 ENST00000304952.10_3      0     25     41      3      5     16\n 8 ENST00000481869.1_2       0      6      4      2      2      6\n 9 ENST00000484667.2_2       0      4      5      0      0      9\n10 ENST00000379370.7_2       4     12      7      9     34      8\n# … with 102,309 more rows\n\n\n\ndds = DESeqDataSetFromMatrix(\n  as.data.frame(cts_preFilter),\n  as.data.frame(myDesign),\n  ~ donor + condition,\n  tidy = T\n)\n\nconverting counts to integer mode\n\n\n\n# takes 30sec\nsystem.time({\n  dds  = DESeq(dds)\n})\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\n\n   user  system elapsed \n 23.712   0.397  24.398 \n\nDTE_results = DESeq2::results(dds)\nDTE_results\n\nlog2 fold change (MLE): condition CP vs VZ \nWald test p-value: condition CP vs VZ \nDataFrame with 102319 rows and 6 columns\n                      baseMean log2FoldChange     lfcSE       stat    pvalue\n                     <numeric>      <numeric> <numeric>  <numeric> <numeric>\nENST00000669922.1_2   6.794078      0.3497446  0.926990  0.3772904 0.7059578\nENST00000659124.1_2   2.340796      0.1825893  1.972493  0.0925678 0.9262469\nENST00000441765.6_3   0.406806     -0.0633991  4.033013 -0.0157200 0.9874577\nENST00000668541.1_2   1.695927      3.8310438  2.135802  1.7937258 0.0728569\nENST00000327044.7_3 615.853668      0.3351470  0.261315  1.2825405 0.1996531\n...                        ...            ...       ...        ...       ...\nTALONT003163865        1.27255        2.91192   2.53106   1.150474  0.249949\nTALONT003172883        1.32847        2.46363   2.50056   0.985233  0.324510\nTALONT003175107        1.61344        3.01946   2.33696   1.292045  0.196342\nTALONT003196342        1.10300        2.77499   2.66225   1.042347  0.297251\nTALONT003225592        1.41593        1.80728   2.62236   0.689179  0.490711\n                         padj\n                    <numeric>\nENST00000669922.1_2  0.925055\nENST00000659124.1_2        NA\nENST00000441765.6_3        NA\nENST00000668541.1_2        NA\nENST00000327044.7_3  0.570881\n...                       ...\nTALONT003163865            NA\nTALONT003172883            NA\nTALONT003175107            NA\nTALONT003196342            NA\nTALONT003225592            NA\n\n\n\nDTE_results = DTE_results %>%\n  as_tibble(rownames = \"isoform_id\") %>%\n  mutate(padj = replace_na(padj, 1))\n\n\n\nDGE\nMike note – lets calculate DGE for all genes (expressed) not just those in talonSwitchList_part1, which filters out genes with only 1 isoform, etc Should be ~25k\n\ncts_gene = read_table(\"data/cp_vz_talon_abundance.tsv.gz\") %>%\n  mutate(\n    VZ_209 = rowSums(across(matches(\"209_.*_VZ\"))),\n    VZ_334 = rowSums(across(matches(\"334_.*_VZ\"))),\n    VZ_336 = rowSums(across(matches(\"336_.*_VZ\"))),\n    CP_209 = rowSums(across(matches(\"209_.*_CP\"))),\n    CP_334 = rowSums(across(matches(\"334_.*_CP\"))),\n    CP_336 = rowSums(across(matches(\"336_.*_CP\"))),\n    .keep = \"unused\"\n  ) %>%\n  group_by(annot_gene_id, annot_gene_name, gene_novelty) %>%\n  summarize(across(starts_with(c(\"VZ\", \"CP\")), sum), .groups = \"drop\") %>%\n  dplyr::rename(\n    gene_id = \"annot_gene_id\",\n    gene_name = \"annot_gene_name\"\n  ) %>%\n  mutate(gene_novelty = as.factor(gene_novelty))\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  .default = col_double(),\n  annot_gene_id = col_character(),\n  annot_transcript_id = col_character(),\n  annot_gene_name = col_character(),\n  annot_transcript_name = col_character(),\n  gene_novelty = col_character(),\n  transcript_novelty = col_character(),\n  ISM_subtype = col_character()\n)\nℹ Use `spec()` for the full column specifications.\n\ncts_gene_preFilter = cts_gene %>%\n  filter(gene_id %in% unique(cts$gene_id)) %>% # Filtering for those with at least one detected isoform\n  dplyr::select(gene_id, starts_with(c(\"VZ\", \"CP\")))\ncts_gene_preFilter\n\n# A tibble: 24,554 × 7\n   gene_id              VZ_209 VZ_334 VZ_336 CP_209 CP_334 CP_336\n   <chr>                 <dbl>  <dbl>  <dbl>  <dbl>  <dbl>  <dbl>\n 1 ENSG00000000003.15_4    443    993    812    335    483    305\n 2 ENSG00000000419.12_5     30    119    108    388    123    311\n 3 ENSG00000000457.14_6    149    300    222    192    149    148\n 4 ENSG00000000460.17_6    103    423    275     99    132     76\n 5 ENSG00000000938.13_5      0      3     10     14      4     11\n 6 ENSG00000000971.16_3     13     17     23     21     26      9\n 7 ENSG00000001036.14_4    206    243    415    163    105    205\n 8 ENSG00000001084.13_9     49     73     51     54     65     44\n 9 ENSG00000001167.14_3    184    401    249    436    525    286\n10 ENSG00000001460.18_6      5      9     15     44     21     42\n# … with 24,544 more rows\n\n\n\ndds_gene = DESeqDataSetFromMatrix(\n  as.data.frame(cts_gene_preFilter),\n  as.data.frame(myDesign),\n  ~ donor + condition,\n  tidy = T\n)\n\nconverting counts to integer mode\n\n\n\n# takes 10sec\nsystem.time({\n  dds_gene  = DESeq(dds_gene)\n})\n\nestimating size factors\n\n\nestimating dispersions\n\n\ngene-wise dispersion estimates\n\n\nmean-dispersion relationship\n\n\nfinal dispersion estimates\n\n\nfitting model and testing\n\n\n   user  system elapsed \n  7.720   0.246   7.983 \n\nDGE_results = DESeq2::results(dds_gene)\nDGE_results\n\nlog2 fold change (MLE): condition CP vs VZ \nWald test p-value: condition CP vs VZ \nDataFrame with 24554 rows and 6 columns\n                      baseMean log2FoldChange     lfcSE      stat      pvalue\n                     <numeric>      <numeric> <numeric> <numeric>   <numeric>\nENSG00000000003.15_4 547.45338      -1.127697  0.224974  -5.01257 5.37067e-07\nENSG00000000419.12_5 168.65442       1.554264  0.394700   3.93784 8.22188e-05\nENSG00000000457.14_6 189.49516      -0.588598  0.272137  -2.16287 3.05513e-02\nENSG00000000460.17_6 172.14571      -1.381243  0.295422  -4.67548 2.93261e-06\nENSG00000000938.13_5   6.44186       1.487234  1.237223   1.20207 2.29335e-01\n...                        ...            ...       ...       ...         ...\nTALONG000171040        7.30690        6.13371   1.58942   3.85908 0.000113814\nTALONG000171269        1.51623        3.77994   2.59371   1.45735 0.145019484\nTALONG000180651        3.39053        4.85165   1.95562   2.48088 0.013106017\nTALONG000182469        2.31534        4.58042   2.20513   2.07717 0.037785814\nTALONG000183977        1.57984        3.87094   2.55344   1.51597 0.129526613\n                            padj\n                       <numeric>\nENSG00000000003.15_4 6.36749e-06\nENSG00000000419.12_5 6.41440e-04\nENSG00000000457.14_6 1.04347e-01\nENSG00000000460.17_6 3.06182e-05\nENSG00000000938.13_5 4.59846e-01\n...                          ...\nTALONG000171040      0.000856288\nTALONG000171269               NA\nTALONG000180651      0.053168102\nTALONG000182469      0.123652258\nTALONG000183977               NA\n\n\n\nDGE_results = DGE_results %>%\n  as_tibble(rownames = \"gene_id\") %>%\n  mutate(padj = replace_na(padj, 1))"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#switch-analysis-part-1",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#switch-analysis-part-1",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Switch analysis part 1",
    "text": "Switch analysis part 1\n\nrdata_path  = \"data/working/talonSwitchList_part1.rds\"\nif (!file.exists(rdata_path)) {\n  ### DEXSeq DTU - takes 15min\n  talonSwitchList_part1 <- isoformSwitchTestDEXSeq(\n    switchAnalyzeRlist         = talonSwitchList,\n    reduceToSwitchingGenes     = FALSE\n  )\n\n  ### Add DTE/DGE to switchList\n  idx = match(talonSwitchList_part1$isoformFeatures$isoform_id, DTE_results$isoform_id)\n  talonSwitchList_part1$isoformFeatures$iso_q_value = DTE_results$padj[idx]\n\n  idx = match(talonSwitchList_part1$isoformFeatures$gene_id, DGE_results$gene_id)\n  talonSwitchList_part1$isoformFeatures$gene_q_value = DGE_results$padj[idx]\n  \n  ### Extract AA sequences\n  talonSwitchList_part1$aaSequence = NULL\n  isoformFeatures_part1 = talonSwitchList_part1$isoformFeatures\n  talonSwitchList_part1$isoformFeatures = isoformFeatures_part1 %>%\n    as_tibble() %>%\n    group_by(gene_id) %>%\n    mutate(\n      isoform_switch_q_value = if_else(any(\n        # our actual filtering criteria - genes with DTU, DTE, or DGE\n        (isoform_switch_q_value < 0.05 & dIF > 0.1) | iso_q_value < 0.05 | gene_q_value < 0.05\n      ), 0, 1),\n      dIF = 1\n    ) %>%\n    ungroup() %>%\n    as.data.frame()\n  talonSwitchList_part1 <- extractSequence(\n    switchAnalyzeRlist = talonSwitchList_part1,\n    pathToOutput       = \"data/working/IsoformSwitchAnalyzeR/\",\n    extractNTseq       = TRUE,\n    extractAAseq       = TRUE,\n    removeShortAAseq   = TRUE,\n    removeLongAAseq    = FALSE,\n    onlySwitchingGenes = TRUE\n  )\n  talonSwitchList_part1$isoformFeatures = isoformFeatures_part1\n  \n  ### Save to file\n  saveRDS(talonSwitchList_part1, file = rdata_path)\n} else {\n  talonSwitchList_part1 = readRDS(rdata_path)\n}\nsummary(talonSwitchList_part1)\n\nThis switchAnalyzeRlist list contains:\n 102319 isoforms from 10809 genes\n 1 comparison from 2 conditions (in total 6 samples)\n\nSwitching features:\n  Comparison Isoforms Switches Genes\n1   VZ vs CP     1860     1073  1237\n\nFeature analyzed:\n[1] \"Isoform Switch Identification, ntSequence, ORFs, aaSequence\"\n\n\nWARNING: extractSequence() silently caches its result in switchList$aaSequence. If this object exists, extractSequence() will return the same result, no matter if you adjust alpha, dIFcutoff, or even re-run isoformSwitchTestDEXSeq().\nWhat are the exact isoforms extractSequence() will return sequences for? (Slightly fewer if removeShortAAseq = TRUE)\n\norf_isoforms = talonSwitchList_part1$orfAnalysis %>% as_tibble() %>%\n  drop_na(orfTransciptStart) %>%\n  pull(isoform_id)\ntalonSwitchList_part1$isoformFeatures %>% as_tibble() %>%\n  group_by(gene_id) %>% filter(any(isoform_switch_q_value < 0.05 & abs(dIF) > 0.1)) %>% ungroup() %>%\n  filter(isoform_id %in% orf_isoforms)\n\n# A tibble: 12,026 × 30\n   iso_ref       gene_…¹ isofo…² gene_id condi…³ condi…⁴ gene_…⁵ gene_…⁶ iso_b…⁷\n   <chr>         <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  \n 1 isoComp_0000… geneCo… ENST00… ENSG00… VZ      CP      TSPAN6  protei… protei…\n 2 isoComp_0000… geneCo… TALONT… ENSG00… VZ      CP      TSPAN6  protei… <NA>   \n 3 isoComp_0000… geneCo… TALONT… ENSG00… VZ      CP      TSPAN6  protei… <NA>   \n 4 isoComp_0000… geneCo… TALONT… ENSG00… VZ      CP      TSPAN6  protei… <NA>   \n 5 isoComp_0000… geneCo… TALONT… ENSG00… VZ      CP      TSPAN6  protei… <NA>   \n 6 isoComp_0000… geneCo… TALONT… ENSG00… VZ      CP      TSPAN6  protei… <NA>   \n 7 isoComp_0000… geneCo… TALONT… ENSG00… VZ      CP      TSPAN6  protei… <NA>   \n 8 isoComp_0000… geneCo… ENST00… ENSG00… VZ      CP      C1orf1… protei… protei…\n 9 isoComp_0000… geneCo… ENST00… ENSG00… VZ      CP      C1orf1… protei… protei…\n10 isoComp_0000… geneCo… ENST00… ENSG00… VZ      CP      C1orf1… protei… protei…\n# … with 12,016 more rows, 21 more variables: gene_overall_mean <dbl>,\n#   gene_value_1 <dbl>, gene_value_2 <dbl>, gene_stderr_1 <dbl>,\n#   gene_stderr_2 <dbl>, gene_log2_fold_change <dbl>, gene_q_value <dbl>,\n#   iso_overall_mean <dbl>, iso_value_1 <dbl>, iso_value_2 <dbl>,\n#   iso_stderr_1 <dbl>, iso_stderr_2 <dbl>, iso_log2_fold_change <dbl>,\n#   iso_q_value <dbl>, IF_overall <dbl>, IF1 <dbl>, IF2 <dbl>, dIF <dbl>,\n#   isoform_switch_q_value <dbl>, gene_switch_q_value <dbl>, PTC <lgl>, and …"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#table-s3",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#table-s3",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Table S3",
    "text": "Table S3\n\nWhat genes does IsoformSwitchAnalyzeR think are significant?\n\nextractTopSwitches(\n  talonSwitchList_part1, filterForConsequences = FALSE, n=Inf\n) %>%  as_tibble()\n\n# A tibble: 1,237 × 7\n   gene_ref          gene_id             gene_…¹ condi…² condi…³ gene_sw…⁴  Rank\n   <chr>             <chr>               <chr>   <chr>   <chr>       <dbl> <int>\n 1 geneComp_00001085 ENSG00000073584.20… SMARCE1 VZ      CP      1.03e-211     1\n 2 geneComp_00000969 ENSG00000070087.14… PFN2    VZ      CP      6.32e-118     2\n 3 geneComp_00008384 ENSG00000155849.15… ELMO1   VZ      CP      3.74e-116     3\n 4 geneComp_00000525 ENSG00000044115.21… CTNNA1  VZ      CP      3.84e-103     4\n 5 geneComp_00005804 ENSG00000133884.10… DPF2    VZ      CP      4.94e- 95     5\n 6 geneComp_00020536 ENSG00000263001.6_6 GTF2I   VZ      CP      9.35e- 94     6\n 7 geneComp_00001542 ENSG00000087274.17… ADD1    VZ      CP      2.19e- 85     7\n 8 geneComp_00003418 ENSG00000111667.13… USP5    VZ      CP      6.38e- 83     8\n 9 geneComp_00004817 ENSG00000124783.14… SSR1    VZ      CP      2.45e- 80     9\n10 geneComp_00000441 ENSG00000033627.16… ATP6V0… VZ      CP      4.61e- 74    10\n# … with 1,227 more rows, and abbreviated variable names ¹​gene_name,\n#   ²​condition_1, ³​condition_2, ⁴​gene_switch_q_value\n\n\n\ntalonSwitchList_part1$isoformFeatures %>% as_tibble() %>%\n  group_by(gene_ref, gene_id, gene_name, condition_1, condition_2, gene_switch_q_value) %>%\n  filter(any(isoform_switch_q_value < 0.05 & abs(dIF) > 0.1)) %>%\n  summarize() %>%\n  arrange(gene_switch_q_value)\n\n`summarise()` has grouped output by 'gene_ref', 'gene_id', 'gene_name',\n'condition_1', 'condition_2'. You can override using the `.groups` argument.\n\n\n# A tibble: 1,237 × 6\n# Groups:   gene_ref, gene_id, gene_name, condition_1, condition_2 [1,237]\n   gene_ref          gene_id              gene_name conditio…¹ condi…² gene_sw…³\n   <chr>             <chr>                <chr>     <chr>      <chr>       <dbl>\n 1 geneComp_00001085 ENSG00000073584.20_8 SMARCE1   VZ         CP      1.03e-211\n 2 geneComp_00000969 ENSG00000070087.14_5 PFN2      VZ         CP      6.32e-118\n 3 geneComp_00008384 ENSG00000155849.15_4 ELMO1     VZ         CP      3.74e-116\n 4 geneComp_00000525 ENSG00000044115.21_7 CTNNA1    VZ         CP      3.84e-103\n 5 geneComp_00005804 ENSG00000133884.10_4 DPF2      VZ         CP      4.94e- 95\n 6 geneComp_00020536 ENSG00000263001.6_6  GTF2I     VZ         CP      9.35e- 94\n 7 geneComp_00001542 ENSG00000087274.17_6 ADD1      VZ         CP      2.19e- 85\n 8 geneComp_00003418 ENSG00000111667.13_4 USP5      VZ         CP      6.38e- 83\n 9 geneComp_00004817 ENSG00000124783.14_6 SSR1      VZ         CP      2.45e- 80\n10 geneComp_00000441 ENSG00000033627.16_4 ATP6V0A1  VZ         CP      4.61e- 74\n# … with 1,227 more rows, and abbreviated variable names ¹​condition_1,\n#   ²​condition_2, ³​gene_switch_q_value\n\n\n\n\nWhat transcripts does IsoformSwitchAnalyzeR think are significant?\n\nextractTopSwitches(\n  talonSwitchList_part1, extractGenes = FALSE, filterForConsequences = FALSE, n=Inf\n) %>%  as_tibble()\n\nWarning in .fun(piece, ...): Less than n genes genes with significant switches\nwere found. Returning those.\n\n\n# A tibble: 1,860 × 12\n   iso_ref    gene_…¹ isofo…² gene_id gene_…³ condi…⁴ condi…⁵   IF1   IF2    dIF\n   <chr>      <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <dbl> <dbl>  <dbl>\n 1 isoComp_0… geneCo… ENST00… ENSG00… SMARCE1 VZ      CP      0.57  0.164 -0.405\n 2 isoComp_0… geneCo… ENST00… ENSG00… PFN2    VZ      CP      0.25  0.021 -0.228\n 3 isoComp_0… geneCo… ENST00… ENSG00… ELMO1   VZ      CP      0.404 0.024 -0.38 \n 4 isoComp_0… geneCo… ENST00… ENSG00… CTNNA1  VZ      CP      0.541 0.129 -0.413\n 5 isoComp_0… geneCo… ENST00… ENSG00… DPF2    VZ      CP      0.082 0.553  0.47 \n 6 isoComp_0… geneCo… ENST00… ENSG00… GTF2I   VZ      CP      0.128 0.017 -0.111\n 7 isoComp_0… geneCo… TALONT… ENSG00… ADD1    VZ      CP      0.31  0.059 -0.251\n 8 isoComp_0… geneCo… ENST00… ENSG00… CTNNA1  VZ      CP      0.124 0.32   0.197\n 9 isoComp_0… geneCo… ENST00… ENSG00… USP5    VZ      CP      0.314 0.693  0.379\n10 isoComp_0… geneCo… ENST00… ENSG00… USP5    VZ      CP      0.561 0.185 -0.376\n# … with 1,850 more rows, 2 more variables: isoform_switch_q_value <dbl>,\n#   Rank <int>, and abbreviated variable names ¹​gene_ref, ²​isoform_id,\n#   ³​gene_name, ⁴​condition_1, ⁵​condition_2\n\n\n\ntalonSwitchList_part1$isoformFeatures %>% as_tibble() %>%\n  filter(isoform_switch_q_value < 0.05 & abs(dIF) > 0.1) %>%\n  dplyr::select(iso_ref, gene_ref, isoform_id, gene_id, gene_name, condition_1, condition_2, IF1, IF2, dIF, isoform_switch_q_value) %>%\n  arrange(isoform_switch_q_value)\n\n# A tibble: 1,860 × 11\n   iso_ref  gene_…¹ isofo…² gene_id gene_…³ condi…⁴ condi…⁵    IF1    IF2    dIF\n   <chr>    <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <dbl>  <dbl>  <dbl>\n 1 isoComp… geneCo… ENST00… ENSG00… SMARCE1 VZ      CP      0.570  0.164  -0.405\n 2 isoComp… geneCo… ENST00… ENSG00… PFN2    VZ      CP      0.250  0.0213 -0.228\n 3 isoComp… geneCo… ENST00… ENSG00… ELMO1   VZ      CP      0.404  0.0237 -0.380\n 4 isoComp… geneCo… ENST00… ENSG00… CTNNA1  VZ      CP      0.541  0.129  -0.413\n 5 isoComp… geneCo… ENST00… ENSG00… DPF2    VZ      CP      0.0823 0.553   0.470\n 6 isoComp… geneCo… ENST00… ENSG00… GTF2I   VZ      CP      0.128  0.0167 -0.111\n 7 isoComp… geneCo… TALONT… ENSG00… ADD1    VZ      CP      0.310  0.059  -0.251\n 8 isoComp… geneCo… ENST00… ENSG00… CTNNA1  VZ      CP      0.124  0.320   0.197\n 9 isoComp… geneCo… ENST00… ENSG00… USP5    VZ      CP      0.314  0.693   0.379\n10 isoComp… geneCo… ENST00… ENSG00… USP5    VZ      CP      0.561  0.185  -0.376\n# … with 1,850 more rows, 1 more variable: isoform_switch_q_value <dbl>, and\n#   abbreviated variable names ¹​gene_ref, ²​isoform_id, ³​gene_name,\n#   ⁴​condition_1, ⁵​condition_2\n\n\n\n\nCreate our Table S3\nNote: isoformSwitchAnalyzer uses both q-value (<.05) and effect size cutoff |dIF>.1| for DTU calling. Lets remove the dIF effect size cutoff here so that we can directly compare DGE, DTE, and DTU genes in the Venn Diagram below\n\ntableS3 = talonSwitchList_part1$isoformFeatures %>%\n  as_tibble() %>%\n  dplyr::select(isoform_id, gene_id, gene_name, condition_1, condition_2) %>%\n  left_join(\n    talonSwitchList_part1$isoformSwitchAnalysis %>% dplyr::select(isoform_id, dIF, pvalue, padj)\n  ) %>%\n  dplyr::rename(\n    DTU_dIF    = \"dIF\",\n    DTU_pval   = \"pvalue\",\n    DTU_qval   = \"padj\"\n  ) %>%\n  mutate(\n    DTU = DTU_qval < 0.05 # & abs(DTU_dIF) > 0.1\n  ) %>%\n  left_join(\n    DTE_results %>% dplyr::select(isoform_id, log2FoldChange, pvalue, padj)\n  ) %>%\n  dplyr::rename(\n    DTE_log2FC = \"log2FoldChange\",\n    DTE_pval   = \"pvalue\",\n    DTE_qval   = \"padj\"\n  ) %>%\n  mutate(\n    DTE = DTE_qval < 0.05\n  ) %>%\n  left_join(\n    DGE_results %>% dplyr::select(gene_id, log2FoldChange, pvalue, padj)\n  ) %>%\n  dplyr::rename(\n    DGE_log2FC = \"log2FoldChange\",\n    DGE_pval   = \"pvalue\",\n    DGE_qval   = \"padj\"\n  ) %>%\n  mutate(\n    DGE = DGE_qval < 0.05\n  )\n\nJoining, by = \"isoform_id\"\nJoining, by = \"isoform_id\"\nJoining, by = \"gene_id\"\n\ntableS3\n\n# A tibble: 102,319 × 17\n   isoform_id   gene_id gene_…¹ condi…² condi…³  DTU_dIF DTU_pval DTU_qval DTU  \n   <chr>        <chr>   <chr>   <chr>   <chr>      <dbl>    <dbl>    <dbl> <lgl>\n 1 ENST0000037… ENSG00… TSPAN6  VZ      CP      -0.347   4.89e-14 9.84e-12 TRUE \n 2 TALONT00074… ENSG00… TSPAN6  VZ      CP       0.140   1.42e- 8 1.23e- 6 TRUE \n 3 TALONT00074… ENSG00… TSPAN6  VZ      CP       0.196   1.36e- 6 7.89e- 5 TRUE \n 4 TALONT00074… ENSG00… TSPAN6  VZ      CP       0.00667 6.29e- 1 9.24e- 1 FALSE\n 5 TALONT00074… ENSG00… TSPAN6  VZ      CP      -0.00633 4.95e- 1 8.74e- 1 FALSE\n 6 TALONT00074… ENSG00… TSPAN6  VZ      CP      -0.00867 1.89e- 1 6.47e- 1 FALSE\n 7 TALONT00074… ENSG00… TSPAN6  VZ      CP       0.017   1.48e- 3 3.08e- 2 TRUE \n 8 ENST0000037… ENSG00… DPM1    VZ      CP      -0.0317  8.43e- 1 9.76e- 1 FALSE\n 9 ENST0000037… ENSG00… DPM1    VZ      CP      -0.0273  2.34e- 1 7.00e- 1 FALSE\n10 ENST0000037… ENSG00… DPM1    VZ      CP       0.0993  1.48e- 1 5.89e- 1 FALSE\n# … with 102,309 more rows, 8 more variables: DTE_log2FC <dbl>, DTE_pval <dbl>,\n#   DTE_qval <dbl>, DTE <lgl>, DGE_log2FC <dbl>, DGE_pval <dbl>,\n#   DGE_qval <dbl>, DGE <lgl>, and abbreviated variable names ¹​gene_name,\n#   ²​condition_1, ³​condition_2\n\n\n\ntableS3 %>% write_tsv(\"output/tables/TableS3_v3.tsv.gz\")\n\ntableS3b_geneLevel = tableS3 %>%\n  group_by(gene_name, gene_id) %>%\n  summarize(\n    DTU = any(DTU), DTE = any(DTE), DGE = any(DGE),\n    DTU_qval_min = min(DTU_qval), DTU_pval_min = min(DTU_pval),\n    DTE_qval_min = min(DTE_qval), DTE_pval_min = min(DTE_pval),\n    DGE_pval = min(DGE_pval), DGE_qval = min(DGE_qval)\n  )\n\n`summarise()` has grouped output by 'gene_name'. You can override using the\n`.groups` argument.\n\ntableS3b_geneLevel %>% write_tsv(\"output/tables/TableS3b_geneLevel.tsv.gz\")\n\nNote: log2fc in switchlist are based on the calculated RPKM values, not raw counts, so they don’t agree with DESEq2 log2fc columns.\nSanity check: The isoform_switch_q_value column in switchList\\(isoformFeatures comes from the padj column in switchList\\)isoformSwitchAnalysis (which is the DEXSeq results). gene_switch_q_value is just the minimum padj of any isoform for that gene.\n\nleft_join(\n  talonSwitchList_part1$isoformFeatures %>% as_tibble(),\n  talonSwitchList_part1$isoformSwitchAnalysis %>% as_tibble(),\n  by = \"isoform_id\"\n) %>%\n  filter(isoform_switch_q_value != padj)\n\n# A tibble: 0 × 39\n# … with 39 variables: iso_ref.x <chr>, gene_ref.x <chr>, isoform_id <chr>,\n#   gene_id <chr>, condition_1.x <chr>, condition_2.x <chr>, gene_name <chr>,\n#   gene_biotype <chr>, iso_biotype <chr>, gene_overall_mean <dbl>,\n#   gene_value_1 <dbl>, gene_value_2 <dbl>, gene_stderr_1 <dbl>,\n#   gene_stderr_2 <dbl>, gene_log2_fold_change <dbl>, gene_q_value <dbl>,\n#   iso_overall_mean <dbl>, iso_value_1 <dbl>, iso_value_2 <dbl>,\n#   iso_stderr_1 <dbl>, iso_stderr_2 <dbl>, iso_log2_fold_change <dbl>, …\n\nleft_join(\n  talonSwitchList_part1$isoformFeatures %>% as_tibble(),\n  talonSwitchList_part1$isoformSwitchAnalysis %>% as_tibble(),\n  by = \"isoform_id\"\n) %>%\n  group_by(gene_id) %>%\n  filter(gene_switch_q_value != min(padj))\n\n# A tibble: 0 × 39\n# Groups:   gene_id [0]\n# … with 39 variables: iso_ref.x <chr>, gene_ref.x <chr>, isoform_id <chr>,\n#   gene_id <chr>, condition_1.x <chr>, condition_2.x <chr>, gene_name <chr>,\n#   gene_biotype <chr>, iso_biotype <chr>, gene_overall_mean <dbl>,\n#   gene_value_1 <dbl>, gene_value_2 <dbl>, gene_stderr_1 <dbl>,\n#   gene_stderr_2 <dbl>, gene_log2_fold_change <dbl>, gene_q_value <dbl>,\n#   iso_overall_mean <dbl>, iso_value_1 <dbl>, iso_value_2 <dbl>,\n#   iso_stderr_1 <dbl>, iso_stderr_2 <dbl>, iso_log2_fold_change <dbl>, …"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#fig3",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#fig3",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Fig3",
    "text": "Fig3\n\nFig3a: Volcano Plots\n\ncts$novelty2 = as.character(cts$transcript_novelty)\ncts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Prefix\")] = \"ISM_Prefix\"\ncts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Suffix\")] = \"ISM_Suffix\"\ncts$novelty2[cts$novelty2 %in% c(\"Antisense\", \"Genomic\", \"Intergenic\", \"ISM\")] = \"Other\"\ncts$novelty2 = factor(cts$novelty2,levels=c(\"Known\", \"ISM_Prefix\", \"ISM_Suffix\", \"NIC\", \"NNC\", \"Other\"))\n\ndata_to_label1 = talonSwitchList_part1$isoformFeatures %>%\n  filter((-log10(isoform_switch_q_value) > 50 & (abs(dIF) > .1)) | \n           (abs(dIF) > .5 & isoform_switch_q_value < 1e-10))\ndata_to_label2 = talonSwitchList_part1$isoformFeatures %>% \n  filter(isoform_switch_q_value < .05, gene_name %in% c(\"SRRM1\", \"PTBP2\", \"ELAVL2\", \"ELAVL4\", \"RBFOX2\",\"NF1\", \"TSC2\", \"UBE3A\", \"KMT2E\", \"KMT5B\", \"SMARCD3\", \"SMARCA1\", \"FOXP2\", \"GRIA3\", \"VAMP1\", \"GAD1\", \"NLGN4X\", \"NRXN1\")) %>% group_by(gene_name) %>% slice_max(n = 1, abs(dIF))\n\ndata_to_label <- bind_rows(data_to_label1,data_to_label2)\n\nFig3a = ggplot(data=talonSwitchList_part1$isoformFeatures %>% left_join(cts %>% dplyr::select(isoform_id=transcript_id, novelty=novelty2)), \n       aes(x=dIF, y=-log10(isoform_switch_q_value))) +\n     geom_point(\n        aes(color=novelty), # default cutoff\n        size=2, alpha=.5) +\n    geom_hline(yintercept = -log10(0.05), linetype='dashed',color='red') + # default cutoff\n    labs(x='difference in isoform fraction (dIF)', y='-log10 ( Isoform Switch Q Value )') +\n    theme_bw() + xlim(-1,1) + scale_color_manual(values=colorVector_ismSplit) + \n  ggrepel::geom_text_repel(data =  data_to_label %>% filter(dIF < 0),aes(label=gene_name, segment.size  = .1),size=3,force = 10, max.overlaps = 50,nudge_y = 10, nudge_x = -.2) + \n  ggrepel::geom_text_repel(data =  data_to_label %>% filter(dIF > 0),aes(label=gene_name, segment.size  = .1),size=3,force = 10, max.overlaps = 50,nudge_y = 10, nudge_x = .2) + theme(legend.position = 'none') + geom_vline(xintercept = 0,lty=1,color='darkgrey')\n\nJoining, by = \"isoform_id\"\n\nFig3a\n\nWarning: Removed 4 rows containing missing values (geom_point).\n\n\nWarning: Removed 1 rows containing missing values (geom_text_repel).\n\n\n\n\nggsave(Fig3a, file=\"output/figures/Fig3/Fig3a.pdf\",width=6,height=4)\n\nWarning: Removed 4 rows containing missing values (geom_point).\nRemoved 1 rows containing missing values (geom_text_repel).\n\nFig3a.fg = ggplot(data=talonSwitchList_part1$isoformFeatures %>% left_join(cts %>% dplyr::select(isoform_id=transcript_id, novelty=novelty2)), \n       aes(x=dIF, y=-log10(isoform_switch_q_value))) +\n     geom_point(\n        aes(color=novelty), color=NA, # default cutoff\n        size=2, alpha=.5) +\n    geom_hline(yintercept = -log10(0.05), linetype='dashed',color='red') + # default cutoff\n    labs(x='difference in isoform fraction (dIF)', y='-log10 ( Isoform Switch Q Value )') +\n    theme_bw() + xlim(-1,1) + scale_color_manual(values=colorVector_ismSplit) + \n ggrepel::geom_text_repel(data =  data_to_label %>% filter(dIF < 0),aes(label=gene_name, segment.size   = .1),size=3,force = 10, max.overlaps = 50,nudge_y = 10, nudge_x = -.2) + \n  ggrepel::geom_text_repel(data =  data_to_label %>% filter(dIF > 0),aes(label=gene_name, segment.size  = .1),size=3,force = 10, max.overlaps = 50,nudge_y = 10, nudge_x = .2)+theme(legend.position = 'none') + geom_vline(xintercept = 0,lty=1,color='darkgrey')\n\nJoining, by = \"isoform_id\"\n\nFig3a.fg\n\nWarning: Removed 102319 rows containing missing values (geom_point).\nRemoved 1 rows containing missing values (geom_text_repel).\n\n\n\n\nggsave(Fig3a.fg, file=\"output/figures/Fig3/Fig3a_fg.pdf\",width=6,height=4)\n\nWarning: Removed 102319 rows containing missing values (geom_point).\nRemoved 1 rows containing missing values (geom_text_repel).\n\nFig3a.bg =ggplot(data=talonSwitchList_part1$isoformFeatures %>% left_join(cts %>% dplyr::select(isoform_id=transcript_id, novelty=novelty2)), \n       aes(x=dIF, y=-log10(isoform_switch_q_value))) +\n     geom_point(\n        aes(color=novelty), # default cutoff\n        size=2, alpha=.5)  + scale_color_manual(values=colorVector_ismSplit) + theme_void()  + theme(legend.position = 'none')\n\nJoining, by = \"isoform_id\"\n\nggsave(Fig3a.bg, file=\"output/figures/Fig3/Fig3a_bg.jpg\",width=6,height=4)\n\nWarning: Removed 4 rows containing missing values (geom_point).\n\n\n\n\nFig3a_2: Pie Chart\n\nthis_df = talonSwitchList_part1$isoformFeatures %>% \n  left_join(cts %>% dplyr::select(isoform_id=transcript_id, novelty=novelty2)) %>%\n  filter(isoform_switch_q_value < .05) %>% group_by(novelty) %>% summarise(switches=n_distinct(isoform_id))\n\nJoining, by = \"isoform_id\"\n\nthis_df<-this_df %>% arrange(desc(novelty)) %>%\n  mutate(prop = switches / sum(switches) *100) %>%\n  mutate(ypos = cumsum(prop)- 0.5*prop )\n\nFig3a_part2 = ggplot(this_df, aes(x=\"\", y=prop, fill=novelty)) +\n  geom_bar(stat=\"identity\", width=1, color=\"white\") +\n  coord_polar(\"y\",start=0) + \n  theme_void() + theme(legend.position = 'none', plot.title = element_text(hjust=.5)) +\n  scale_fill_manual(values=colorVector_ismSplit) + \n  geom_text(aes(y=ypos, label = paste0(novelty,\"\\n(N=\", switches, \")\")), color = \"white\", size=5) \n  Fig3a_part2\n\n\n\n  ggsave(Fig3a_part2, file=\"output/figures/Fig3/Fig3a_part2.pdf\",width=4,height=4)\n\n\n\nFig3b: DGE vs DTU plots\n\nthis_df = talonSwitchList_part1$isoformFeatures %>% \n  left_join(cts %>% dplyr::select(isoform_id=transcript_id, novelty=novelty2))\n\nJoining, by = \"isoform_id\"\n\nthis_df$gene_q_value = DGE_results$padj[match(this_df$gene_id, DGE_results$gene_id)]\n\nFig3b = ggplot(data=this_df, \n       aes(x=gene_log2_fold_change, y=dIF)) +\n     geom_point(\n        aes(color=abs(dIF) > 0.1 & isoform_switch_q_value < 0.05, # default cutoff\n            shape = abs(gene_log2_fold_change) > .1 & gene_q_value < .05),\n        size=1, alpha=.5,\n    ) +\n    geom_hline(yintercept = 0, linetype='dashed') + # default cutoff\n    geom_vline(xintercept =0, linetype='dashed') + # default cutoff\n    labs(y='difference in isoform fraction (dIF)', x='Gene log2FC') +\n    theme_bw()  + xlim(-5,5)+\n  scale_color_manual('Signficant\\nIsoform Switch', values = c('black','red')) +\n  scale_shape_manual('Signficant\\nDGE', values = c(\"FALSE\"=1, \"TRUE\"=16)) +\n  ggrepel::geom_text_repel(data = talonSwitchList_part1$isoformFeatures %>% filter(abs(dIF) > .5 & isoform_switch_q_value < 0.05), aes(label=gene_name),size=3, max.overlaps = 20)\n\nFig3b\n\nWarning: Removed 31 rows containing missing values (geom_point).\n\n\nWarning: Removed 1 rows containing missing values (geom_text_repel).\n\n\nWarning: ggrepel: 4 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n\n\n\nggsave(Fig3b, file=\"output/figures/Fig3/Fig3b.pdf\",width=8,height=5)\n\nWarning: Removed 31 rows containing missing values (geom_point).\n\n\nWarning: Removed 1 rows containing missing values (geom_text_repel).\n\n\nWarning: ggrepel: 2 unlabeled data points (too many overlaps). Consider\nincreasing max.overlaps\n\n## DGE Volcano plot colored by DTU\nthis_df = DGE_results %>% left_join(cts_gene %>% dplyr::select(gene_id, gene_name)) %>% \n  left_join(tableS3 %>% dplyr::select(gene_id, DTU) %>% group_by(gene_id) %>% summarise(DTU = any(DTU)))\n\nJoining, by = \"gene_id\"\nJoining, by = \"gene_id\"\n\nthis_df$DTU[is.na(this_df$DTU)] = F\nthis_df$DTU = factor(this_df$DTU, levels=c(\"TRUE\", \"FALSE\"))\nggplot(this_df %>% filter(DTU==FALSE), aes(x=log2FoldChange, y=-log10(padj))) + geom_point(alpha=.25, color='grey') + geom_point(data=this_df %>% filter(DTU==TRUE), alpha=.5, color='red') + theme_bw()\n\n\n\n\n\n\nFig3c: Venn Diagrams\n\ngene_overlaps = tableS3 %>% group_by(gene_id) %>% summarise(DTE = any(DTE), DGE=any(DGE), DTU=any(DTU)) %>% dplyr::select(-gene_id)\n\n# Sanity check: 2,679 of 10809 genes with DTU (iso_q_value< .05)\nswitches=extractTopSwitches(\n  talonSwitchList_part1, extractGenes = TRUE, dIFcutoff = 0, filterForConsequences = FALSE, n=Inf\n) %>%  as_tibble()\ntable(gene_overlaps$DTU)\n\n\nFALSE  TRUE \n 8130  2679 \n\n# Gene-level DGE:  4475 of 24554 -- note different backgrounds\ntable(DGE_results$padj < .05)\n\n\nFALSE  TRUE \n20079  4475 \n\n# Fisher's Exact Test\nsource(file = \"code/fisher_overlap.R\")\nORA(tableS3$gene_id[tableS3$DTU_qval<.05],DGE_results$gene_id[DGE_results$padj<.05], tableS3$gene_id, DGE_results$gene_id)\n\n                    OR               Fisher p                 -95%CI \n    \"2.00059991005475\" \"1.21479676549559e-46\"     \"1.81968255413102\" \n                +95%CI                Overlap         Reference List \n    \"2.19910780950278\"                 \"1010\"                 \"2898\" \n            Input List             Background         % List Overlap \n                \"2679\"                \"10809\"                 \"34.9\" \n\n# 1411 isoform-switching genes without even nominally significant evidence of DGE\nlength(intersect(tableS3$gene_id[tableS3$DTU_qval<.05], DGE_results$gene_id[DGE_results$pvalue>.05]))\n\n[1] 1411\n\nFig3c = ggVennDiagram(list(DTU = which(gene_overlaps$DTU), \n                                  DGE = which(gene_overlaps$DGE),\n                                  DTE = which(gene_overlaps$DTE))) + \n  scale_fill_gradient(low=\"grey\",high = \"red\")\nFig3c\n\n\n\nggsave(Fig3c, file=\"output/figures/Fig3/Fig3c.pdf\",width=8,height=5)"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#switch-analysis-part-2-functional-consequences",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#switch-analysis-part-2-functional-consequences",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Switch analysis part 2 (functional consequences)",
    "text": "Switch analysis part 2 (functional consequences)\nIUPred and SignalP are difficult to run. Non-webserver IUPred2A/3 only takes a single sequence at a time, so requires a wrapper. Although “V5 is supported” for SignalP (I guess through the webserver?) v5.0 and v6.0 no longer seem to produce the expected output (-f summary) of v4.1.\nCurrently, trying to import from the webtools_v3 crashes R.\n\nrdata_path  = \"data/working/talonSwitchList_part2.rds\"\nif (!file.exists(rdata_path)) {\n  talonSwitchList_part2 <- isoformSwitchAnalysisPart2(\n    switchAnalyzeRlist        = talonSwitchList_part1, \n    n                         = 10, # number of PDF plots to generate\n    removeNoncodinORFs        = FALSE,\n    pathToCPC2resultFile      = \"data/working/IsoformSwitchAnalyzeR_webtools_v4/result_cpc2.txt\",\n    pathToPFAMresultFile      = \"data/working/IsoformSwitchAnalyzeR_webtools_v4/result_pfam_scan.txt\",\n    # might want to disable smoothing through `analyzeIUPred2A` since IUPred3 now\n    # performs smoothing:\n    pathToIUPred2AresultFile  = \"data/working/IsoformSwitchAnalyzeR_webtools_v4/result_iupred3.txt.gz\",\n    pathToSignalPresultFile   = \"data/working/IsoformSwitchAnalyzeR_webtools_v4/result_signalP.txt\",\n    pathToOutput              = \"output/IsoformSwitchAnalyzeR/\",\n    outputPlots               = T\n  )\n  # todo - split this into individual functions because `analyzeSwitchConsequences`\n  # is still filtering on dIF in addition to qval\n  \n  talonSwitchList_part2 <- analyzeSwitchConsequences(talonSwitchList_part2, onlySigIsoforms = T, dIFcutoff = 0, consequencesToAnalyze = c('tss','tts','last_exon','isoform_length','exon_number','intron_structure','ORF_length', '5_utr_seq_similarity', '5_utr_length', '3_utr_seq_similarity', '3_utr_length','coding_potential','ORF_seq_similarity','NMD_status','domains_identified','signal_peptide_identified'))\n  \n  \n  saveRDS(talonSwitchList_part2, file=rdata_path)\n} else {\n  talonSwitchList_part2 = readRDS(rdata_path)\n}\n\nPlot a gene:\n\npdf(file=\"output/figures/Fig3/Fig3_SMARCC2.pdf\", height=4, width=8)\nswitchPlot(\n  talonSwitchList_part2,dIFcutoff = .1,logYaxis = TRUE,\n  gene='SMARCC2'\n)\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\ndev.off()\n\nquartz_off_screen \n                2 \n\npdf(file=\"output/figures/Fig4/FigS4_NF1.pdf\", height=4, width=6)\nswitchPlot(\n  talonSwitchList_part2,dIFcutoff = .1,logYaxis = TRUE,\n  gene='NF1'\n)\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\ndev.off()\n\nquartz_off_screen \n                2 \n\nswitchPlot(\n  talonSwitchList_part2,\n  gene='TALONG000088362'\n)\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#functional-analysis-of-isoform-switches",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#functional-analysis-of-isoform-switches",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Functional Analysis of Isoform Switches:",
    "text": "Functional Analysis of Isoform Switches:\n\npdf(file='output/figures/Fig3/Fig3e.pdf', width=7,height=5)\nswitch_consequences <- extractConsequenceEnrichment(\n    talonSwitchList_part2,dIFcutoff = 0,countGenes = F,\n    returnResult = T # if TRUE returns a data.frame with the summary statistics\n)\ndev.off()\n\nquartz_off_screen \n                2 \n\nwrite_tsv(switch_consequences, file=\"output/tables/TableS3_switchConsequences_summary_v2.tsv\")\nwrite_tsv(talonSwitchList_part2$switchConsequence, file=\"output/tables/TableS3_switchConsequences_data.tsv\")\n\nconsequence = extractConsequenceSummary(\n    talonSwitchList_part2, includeCombined = T,\n    dIFcutoff=0, returnResult = T)\n\n\n\nextractSplicingEnrichment(\n    talonSwitchList_part2,dIFcutoff = 0,onlySigIsoforms = T,\n    countGenes = F,\n    returnResult = TRUE # if TRUE returns a data.frame with the summary statistics\n)\n\n\n\n\n  condition_1 condition_2                            AStype nUp nDown    propUp\n1          VZ          CP     A3 gain (paired with A3 loss) 603   472 0.5609302\n2          VZ          CP     A5 gain (paired with A5 loss) 526   466 0.5302419\n3          VZ          CP ATSS gain (paired with ATSS loss) 868   679 0.5610860\n4          VZ          CP ATTS gain (paired with ATTS loss) 690   544 0.5591572\n5          VZ          CP               ES (paired with EI) 776  1153 0.4022810\n6          VZ          CP     IR gain (paired with IR loss) 266   265 0.5009416\n7          VZ          CP   MEE gain (paired with MEE loss)   4     3 0.5714286\n8          VZ          CP             MES (paired with MEI) 364   587 0.3827550\n  propUpCiLo propUpCiHi   propUpPval   propUpQval Significant Comparison\n1  0.5306659  0.5908602 7.202013e-05 1.152322e-04        TRUE VZ\\nvs\\nCP\n2  0.4986297  0.5616742 6.097909e-02 8.130545e-02       FALSE VZ\\nvs\\nCP\n3  0.5359374  0.5860023 1.705724e-06 4.548597e-06        TRUE VZ\\nvs\\nCP\n4  0.5309374  0.5870945 3.592843e-05 7.185686e-05        TRUE VZ\\nvs\\nCP\n5  0.3803020  0.4245576 8.845503e-18 7.076402e-17        TRUE VZ\\nvs\\nCP\n6  0.4575691  0.5443036 1.000000e+00 1.000000e+00       FALSE VZ\\nvs\\nCP\n7  0.1840516  0.9010117 1.000000e+00 1.000000e+00       FALSE VZ\\nvs\\nCP\n8  0.3517411  0.4144974 4.775090e-13 1.910036e-12        TRUE VZ\\nvs\\nCP\n\nextractSplicingSummary(talonSwitchList_part2,\n                       splicingToAnalyze = 'all',dIFcutoff = 0,\n                       onlySigIsoforms = T,asFractionTotal = F)\n\n\n\n\n\nAlternative TSS isoform switches\n\nTSS_switches =talonSwitchList_part2$switchConsequence %>% as_tibble() %>% \n  filter(featureCompared == 'tss', isoformsDifferent==TRUE) %>% \n  dplyr::select(gene_name, isoformUpregulated, isoformDownregulated) %>%\n  left_join(talonSwitchList_part2$isoformFeatures %>% dplyr::select(isoformUpregulated=isoform_id, dIF, isoform_switch_q_value)) \n\nJoining, by = \"isoformUpregulated\"\n\n# Top 10 TSS switches by isoform fraction\nTSS_switches%>% arrange(-abs(dIF))\n\n# A tibble: 2,452 × 5\n   gene_name isoformUpregulated   isoformDownregulated   dIF isoform_switch_q_…¹\n   <chr>     <chr>                <chr>                <dbl>               <dbl>\n 1 S100A16   ENST00000368705.2_2  ENST00000368706.9_3  0.811            5.86e- 3\n 2 CPVL      TALONT000753261      ENST00000265394.10_3 0.769            7.02e-16\n 3 ZNF358    ENST00000596712.1_3  ENST00000597229.2_2  0.766            7.57e- 4\n 4 PLAUR     ENST00000340093.8_5  TALONT000368020      0.697            5.55e- 8\n 5 ELMO1     ENST00000396045.7_2  ENST00000310758.8_2  0.654            1.67e-39\n 6 ELMO1     ENST00000396045.7_2  ENST00000448602.5_2  0.654            1.67e-39\n 7 ELMO1     ENST00000396045.7_2  TALONT000761865      0.654            1.67e-39\n 8 BIN1      ENST00000316724.10_4 ENST00000348750.8_3  0.624            1.51e- 5\n 9 BIN1      ENST00000316724.10_4 ENST00000393040.7_3  0.624            1.51e- 5\n10 BIN1      ENST00000316724.10_4 ENST00000409400.1_4  0.624            1.51e- 5\n# … with 2,442 more rows, and abbreviated variable name ¹​isoform_switch_q_value\n\nfor(top_genes in TSS_switches %>% arrange(-abs(dIF)) %>% dplyr::select(gene_name) %>% \n    unique() %>% head(10) %>% pull()) {\nswitchPlot(\n  talonSwitchList_part2,\n  gene=top_genes)\n\n}\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n# Top 10 TSS switches by q-value\nTSS_switches%>% arrange(isoform_switch_q_value)\n\n# A tibble: 2,452 × 5\n   gene_name isoformUpregulated   isoformDownregulated   dIF isoform_switch_q_…¹\n   <chr>     <chr>                <chr>                <dbl>               <dbl>\n 1 CTNNA1    ENST00000540387.5_1  ENST00000302763.12_2 0.197            1.04e-83\n 2 PKM       TALONT000323027      TALONT000323086      0.453            9.72e-73\n 3 TPM1      ENST00000334895.10_2 ENST00000358278.7_3  0.475            4.54e-65\n 4 TPM1      ENST00000334895.10_2 ENST00000558868.5_1  0.475            4.54e-65\n 5 TPM1      ENST00000334895.10_2 ENST00000560959.5_1  0.475            4.54e-65\n 6 KIF2A     ENST00000407818.7_2  ENST00000401507.7_2  0.276            1.96e-54\n 7 KIF2A     ENST00000407818.7_2  TALONT000664196      0.276            1.96e-54\n 8 ABAT      ENST00000396600.6_1  ENST00000268251.13_2 0.317            4.11e-51\n 9 ABAT      ENST00000396600.6_1  ENST00000425191.6_1  0.317            4.11e-51\n10 ABAT      ENST00000396600.6_1  TALONT000412117      0.317            4.11e-51\n# … with 2,442 more rows, and abbreviated variable name ¹​isoform_switch_q_value\n\nfor(top_genes in TSS_switches %>% arrange(isoform_switch_q_value) %>% dplyr::select(gene_name) %>% \n    unique() %>% head(10) %>% pull()) {\nswitchPlot(\n  talonSwitchList_part2,\n  gene=top_genes)\n}\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\nwrite_tsv(TSS_switches, file=\"output/tables/TableS3_tss_switches.tsv\")"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#plot-interesting-disease-genes",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#plot-interesting-disease-genes",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Plot interesting disease genes",
    "text": "Plot interesting disease genes\n\npdf_path = \"output/figures/switch_plots/switch_plots_diseaseGenes.pdf\"\nif(!file.exists(pdf_path)) {\n  disease_genes = read.csv('ref/ASD+SCZ+DDD_2022.csv')\n  interesting_genes = extractTopSwitches(talonSwitchList_part2, filterForConsequences = T, n = Inf)\n  interesting_genes = interesting_genes$gene_name\n  interesting_genes = interesting_genes[interesting_genes %in% disease_genes$Gene]\n\n  pdf(file=pdf_path)\n  for(this_gene in interesting_genes) {\n  switchPlot(\n    talonSwitchList_part2,\n    gene=this_gene\n  )\n    print(this_gene)\n  }\n  dev.off()\n}"
  },
  {
    "objectID": "analysis/Figure3_IsoformSwitchAnalyzeR.html#plot-genes-with-top-switching-novel-isoforms",
    "href": "analysis/Figure3_IsoformSwitchAnalyzeR.html#plot-genes-with-top-switching-novel-isoforms",
    "title": "Figure 3 - IsoformSwitchAnalyzeR",
    "section": "Plot genes with top switching novel isoforms",
    "text": "Plot genes with top switching novel isoforms\n\npdf_path = \"output/figures/switch_plots/Fig3_switch_plots_novelIsoforms.pdf\"\nif(!file.exists(pdf_path)) {\n  disease_genes = read.csv('ref/ASD+SCZ+DDD_2022.csv')\n  switches = talonSwitchList_part2$isoformFeatures %>% left_join(cts %>% dplyr::select(isoform_id=transcript_id, novelty=novelty2))\n  interesting_genes <- switches %>% filter(novelty!=\"Known\" & isoform_switch_q_value < 10e-15 ) %>% dplyr::arrange(isoform_switch_q_value) %>% dplyr::select(gene_name) %>% pull() %>% unique()\n  \n  interesting_genes = unique(c(interesting_genes[1:10], interesting_genes[interesting_genes%in% disease_genes$Gene]))\n  interesting_genes\n  \n  pdf(file = pdf_path)\n    for(this_gene in interesting_genes) {\n    switchPlot(\n      talonSwitchList_part2,\n      gene=this_gene\n    )\n      print(this_gene)\n    }\n  dev.off()\n}\n\nthis is a disgusting hack\n\nstrp <- function(x) str_extract(x, \"^[^\\\\.]*\")\n\nstrippedSwitchList = function(switchList) {\n  switchList$isoformFeatures$isoform_id <- strp(switchList$isoformFeatures$isoform_id)\n  switchList[[\"exons\"]]@elementMetadata@listData[[\"isoform_id\"]] <- strp(switchList[[\"exons\"]]@elementMetadata@listData[[\"isoform_id\"]])\n  switchList$isoformCountMatrix$isoform_id <- strp(switchList$isoformCountMatrix$isoform_id)\n  switchList$isoformRepExpression$isoform_id <- strp(switchList$isoformRepExpression$isoform_id)\n  switchList$orfAnalysis$isoform_id <- strp(switchList$orfAnalysis$isoform_id)\n  switchList$isoformSwitchAnalysis$isoform_id <- strp(switchList$isoformSwitchAnalysis$isoform_id)\n  switchList$domainAnalysis$isoform_id <- strp(switchList$domainAnalysis$isoform_id)\n  switchList$idrAnalysis$isoform_id <- strp(switchList$idrAnalysis$isoform_id)\n  switchList$signalPeptideAnalysis$isoform_id <- strp(switchList$signalPeptideAnalysis$isoform_id)\n  switchList$AlternativeSplicingAnalysis$isoform_id <- strp(switchList$AlternativeSplicingAnalysis$isoform_id)\n  \n  switchList$switchConsequence$isoformUpregulated <- strp(switchList$switchConsequence$isoformUpregulated)\n  switchList$switchConsequence$isoformDownregulated <- strp(switchList$switchConsequence$isoformDownregulated)\n  return(switchList)\n}\n\ntalonSwitchList_part2_strp = strippedSwitchList(talonSwitchList_part2)\n\n\ntheme_set(theme_gray(base_size = 18))\ntheme_update(\n  axis.text = element_text(color=\"black\"),\n  plot.title = element_text(size = rel(1), hjust = 0.5)\n)\n\nexport at 8 x 6in\n\nswitchPlot(talonSwitchList_part2_strp, gene = \"KMT2E\")\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n\n\n\n\nswitchPlot(talonSwitchList_part2_strp, gene = \"UBE3A\")\n\nWarning: `guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead.\n`guides(<scale> = FALSE)` is deprecated. Please use `guides(<scale> = \"none\")` instead."
  },
  {
    "objectID": "analysis/Figure3_DTU_enrichments.html",
    "href": "analysis/Figure3_DTU_enrichments.html",
    "title": "Figure 3 - DTU enrichments",
    "section": "",
    "text": "suppressPackageStartupMessages({\n  library(tidyverse)\n  library(rtracklayer)\n  library(ggrepel)\n  library(biomaRt)\n})\nknitr::opts_chunk$set(fig.width=12, fig.height=8) \n\nsource(\"code/fisher_overlap.R\")\n\ntableS3.isoform <- read_tsv(\"output/tables/TableS3_v3.tsv.gz\")\n\nRows: 102319 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (5): isoform_id, gene_id, gene_name, condition_1, condition_2\ndbl (9): DTU_dIF, DTU_pval, DTU_qval, DTE_log2FC, DTE_pval, DTE_qval, DGE_lo...\nlgl (3): DTU, DTE, DGE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntableS3.isoform$ensg = substr(tableS3.isoform$gene_id,1,15)\ntableS3.gene <- read_tsv(\"output/tables/TableS3b_geneLevel.tsv.gz\")\n\nRows: 10809 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_name, gene_id\ndbl (6): DTU_qval_min, DTU_pval_min, DTE_qval_min, DTE_pval_min, DGE_pval, D...\nlgl (3): DTU, DTE, DGE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ncts = read_table(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  .default = col_double(),\n  annot_gene_id = col_character(),\n  annot_transcript_id = col_character(),\n  annot_gene_name = col_character(),\n  annot_transcript_name = col_character(),\n  gene_novelty = col_character(),\n  transcript_novelty = col_character(),\n  ISM_subtype = col_character()\n)\nℹ Use `spec()` for the full column specifications.\n\ngeneAnno = rtracklayer::import(\"ref/gencode.v33lift37.annotation.gtf.gz\") %>% as_tibble() %>% filter(type=='gene')\ngeneAnno$ensg = substr(geneAnno$gene_id,1,15)\n\ndatAnno = tableS3.isoform %>% mutate(ensg = substr(gene_id,1,15))\ndatAnno <- datAnno %>% left_join(cts %>% dplyr::select(isoform_id = annot_transcript_id, length))\n\nJoining, by = \"isoform_id\"\n\ngeneSetsForLDSC = data.frame(ensg = unique(datAnno$ensg), set= \"background\")\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTU\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTU ==TRUE])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTU.up\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTU ==TRUE &\n                                                                      tableS3.isoform$DTU_dIF > 0])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTU.down\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTU ==TRUE &\n                                                                      tableS3.isoform$DTU_dIF < 0])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTU.not.DGE\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTU ==TRUE &\n                                                                      tableS3.isoform$DGE == FALSE])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTU.not.DTE\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTU ==TRUE &\n                                                                      tableS3.isoform$DTE == FALSE])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTE\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTE ==TRUE])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTE.up\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTE ==TRUE &\n                                                                      tableS3.isoform$DTE_log2FC > 0])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DTE.down\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DTE ==TRUE &\n                                                                      tableS3.isoform$DTE_log2FC < 0])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DGE\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DGE ==TRUE])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DGE.up\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DGE ==TRUE &\n                                                                      tableS3.isoform$DGE_log2FC > 0])))\ngeneSetsForLDSC = rbind(geneSetsForLDSC, data.frame(set = \"DGE.down\", \n                                   ensg = unique(tableS3.isoform$ensg[tableS3.isoform$DGE ==TRUE &\n                                                                      tableS3.isoform$DGE_log2FC < 0])))\n\nwrite_tsv(geneSetsForLDSC, file='output/tables/TableS3_DTU_DGE_DTE_forLDSC.tsv')\n\ngeneSetsForLDSC$gene = datAnno$gene_name[match(geneSetsForLDSC$ensg, datAnno$ensg)]\nwrite_tsv(geneSetsForLDSC[,c(\"gene\", \"set\")], file='output/tables/TableS3_DTU_DGE_DTE_forTransite.tsv')"
  },
  {
    "objectID": "analysis/Figure3_DTU_enrichments.html#fig3d-dtu-pathway",
    "href": "analysis/Figure3_DTU_enrichments.html#fig3d-dtu-pathway",
    "title": "Figure 3 - DTU enrichments",
    "section": "Fig3d: DTU pathway",
    "text": "Fig3d: DTU pathway\n\nDTU <- tableS3.gene %>% filter(DTU==T) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDTU.bg = tableS3.isoform%>% dplyr::select(gene_id)%>% unique() %>% pull() %>% substr(0,15)\n\n## Pathway analysis with gProfileR\n## Note: ordered query here because genes are ranked by DTU significance. Usually this will be F\n## Always use the matching background gene set\npath = gprofiler2::gost(query=DTU,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = DTU.bg, sources = c(\"GO\",\"KEGG\", \"REACTOME\"))\n\nDetected custom background input, domain scope is set to 'custom'\n\n## Filter results for terms between 5-3000 genes. Also here I remove results where a child GO term is also included, just because there were a lot of results. Can remove this \ndf_path = as_tibble(path$result) %>% filter(term_size < 3000, path$result$term_size>5) \ndf_path <- df_path %>% filter(!term_id %in% unlist(df_path$parents))\n\n## Plot top 5 results per database\nFig3d <- df_path %>% group_by(source) %>% slice_min(p_value,n=5,with_ties = T) %>% ungroup() %>%\n  ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity',position=position_identity()) + coord_flip() + theme_bw() + labs(x=\"\")  + \n  facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')\nFig3d\n\n\n\n#ggsave(Fig3d, file=\"output/figures/Fig3d.pdf\",width=4.5,height=3)\n\n\nDTU.up and DTU.down\n\nDTU.up <- tableS3.isoform %>%  filter(DTU_dIF > 0, DTU_qval < .05)  %>% arrange(DTU_qval) %>% \n  dplyr::select(gene_id)%>% unique() %>% pull() %>% substr(0,15) \n\nDTU.down <- tableS3.isoform %>%  filter(DTU_dIF < 0, DTU_qval < .05)  %>% arrange(DTU_qval) %>% \n  dplyr::select(gene_id)%>% unique() %>% pull() %>% substr(0,15)\n\nDTU.bg = tableS3.isoform  %>% arrange(DTU_qval) %>% dplyr::select(gene_id)%>% unique() %>% pull() %>% substr(0,15)\n\n## Pathway analysis with gProfileR\n## Note: ordered query here because genes are ranked by DTU significance. Usually this will be F\n## Always use the matching background gene set\npath.up = gprofiler2::gost(query=DTU.up,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = DTU.bg, sources = c(\"GO\",\"KEGG\", \"REACTOME\", \"CORUM\", \"WP\"))\n\nDetected custom background input, domain scope is set to 'custom'\n\n## Filter results for terms between 5-3000 genes. Also here I remove results where a child GO term is also included, just because there were a lot of results. Can remove this \ndf_path.up = as_tibble(path.up$result) %>% filter(term_size < 3000, term_size>5) %>% mutate(direction='up')\ndf_path.up <- df_path.up %>% filter(!term_id %in% unlist(df_path.up$parents))\n\n## Plot top 5 results per database\nFig3d.up <- df_path.up %>% group_by(source) %>% slice_min(p_value,n=8) %>% ungroup() %>%\n  ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity', position=position_identity()) + coord_flip() + theme_bw() + labs(x=\"\")  + ggtitle(\"DTU.up\") +\n  facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')\n\n\npath.down = gprofiler2::gost(query=DTU.down,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = DTU.bg, sources = c(\"GO\",\"KEGG\", \"REACTOME\"))\n\nDetected custom background input, domain scope is set to 'custom'\n\n## Filter results for terms between 5-3000 genes. Also here I remove results where a child GO term is also included, just because there were a lot of results. Can remove this \ndf_path.down = as_tibble(path.down$result) %>% filter(term_size < 3000, term_size>5)  %>% mutate(direction='down')\ndf_path.down <- df_path.down %>% filter(!term_id %in% unlist(df_path$parents))\n\n## Plot top 5 results per database\nFig3d.down <- df_path.down %>% group_by(source) %>% slice_min(p_value,n=8) %>% ungroup() %>%\n  ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity', position=position_identity()) + coord_flip() + theme_bw() + labs(x=\"\")  + ggtitle(\"DTU.down\") +\n  facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')\n\ncowplot::plot_grid(Fig3d.down, Fig3d.up,ncol=2)\n\n\n\n\n\n\nDTU all pathways\n\nDTU <- tableS3.gene %>% filter(DTU==T) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDTU.bg = tableS3.gene%>% dplyr::select(gene_id)%>% pull() %>% substr(0,15)\npath = gprofiler2::gost(query=DTU,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = DTU.bg)\n\nDetected custom background input, domain scope is set to 'custom'\n\ndf_path = as_tibble(path$result) %>% filter(term_size < 3000, path$result$term_size>5) \ndf_path <- df_path %>% filter(!term_id %in% unlist(df_path$parents))\n\ndf_path %>% group_by(source) %>% slice_min(p_value,n=5,with_ties = F) %>% ungroup() %>%\n  ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity', position=position_identity()) + coord_flip() + theme_bw() + labs(x=\"\")  + \n  facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')\n\n\n\n\n\n\nAlso: DTU not DGE pathway\n\nDTU <- tableS3.gene %>% filter(DTU==T, DGE_pval>.05) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDTU.bg = tableS3.gene%>% dplyr::select(gene_id)%>% pull() %>% substr(0,15)\npath = gprofiler2::gost(query=DTU,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = DTU.bg)\n\nDetected custom background input, domain scope is set to 'custom'\n\ndf_path = as_tibble(path$result) %>% filter(term_size < 3000, path$result$term_size>5) \ndf_path <- df_path %>% filter(!term_id %in% unlist(df_path$parents))\n\ndf_path %>% group_by(source) %>% slice_min(p_value,n=30) %>% ungroup() %>%\n  ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity') + coord_flip() + theme_bw() + labs(x=\"\")  + \n  facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')"
  },
  {
    "objectID": "analysis/Figure3_DTU_enrichments.html#ewce",
    "href": "analysis/Figure3_DTU_enrichments.html#ewce",
    "title": "Figure 3 - DTU enrichments",
    "section": "EWCE",
    "text": "EWCE\nUsing fisher ORA instead\n\nif(FALSE) {\n  load(\"ref/EWCE/CellTypeData_DamonNeuralFetalOnly.rda\")\n  DTU.up <- tableS3.isoform %>%  filter(DTU_dIF > 0, DTU_qval < .05)  %>% arrange(DTU_qval) %>% \n    dplyr::select(gene_name)%>% unique() %>% pull() %>% substr(0,15) \n  DTU.down <- tableS3.isoform %>%  filter(DTU_dIF < 0, DTU_qval < .05)  %>% arrange(DTU_qval) %>% \n    dplyr::select(gene_name)%>% unique() %>% pull() %>% substr(0,15)\n  DTU = unique(c(DTU.up, DTU.down))\n  DTU.notDGE <- tableS3.gene %>% filter(DTU==T, DGE_pval>.05) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_name) %>% pull() %>% substr(0,15)\n  DTU.bg = tableS3.isoform  %>% arrange(DTU_qval) %>% dplyr::select(gene_name)%>% unique() %>% pull() \n  \n  gene_sets = list(DTU,DTU.notDGE)\n  names(gene_sets) = c(\"DTU\", \"DTU.notDGE\")\n  df_ewce = data.frame()\n  \n  for(i in 1:length(gene_sets)) {\n    print(i)\n    these_genes = gene_sets[[i]]\n    \n    res=EWCE::bootstrap_enrichment_test(ctd, hits = these_genes, bg=DTU.bg,\n                                        genelistSpecies = 'human',sctSpecies = 'human',\n                                        annotLevel =2,verbose = F,no_cores = 10)\n    df_ewce = rbind(df_ewce,data.frame(list=names(gene_sets)[i], res$results))\n  }\n  \n  \n  df_ewce$label = signif(-log10(df_ewce$q+1e-5),2)\n  df_ewce$label[df_ewce$q>.05] = \"\"\n  ggplot(df_ewce, aes(x=factor(list),y=CellType, label=label, fill=(sd_from_mean))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text() + theme(axis.text.x = element_text(angle=-45,hjust=0)) + scale_fill_gradient2()\n\n}"
  },
  {
    "objectID": "analysis/Figure3_DTU_enrichments.html#cell-type-makers",
    "href": "analysis/Figure3_DTU_enrichments.html#cell-type-makers",
    "title": "Figure 3 - DTU enrichments",
    "section": "Cell-type makers",
    "text": "Cell-type makers\n\n# Load poliodakis et al markers (Table S4)\n# see: https://doi.org/10.1016/j.neuron.2019.06.011\ncelltypemarkers <- openxlsx::read.xlsx('https://www.cell.com/cms/10.1016/j.neuron.2019.06.011/attachment/508ae008-b926-487a-b871-844a12acc1f8/mmc5', sheet='Cluster enriched genes') %>% as_tibble()\ncelltypemarkers.tableS5 = openxlsx::read.xlsx('https://www.cell.com/cms/10.1016/j.neuron.2019.06.011/attachment/ec1863fa-0dfc-405c-928c-c5ca96115667/mmc6', sheet='Sub-cluster enriched genes') %>% as_tibble()\ncelltypemarkers.bg = read.csv(\"ref/polioudakis_neuron2020/single_cell_background_MJG221228.csv\")\ncelltypemarkers.bg = unique(celltypemarkers.bg$ensembl_gene_id)\n\nDTU <- tableS3.gene %>% filter(DTU==T) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDTE <- tableS3.gene %>% filter(DTE==T) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDTU_notDGE <- tableS3.gene %>% filter(DTU==T, DGE_pval>.05) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDGE <- tableS3.gene %>% filter(DGE==T) %>% arrange(DTU_qval_min) %>% dplyr::select(gene_id) %>% pull() %>% substr(0,15)\nDTU_up <- tableS3.isoform %>% filter(DTU==T,DTU_dIF>0) %>% arrange(DTU_qval) %>% dplyr::select(gene_id) %>% unique() %>% pull() %>% substr(0,15)\nDTU_down <- tableS3.isoform %>% filter(DTU==T,DTU_dIF<0) %>% arrange(DTU_qval) %>% dplyr::select(gene_id) %>% unique() %>% pull() %>% substr(0,15)\n\nDTU.bg = tableS3.gene%>% dplyr::select(gene_id)%>% pull() %>% substr(0,15)\n\n\n  df_fisher = data.frame()\n  \n  for(this_cell in unique(celltypemarkers$Cluster)) {\n    marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n    enrichment = ORA(DTU, marker_genes, DTU.bg, celltypemarkers.bg)\n    df_fisher = rbind(df_fisher, data.frame(set=\"DTU\", cell=this_cell, as.data.frame(t(enrichment))))\n    \n    enrichment2 = ORA(DTU_notDGE, marker_genes, DTU.bg, celltypemarkers.bg)\n    df_fisher = rbind(df_fisher, data.frame(set=\"DTU-not-DGE\", cell=this_cell, as.data.frame(t(enrichment2))))\n    \n     enrichment3 = ORA(DGE, marker_genes, DTU.bg, celltypemarkers.bg)\n     df_fisher = rbind(df_fisher, data.frame(set=\"DGE\", cell=this_cell, as.data.frame(t(enrichment3))))\n\n     enrichment4 = ORA(DTE, marker_genes, DTU.bg, celltypemarkers.bg)\n     df_fisher = rbind(df_fisher, data.frame(set=\"DTE\", cell=this_cell, as.data.frame(t(enrichment4))))\n    # \n    # enrichment5 = ORA(DTU_down, marker_genes, DTU.bg, celltypemarkers.bg)\n    # df_fisher = rbind(df_fisher, data.frame(set=\"DTU_down\", cell=this_cell, as.data.frame(t(enrichment5))))\n  }\n  \n  df_fisher$Fisher.p = p.adjust(as.numeric(df_fisher$Fisher.p),'fdr')\n  df_fisher$OR = as.numeric(df_fisher$OR)\n  \n  df_fisher$CellClass = \"Other\"\n  df_fisher$CellClass[grep(\"Ex\",df_fisher$cell)] = \"Excitatory Neurons\"\n  df_fisher$CellClass[grep(\"In\",df_fisher$cell)] = \"Interneurons\"\n  df_fisher$CellClass[df_fisher$cell %in% c(\"vRG\", \"oRG\", \"IP\", \"PgS\", \"PgG2M\")] = \"Progenitors\"\n  \n  Fig3f=ggplot(df_fisher,aes(x=reorder(cell, -Fisher.p), y= -log10(Fisher.p), size=OR, color=-log10(Fisher.p))) +\n    geom_point() + coord_flip() + facet_grid(CellClass~set, scales = 'free', space='free_y') + theme_bw() +\n    geom_hline(yintercept = 1,lty=2,color='red') + labs(y='Enrichment (-log10 q-value)',x='')\n  Fig3f\n\n\n\n  ggsave(Fig3f, file=\"output/figures/Fig3/Fig3f.pdf\",width=5,height=4)\n  \n\nFig3f.2 = ggplot(df_fisher,aes(x=reorder(cell, -Fisher.p), y= -log10(Fisher.p), size=OR, color= set)) +\n    geom_point() + coord_flip() + facet_grid(CellClass~., scales = 'free', space='free_y') + theme_bw() +\n    geom_hline(yintercept = 1,lty=2,color='red') + labs(y='Enrichment (-log10 q-value)',x='')\n\nggsave(Fig3f.2, file=\"output/figures/Fig3/Fig3f_2.pdf\",width=4,height=6)"
  },
  {
    "objectID": "analysis/Figure3_DTU_enrichments.html#rare-variant-logit",
    "href": "analysis/Figure3_DTU_enrichments.html#rare-variant-logit",
    "title": "Figure 3 - DTU enrichments",
    "section": "Rare variant logit",
    "text": "Rare variant logit\n\nIsoform-level\nusing gene level results to be most comparable to DGE\n\nif(FALSE) {\n\n  \n  fu=openxlsx::read.xlsx(('https://static-content.springer.com/esm/art%3A10.1038%2Fs41588-022-01104-0/MediaObjects/41588_2022_1104_MOESM3_ESM.xlsx'),'Supplementary Table 11')\n  fu$p_TADA_ASD[fu$p_TADA_ASD==0] = min(fu$p_TADA_ASD[fu$p_TADA_ASD >0],na.rm=T)\n  fu$p_TADA_NDD[fu$p_TADA_NDD==0] = min(fu$p_TADA_NDD[fu$p_TADA_NDD >0],na.rm=T)\n  \n  datAnno.logit = data.frame(ASD_fuTADA= -log10(fu$p_TADA_ASD)[match(datAnno$ensg, fu$gene_id)])\n  datAnno.logit$NDD_fuTADA = -log10(fu$p_TADA_NDD)[match(datAnno$ensg, fu$gene_id)]\n  \n  SCZ.schema = read_tsv('ref/risk_genes/SCHEMA_gene_results.tsv')\n  datAnno.logit$SCZ_schema = -log10(SCZ.schema$`P meta`[match(datAnno$ensg, SCZ.schema$gene_id)])\n  \n  BIP.bipex = read_tsv('ref/risk_genes/BipEx_gene_results.tsv') %>% filter(group==\"Bipolar Disorder\")\n  datAnno.logit$BIP.bipex = -log10(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(datAnno$ensg,BIP.bipex$gene_id)])\n  \n  EPI.epi25 = read_tsv('ref/risk_genes/Epi25_gene_results.tsv')  %>% group_by(gene_id) %>% summarise(pval = min(pval))\n  datAnno.logit$EPI.epi25 = -log10(EPI.epi25$pval[match(datAnno$ensg,EPI.epi25$gene_id)])\n  \n  \n  df_logit= data.frame()\n  binaryVec = list(\"DTU\" = as.numeric(datAnno$DTU_qval<.05), \"DTE\" = as.numeric(datAnno$DTE_qval<.05),\n                   \"DTU_up\" = as.numeric(datAnno$DTU_qval<.05 & datAnno$DTU_dIF>0),\n                   \"DTU_down\" = as.numeric(datAnno$DTU_qval<.05 & datAnno$DTU_dIF<0),\n                   \"DTE_up\" = as.numeric(datAnno$DTE_qval<.05 & datAnno$DTE_log2FC>0),\n                   \"DTE_down\" = as.numeric(datAnno$DTE_qval<.05 & datAnno$DTE_log2FC<0),\n                   \"DTU_notDGE\" = as.numeric(datAnno$DTU_qval<.05 & datAnno$DGE_pval>0.05))\n      \n  for(i in 1:length(binaryVec)) {\n    for(this_rare_var in colnames(datAnno.logit)) {\n      this_glm = summary(glm(binaryVec[[i]] ~ datAnno.logit[,this_rare_var] + length + log10(length), data=datAnno, family='binomial'))\n      df_logit = rbind(df_logit, data.frame(feature = names(binaryVec)[[i]], set = this_rare_var, t(this_glm$coefficients[2,])))\n  }}\n      \n  df_logit$OR = exp(df_logit$Estimate)\n  df_logit$P = df_logit$Pr...z..\n  df_logit$P[df_logit$OR < 1] = 1\n  df_logit$Q = p.adjust(df_logit$P,'fdr')\n  df_logit$class = \"DGE\"\n  df_logit$class[grepl(\"DTE\", df_logit$feature)] = \"DTE\"\n  df_logit$class[grepl(\"DTU\", df_logit$feature)] = \"DTU\"\n  \n  \n  ggplot(df_logit, aes(x=reorder(set,-Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity') + \n    coord_flip() + geom_hline(yintercept = 1, lty=2,col='red') + labs(y=\"-log10(qvalue)\",x=\"\") + theme_bw() + facet_wrap(feature~.,ncol = 3)\n  \n  \n  g1 = ggplot(df_logit %>% filter(feature %in% c(\"DTU\", \"DTE\", \"DTU_notDGE\")), aes(x=reorder(set,-Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity') + \n    coord_flip() + geom_hline(yintercept = 1, lty=2,col='red') + labs(y=\"-log10(qvalue)\",x=\"\") + theme_bw() + facet_grid(feature~.)\n}\n\n\n\nGene-level\n\ntableS3.isoform$ensg = substr(tableS3.isoform$gene_id,1,15)\n\ndatAnno = tableS3.gene %>% mutate(ensg = substr(gene_id,1,15))\ndatAnno <- datAnno %>% left_join(geneAnno %>% dplyr::select(ensg, length=width))\n\nJoining, by = \"ensg\"\n\nfu=openxlsx::read.xlsx(('https://static-content.springer.com/esm/art%3A10.1038%2Fs41588-022-01104-0/MediaObjects/41588_2022_1104_MOESM3_ESM.xlsx'),'Supplementary Table 11')\nfu$p_TADA_ASD[fu$p_TADA_ASD==0] = min(fu$p_TADA_ASD[fu$p_TADA_ASD >0],na.rm=T)\nfu$p_TADA_NDD[fu$p_TADA_NDD==0] = min(fu$p_TADA_NDD[fu$p_TADA_NDD >0],na.rm=T)\n\ndatAnno.logit = data.frame(ASD_fuTADA= -log10(fu$p_TADA_ASD)[match(datAnno$ensg, fu$gene_id)])\ndatAnno.logit$NDD_fuTADA = -log10(fu$p_TADA_NDD)[match(datAnno$ensg, fu$gene_id)]\n\nSCZ.schema = read_tsv('ref/risk_genes/SCHEMA_gene_results.tsv')\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 18321 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (8): gene_id, group, OR (PTV), OR (Class I), OR (Class II), OR (PTV) up...\ndbl (16): Case PTV, Ctrl PTV, Case mis3, Ctrl mis3, Case mis2, Ctrl mis2, P ...\nlgl  (2): De novo mis3, De novo mis2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndatAnno.logit$SCZ_schema = -log10(SCZ.schema$`P meta`[match(datAnno$ensg, SCZ.schema$gene_id)])\n\nBIP.bipex = read_tsv('ref/risk_genes/BipEx_gene_results.tsv') %>% filter(group==\"Bipolar Disorder\")\n\nRows: 119958 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (4): gene_id, group, damaging_missense_fisher_gnom_non_psych_OR, ptv_fi...\ndbl (16): n_cases, n_controls, damaging_missense_case_count, damaging_missen...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndatAnno.logit$BIP.bipex = -log10(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(datAnno$ensg,BIP.bipex$gene_id)])\n\nEPI.epi25 = read_tsv('ref/risk_genes/Epi25_gene_results.tsv')  %>% group_by(gene_id) %>% summarise(pval = min(pval))\n\nRows: 71456 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_id, group\ndbl (9): xcase_lof, xctrl_lof, pval_lof, xcase_mpc, xctrl_mpc, pval_mpc, xca...\nlgl (1): pval_infrIndel\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndatAnno.logit$EPI.epi25 = -log10(EPI.epi25$pval[match(datAnno$ensg,EPI.epi25$gene_id)])\n\n\ndf_logit= data.frame()\nbinaryVec = list(\"DTU\" = as.numeric(datAnno$DTU), \"DTE\" = as.numeric(datAnno$DTE), \"DGE\"=as.numeric(datAnno$DGE),\n                 \"DTU-not-DGE\" = as.numeric(datAnno$DTU & !datAnno$DGE), \n                 \"DTU-not-DTE\" = as.numeric(datAnno$DTU & !datAnno$DTE),\n                 \"DTU.up\" = as.numeric(datAnno$ensg %in% (tableS3.isoform %>% filter(DTU, DTU_dIF>0) %>% dplyr::select(ensg) %>% pull())),\n                 \"DTU.down\" = as.numeric(datAnno$ensg %in% (tableS3.isoform %>% filter(DTU, DTU_dIF<0) %>% dplyr::select(ensg) %>% pull())),\n                 \"DTE.up\" = as.numeric(datAnno$ensg %in% (tableS3.isoform %>% filter(DTE, DTE_log2FC>0) %>% dplyr::select(ensg) %>% pull())),\n                 \"DTE.down\" = as.numeric(datAnno$ensg %in% (tableS3.isoform %>% filter(DTE, DTE_log2FC<0) %>% dplyr::select(ensg) %>% pull())),\n                 \"DGE.up\" = as.numeric(datAnno$ensg %in% (tableS3.isoform %>% filter(DGE, DGE_log2FC>0) %>% dplyr::select(ensg) %>% pull())),\n                 \"DGE.down\" = as.numeric(datAnno$ensg %in% (tableS3.isoform %>% filter(DGE, DGE_log2FC<0) %>% dplyr::select(ensg) %>% pull())))\n    \nfor(i in 1:length(binaryVec)) {\n  for(this_rare_var in colnames(datAnno.logit)) {\n    this_glm = summary(glm(datAnno.logit[,this_rare_var] ~ binaryVec[[i]] + length + log10(length), data=datAnno))\n    df_logit = rbind(df_logit, data.frame(feature = names(binaryVec)[[i]], set = this_rare_var, t(this_glm$coefficients[2,])))\n}}\n    \ndf_logit$OR = exp(df_logit$Estimate)\ndf_logit$P = df_logit$Pr...z..\ndf_logit$Q = p.adjust(df_logit$P,'fdr')\ndf_logit$class = \"DGE\"\ndf_logit$class[grepl(\"DTE\", df_logit$feature)] = \"DTE\"\ndf_logit$class[grepl(\"DTU\", df_logit$feature)] = \"DTU\"\n\nFig3H=ggplot(df_logit %>% filter(feature %in% c(\"DTE\", \"DGE\", \"DTU\", \"DTU-not-DGE\")), aes(x=reorder(set,-Q), y=-log10(Q), color=feature, alpha = OR > 1,size=OR)) +\n    geom_point() + coord_flip() + geom_hline(yintercept = -log10(.05), lty=2,col='red') +  \n  scale_alpha_manual(values = c(.5, 1))+\n    labs(y=\"-log10(qvalue)\",x=\"\") + theme_bw() + ggtitle('Gene level rare variant enrichment')\n\nFig3H\n\n\n\nggsave(Fig3H,file='output/figures/Fig3/Fig3H.pdf',width=5,height=2.5)\n\n\ndf_logit$class[grepl(\"-not-\", df_logit$feature)] = \"DTU-not-DGE/DTE\"\ndf_logit$feature = factor(df_logit$feature, levels=c(\"DGE\", \"DGE.down\", \"DGE.up\",\"DTE\", \"DTE.down\", \"DTE.up\",\"DTU\", \"DTU.down\", \"DTU.up\",\"DTU-not-DGE\", \"DTU-not-DTE\"))\n\nFigS4B=ggplot(df_logit, aes(x=reorder(set,-Q), y=-log10(Q), color=class, size=OR, alpha=OR>1)) + geom_point() + \n  coord_flip() + geom_hline(yintercept = -log10(.05), lty=2,col='red') + labs(y=\"-log10(qvalue)\",x=\"\") + theme_bw() + facet_wrap(feature~.,ncol = 3) + scale_alpha_manual(values = c(.5, 1))\nggsave(FigS4B,file='output/figures/supplement/FigS4B.pdf',width=7,height=5)\nFigS4B\n\n\n\n# ggplot(df_logit, aes(x=reorder(feature,-Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity') + \n#   coord_flip() + geom_hline(yintercept = -log10(.05), lty=2,col='red') + labs(y=\"-log10(qvalue)\",x=\"\") + theme_bw() +   facet_grid(set~.,scales = 'free')"
  },
  {
    "objectID": "analysis/Figure3_DTU_enrichments.html#rbp-enrichments",
    "href": "analysis/Figure3_DTU_enrichments.html#rbp-enrichments",
    "title": "Figure 3 - DTU enrichments",
    "section": "RBP Enrichments",
    "text": "RBP Enrichments\n\nCeline’s RBP Targets\n\nrbp_targets = read.csv(\"ref/RBPs/RBP_targets_v2.csv\")\nrbp_targets$regulation[is.na(rbp_targets$regulation)]=\"\"\n\n\nmart = useMart(\"ENSEMBL_MART_ENSEMBL\",\"mmusculus_gene_ensembl\")\nf = listFilters(mart); a = listAttributes(mart)\nfeaturesToGet = c(\"ensembl_gene_id\", \"external_gene_name\", \"hsapiens_homolog_ensembl_gene\", \"hsapiens_homolog_associated_gene_name\",\"hsapiens_homolog_orthology_type\")\nmouseHumanHomologs = getBM(attributes = featuresToGet,mart = mart)\n\nhuman_mouse_bg = mouseHumanHomologs %>% as_tibble() %>% filter(hsapiens_homolog_orthology_type == \"ortholog_one2one\") %>% dplyr::select(\"hsapiens_homolog_ensembl_gene\") %>% pull()\n\n\n\ngenesets = list(\"DTU\"= tableS3.gene %>% filter(DTU) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                  \"DTE\" = tableS3.gene %>% filter(DTE) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                  \"DGE\" = tableS3.gene %>% filter(DTE) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                  \"DTUnotDGE\" = tableS3.gene %>% filter(DTU,DGE_pval>.05) %>% mutate(gene_id = substr(gene_id,1,15)) %>% \n                    dplyr::select(gene_id) %>% pull())\nDTU.bg = tableS3.gene %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull() %>% unique()\n\ndf_fisher = data.frame()\nfor(i in 1:length(genesets)) {\n  for(this_dataset in unique(na.omit(rbp_targets$dataset))) {\n    this_rbp = rbp_targets %>% filter(dataset == this_dataset) %>% mutate(target = paste0(RBP, \"_\", data.type, \"_\", msORhs)) %>% dplyr::select(target) %>% unique()  %>% pull()\n    target_genes = rbp_targets %>% filter(dataset == this_dataset) %>% dplyr::select(ENSG) %>% pull()\n \n if(grepl(\"Human\",this_rbp)) {\n   this_or = ORA(genesets[[i]], target_genes, DTU.bg, DTU.bg)\n } else {\n  this_or = ORA(genesets[[i]], target_genes, DTU.bg, human_mouse_bg)\n }\n df_fisher = rbind(df_fisher, data.frame(set = names(genesets)[[i]], dataset = this_dataset, target = this_rbp, t(this_or)))\n  }\n}\n  df_fisher$OR = as.numeric(df_fisher$OR)\n  df_fisher$Fisher.p[df_fisher$OR<1] = 1\n  df_fisher$Fisher.p = p.adjust(as.numeric(df_fisher$Fisher.p),'fdr')\n  \n  df_fisher$target = factor(df_fisher$target, levels= df_fisher %>% filter(set==\"DTU\") %>%  group_by(target) %>% summarise(pmin = min(Fisher.p)) %>% arrange(pmin) %>% dplyr::select(target) %>% pull())\n  df_fisher$org = \"Mouse\"; df_fisher$org[grep(\"Human\",df_fisher$target)] = \"Human\"\n  df_fisher$data.type = rbp_targets$data.type[match(df_fisher$dataset, rbp_targets$dataset)]\n  df_fisher$cell.type = rbp_targets$cell.type[match(df_fisher$dataset, rbp_targets$dataset)]\n  df_fisher$label = signif(df_fisher$OR,1)\n  df_fisher$label[df_fisher$Fisher.p>.05] = ''\n  Fig3H.1=ggplot(df_fisher %>% filter(set==\"DTU\"),aes(x=target, y= -log10(Fisher.p), fill=OR)) +\n    geom_bar(stat='identity',position = position_dodge2()) + theme_bw() +\n    geom_hline(yintercept = 1,lty=2,color='red') + labs(y='Enrichment\\n(-log10 q-value)',x='') + theme(axis.text.x = element_text(angle=90,vjust = .5, hjust=1))\n  \n  ggplot(df_fisher,aes(x=target, y= set, fill=-log10(Fisher.p),label=label)) + geom_tile(color='grey60') + geom_text(size=2) + theme_bw() +\n     labs(y='',x='') + theme(axis.text.x = element_text(angle=90,vjust = .5, hjust=1)) + \n    scale_fill_gradient(low='white', high='red')\n\n\n\n    Fig3H.2=ggplot(df_fisher %>% filter(set==\"DTU\"),aes(x=target, label=cell.type)) + geom_tile(aes(y=factor(1),fill=data.type)) + geom_point(aes(y=factor(1), shape=cell.type),position=position_dodge2()) + scale_shape_manual(values = c(1:9)) + theme_bw() + theme(axis.text.x = element_blank()) + labs(x=\"\", y=\"\")\n  \n    pdf(file=\"output/figures/Fig3/Fig3H.pdf\",width = 8,height=5)\n    gridExtra::grid.arrange(grobs=list(Fig3H.1,Fig3H.2),layout_matrix=cbind(c(1,1,1,1,1,1,1,2)))\n\nWarning: Width not defined. Set with `position_dodge2(width = ?)`\n\n  dev.off()\n\nquartz_off_screen \n                2 \n\n  Fig3H_supplement=ggplot(df_fisher,aes(x=reorder(target, -Fisher.p), y= -log10(Fisher.p), fill=OR)) +\n    geom_bar(stat='identity',position = position_dodge2()) + coord_flip() + theme_bw() + facet_grid(~set) +\n    geom_hline(yintercept = 1,lty=2,color='red') + labs(y='Enrichment (-log10 q-value)',x='')\nFig3H_supplement\n\n\n\nggsave(Fig3H_supplement, file=\"output/figures/supplement/Fig3H_supp.pdf\",width = 8,height=5)\n\n\n\nRBP motif:\n\n# library(transite)\n# \n# library(biomaRt)\n# mart = useMart('ENSEMBL_MART_ENSEMBL', 'hsapiens_gene_ensembl',host = 'https://grch37.ensembl.org')\n# a=listAttributes(mart)\n# ensembl = getBM(attributes=c(\"ensembl_gene_id\", \"hgnc_symbol\",'refseq_mrna'),mart=mart)\n# \n# \n# out = run_kmer_tsma(foreground_sets = tableS3.gene$gene_name[tableS3.gene$DTU], background_set = tableS3.gene$gene_name)"
  },
  {
    "objectID": "analysis/Figure3_RBPEnrichments.html",
    "href": "analysis/Figure3_RBPEnrichments.html",
    "title": "Figure 3 - RBP Enrichments",
    "section": "",
    "text": "suppressPackageStartupMessages({\n    library(tidyverse)\n    library(rtracklayer)\n    library(ggrepel)\n    library(biomaRt)\n    library(readxl)\n    library(cowplot)\n    library(paletteer)\n})\n\nsource(\"code/fisher_overlap.R\")"
  },
  {
    "objectID": "analysis/Figure3_RBPEnrichments.html#load-data",
    "href": "analysis/Figure3_RBPEnrichments.html#load-data",
    "title": "Figure 3 - RBP Enrichments",
    "section": "Load Data",
    "text": "Load Data\n\ntableS3.gene <- read_tsv(\"output/tables/TableS3_v3.tsv.gz\")\n\nRows: 102319 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (5): isoform_id, gene_id, gene_name, condition_1, condition_2\ndbl (9): DTU_dIF, DTU_pval, DTU_qval, DTE_log2FC, DTE_pval, DTE_qval, DGE_lo...\nlgl (3): DTU, DTE, DGE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "analysis/Figure3_RBPEnrichments.html#rbp-enrichments",
    "href": "analysis/Figure3_RBPEnrichments.html#rbp-enrichments",
    "title": "Figure 3 - RBP Enrichments",
    "section": "RBP Enrichments",
    "text": "RBP Enrichments\n\nCeline’s RBP Targets\n\nbrainRBPs = read.csv(\"data/RBP_Data/CSVs/RBP_targets_v5.csv\", header=TRUE);\nbrainRBPs = dplyr::select(brainRBPs, -c(MGI.symbol, ENSMUSG))\nencodeRBPs = read.csv(\"data/RBP_Data/CSVs/RBP_targets_ENCODE.csv\", header=TRUE);\nencodeRBPs = encodeRBPs %>% filter(cell.type==\"HepG2\") %>% rename(\"hgnc_symbol\"=\"HGNC.symbol\", \"ensembl_gene_id\"=\"ENSG\")\n\nrbp_targets = rbind(brainRBPs,encodeRBPs)\n\nmart = useMart(\"ENSEMBL_MART_ENSEMBL\",\"mmusculus_gene_ensembl\")\nf = listFilters(mart); a = listAttributes(mart)\nfeaturesToGet = c(\"ensembl_gene_id\", \"external_gene_name\", \"hsapiens_homolog_ensembl_gene\", \"hsapiens_homolog_associated_gene_name\",\"hsapiens_homolog_orthology_type\")\nmouseHumanHomologs = getBM(attributes = featuresToGet,mart = mart)\n\nhuman_mouse_bg = mouseHumanHomologs %>% as_tibble() %>% filter(hsapiens_homolog_orthology_type == \"ortholog_one2one\") %>% dplyr::select(\"hsapiens_homolog_ensembl_gene\") %>% pull()\n\n\ngenesets = list(\"DTU\"= tableS3.gene %>% filter(DTU) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DTE\" = tableS3.gene %>% filter(DTE) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DGE\" = tableS3.gene %>% filter(DGE) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DTUnotDGE\" = tableS3.gene %>% filter(DTU,DGE_pval>.05) %>% mutate(gene_id = substr(gene_id,1,15)) %>%\n                  dplyr::select(gene_id) %>% pull())\n\nDTU.bg = tableS3.gene %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull() %>% unique()\n\ndf_fisher = data.frame()\nfor(i in 1:length(genesets)) {\n  for(this_dataset in unique(na.omit(rbp_targets$dataset.id))) {\n    this_rbp = rbp_targets %>% filter(dataset.id == this_dataset) %>% mutate(target = paste0(RBP, \"_\", data.type, \"_\", cell.type)) %>% dplyr::select(target) %>% unique()  %>% pull()\n    target_genes = rbp_targets %>% filter(dataset.id == this_dataset) %>% dplyr::select(ENSG) %>% pull()\n    \n    if(grepl(\"Human\",this_rbp)) {\n      this_or = ORA(genesets[[i]], target_genes, DTU.bg, DTU.bg)\n    } else {\n      this_or = ORA(genesets[[i]], target_genes, DTU.bg, human_mouse_bg)\n    }\n    df_fisher = rbind(df_fisher, data.frame(set = names(genesets)[[i]], dataset = this_dataset, target = this_rbp, t(this_or)))\n  }\n}\n\ndf_fisher$OR = as.numeric(df_fisher$OR)\ndf_fisher$Fisher.p[df_fisher$OR<1] = 1\ndf_fisher$Fisher.p = p.adjust(as.numeric(df_fisher$Fisher.p),'fdr')\n\norder.brainRBPs = read_excel(\"data/RBP_Data/curatedRBPs_order.xlsx\") %>% as_tibble()\norder.Encode.TarReg = read_excel(\"data/RBP_Data/ENCODE_vanNostrand_NatMeth2016_Fig2a_order.xlsx\", sheet=2);\norder.Encode.TarReg = order.Encode.TarReg %>% filter(name %in% df_fisher$target)\norder = rbind(order.brainRBPs, order.Encode.TarReg)\n\ndf_fisher$target = factor(df_fisher$target, levels=order$name)\ndf_fisher$org = \"Mouse\"; df_fisher$org[grep(\"Human\",df_fisher$target)] = \"Human\"\ndf_fisher$data.type = rbp_targets$data.type[match(df_fisher$dataset, rbp_targets$dataset.id)]\ndf_fisher$cell.type = rbp_targets$cell.type[match(df_fisher$dataset, rbp_targets$dataset.id)]\ndf_fisher$target.region = order$target.region[match(df_fisher$target, order$name)]\ndf_fisher$label = signif(df_fisher$OR,1)\ndf_fisher$label[df_fisher$Fisher.p>.05] = ''\n\n\nFigure 3H\n\nFig3H.1=ggplot(df_fisher %>% filter(set==\"DTU\"),aes(x=target, y= -log10(Fisher.p), fill=OR)) +\n  geom_bar(stat='identity',position = position_dodge2()) + theme_bw() +\n  geom_hline(yintercept = 1,lty='dashed',size=0.5,color='red') + labs(y='Enrichment\\n(-log10 q-value)',x='') + \n  theme(axis.text.x = element_blank(), axis.ticks.x=element_blank(), axis.text.y=element_text(size=5), axis.title.y=element_text(size=7), \n        legend.key.size=unit(0.3,'cm'), \n        legend.text=element_text(size=4), \n        legend.title=element_text(size=6), \n        plot.margin=unit(c(5,5,0,5),\"pt\"), legend.position=c(0.95,0.75), \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2))\nFig3H.2=ggplot(df_fisher %>% filter(set==\"DTU\"),aes(x=target, label=target.region)) + \n  geom_tile(aes(y=factor(1),fill=target.region)) + \n  geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  scale_x_discrete(labels=sapply(strsplit(levels(df_fisher$target), \"_\"), \"[[\",1)) +\n  theme_bw() +\n  theme(axis.text.y = element_blank(), \n        axis.ticks.y=element_blank(),\n        axis.text.x = element_text(angle=45,vjust=1, hjust=1, size=3), \n        legend.key.size=unit(0.25,'cm'), legend.text=element_text(size=3), legend.title=element_text(size=5), \n        plot.margin=unit(c(-20,5,5,5),\"pt\"), legend.position=c(0.5,-6.8), legend.box=\"horizontal\", legend.direction=\"horizontal\", \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  labs(x='', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1))\n\nplot_grid(Fig3H.1,Fig3H.2, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(5,1))\n\n\n\n\n\npdf(file=\"output/figures/Fig3/Fig3H.2_byTargetRegion.pdf\",width = 10,height=2.5)\nplot_grid(Fig3H.1,Fig3H.2, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(4,1))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigure S4B\n\nFigS4B.1 = ggplot(df_fisher,aes(x=factor(target, levels=rev(levels(target))), y= -log10(Fisher.p), fill=OR)) +\n  # scale_x_discrete(labels=df_fisher$RBP) +\n  geom_bar(stat='identity',position = position_dodge2()) + coord_flip() + theme_bw() + facet_grid(~set) +\n  geom_hline(yintercept = 1,lty=2,color='red') + labs(y='Enrichment (-log10 q-value)',x='') + \n  theme(axis.text.y = element_blank(), axis.ticks.y=element_blank(), axis.text.x=element_text(size=5), axis.title.x=element_text(size=7),\n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), axis.line=element_line(color=\"black\", size=0.2),\n        plot.margin=unit(c(5,5,5,-18),\"pt\"), \n        legend.text=element_text(size=5), legend.title=element_text(size=7), legend.key.size=unit(0.4,'cm'),\n        panel.spacing=unit(-0.1, \"lines\")) +\n  labs(x='', y='')\n\nFigS4B.2 = ggplot(df_fisher %>% filter(set==\"DTU\"),aes(x=factor(target, levels=rev(levels(target))), label=target.region)) + \n  # geom_tile(aes(y=factor(1),fill=data.type)) + \n  geom_tile(aes(y=factor(1),fill=target.region)) + \n  # geom_point(aes(y=factor(1), shape=target.region),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  # scale_x_discrete(labels=df_fisher$RBP) +\n  scale_x_discrete(labels=sapply(strsplit(rev(levels(df_fisher$target)), \"_\"), \"[[\",1)) +\n  theme_bw() +\n  theme(axis.text.x = element_blank(), \n        axis.ticks.x=element_blank(),\n        axis.text.y = element_text(angle=0,vjust=1, hjust=1, size=4),\n        legend.position=\"none\",\n        plot.margin=unit(c(5,0,5,5),\"pt\"), \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  labs(x='', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1)) +\n  coord_flip()\nlegend = get_legend(FigS4B.2 + theme(legend.position=c(2.7,0.8), legend.box=\"horizontal\", legend.direction=\"horizontal\", \n                                         legend.text=element_text(size=4), legend.title=element_text(size=5), legend.key.size=unit(0.25,'cm')))\n\nplot_grid(FigS4B.2,FigS4B.1, legend, align=\"h\", nrow=2, axis=\"bt\", rel_widths=c(1,4.5), rel_heights=c(10,1))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS4B_wEncode_byTargetRegion.pdf\", height=10, width=5)\nplot_grid(FigS4B.2,FigS4B.1, legend, align=\"h\", nrow=2, axis=\"bt\", rel_widths=c(1,4.5), rel_heights=c(10,1))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigureS4C\n\ngenesets = list(\"DTU.up\"= tableS3.gene %>% filter(DTU&DTU_dIF>0) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DTU.down\"= tableS3.gene %>% filter(DTU&DTU_dIF<0) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DTE.up\" = tableS3.gene %>% filter(DTE&DTE_log2FC>0) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DTE.down\" = tableS3.gene %>% filter(DTE&DTE_log2FC<0) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DGE.up\" = tableS3.gene %>% filter(DGE&DGE_log2FC>0) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull(),\n                \"DGE.down\" = tableS3.gene %>% filter(DGE&DGE_log2FC<0) %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull()\n                )\n\nDTU.bg = tableS3.gene %>% mutate(gene_id = substr(gene_id,1,15)) %>% dplyr::select(gene_id) %>% pull() %>% unique()\n\ndf_fisher = data.frame()\nfor(i in 1:length(genesets)) {\n  for(this_dataset in unique(na.omit(rbp_targets$dataset.id))) {\n    this_rbp = rbp_targets %>% filter(dataset.id == this_dataset) %>% mutate(target = paste0(RBP, \"_\", data.type, \"_\", cell.type)) %>% dplyr::select(target) %>% unique()  %>% pull()\n    target_genes = rbp_targets %>% filter(dataset.id == this_dataset) %>% dplyr::select(ENSG) %>% pull()\n    \n    if(grepl(\"Human\",this_rbp)) {\n      this_or = ORA(genesets[[i]], target_genes, DTU.bg, DTU.bg)\n    } else {\n      this_or = ORA(genesets[[i]], target_genes, DTU.bg, human_mouse_bg)\n    }\n    df_fisher = rbind(df_fisher, data.frame(set = names(genesets)[[i]], dataset = this_dataset, target = this_rbp, t(this_or)))\n  }\n}\n\ndf_fisher$OR = as.numeric(df_fisher$OR)\ndf_fisher$Fisher.p[df_fisher$OR<1] = 1\ndf_fisher$Fisher.p = p.adjust(as.numeric(df_fisher$Fisher.p),'fdr')\n\norder.brainRBPs = read_excel(\"data/RBP_Data/curatedRBPs_order.xlsx\") %>% as_tibble()\norder.Encode.TarReg = read_excel(\"data/RBP_Data/ENCODE_vanNostrand_NatMeth2016_Fig2a_order.xlsx\", sheet=2)\norder.Encode.TarReg = order.Encode.TarReg %>% filter(name %in% df_fisher$target)\norder = rbind(order.brainRBPs, order.Encode.TarReg)\n\ndf_fisher$target = factor(df_fisher$target, levels=order$name)\ndf_fisher$org = \"Mouse\"; df_fisher$org[grep(\"Human\",df_fisher$target)] = \"Human\"\ndf_fisher$data.type = rbp_targets$data.type[match(df_fisher$dataset, rbp_targets$dataset.id)]\ndf_fisher$cell.type = rbp_targets$cell.type[match(df_fisher$dataset, rbp_targets$dataset.id)]\ndf_fisher$target.region = order$target.region[match(df_fisher$target, order$name)]\ndf_fisher$label = signif(df_fisher$OR,1)\ndf_fisher$label[df_fisher$Fisher.p>.05] = ''\n\n\nFigS4C = ggplot(df_fisher %>% filter(target %in% order.brainRBPs$name),aes(x=factor(target, levels=rev(levels(target))), y= -log10(Fisher.p), fill=OR)) +\n  geom_bar(stat='identity',position = position_dodge2()) + coord_flip() + theme_bw() + facet_grid(~set) +\n  geom_hline(yintercept = 1,lty=2,color='red') + labs(y='Enrichment (-log10 q-value)',x='') + \n  theme(axis.text.y=element_text(size=5), axis.text.x=element_text(size=5), axis.title.x=element_text(size=7),\n        axis.line=element_line(color=\"black\", size=0.2),\n        plot.margin=unit(c(5,5,5,-18),\"pt\"), \n        legend.text=element_text(size=5), legend.title=element_text(size=7), legend.key.size=unit(0.4,'cm'),\n        panel.spacing=unit(-0.1, \"lines\")) +\n  labs(x='', y='')\n\nFigS4C\n\n\n\n\n\npdf(\"output/figures/supplement/FigS4C_brainRBPs_splitUpDown.pdf\", height=4, width=8)\nFigS4C\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\nsessionInfo()\n\nR version 4.1.3 (2022-03-10)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur/Monterey 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] paletteer_1.5.0      cowplot_1.1.1        readxl_1.4.1        \n [4] biomaRt_2.50.3       ggrepel_0.9.2        rtracklayer_1.54.0  \n [7] GenomicRanges_1.46.1 GenomeInfoDb_1.30.1  IRanges_2.28.0      \n[10] S4Vectors_0.32.4     BiocGenerics_0.40.0  forcats_0.5.2       \n[13] stringr_1.5.0        dplyr_1.0.10         purrr_0.3.4         \n[16] readr_2.1.2          tidyr_1.2.0          tibble_3.1.8        \n[19] ggplot2_3.3.6        tidyverse_1.3.2     \n\nloaded via a namespace (and not attached):\n [1] googledrive_2.0.0           colorspace_2.0-3           \n [3] rjson_0.2.21                ellipsis_0.3.2             \n [5] XVector_0.34.0              fs_1.5.2                   \n [7] rstudioapi_0.14             farver_2.1.1               \n [9] bit64_4.0.5                 AnnotationDbi_1.56.2       \n[11] fansi_1.0.3                 lubridate_1.8.0            \n[13] xml2_1.3.3                  codetools_0.2-18           \n[15] cachem_1.0.6                knitr_1.40                 \n[17] jsonlite_1.8.0              Rsamtools_2.10.0           \n[19] broom_1.0.1                 dbplyr_2.2.1               \n[21] png_0.1-7                   compiler_4.1.3             \n[23] httr_1.4.4                  backports_1.4.1            \n[25] assertthat_0.2.1            Matrix_1.4-1               \n[27] fastmap_1.1.0               gargle_1.2.0               \n[29] cli_3.4.1                   htmltools_0.5.3            \n[31] prettyunits_1.1.1           tools_4.1.3                \n[33] gtable_0.3.1                glue_1.6.2                 \n[35] GenomeInfoDbData_1.2.7      rappdirs_0.3.3             \n[37] Rcpp_1.0.9                  Biobase_2.54.0             \n[39] cellranger_1.1.0            vctrs_0.5.1                \n[41] Biostrings_2.62.0           xfun_0.32                  \n[43] rvest_1.0.3                 lifecycle_1.0.3            \n[45] restfulr_0.0.15             XML_3.99-0.10              \n[47] googlesheets4_1.0.1         zlibbioc_1.40.0            \n[49] scales_1.2.1                vroom_1.5.7                \n[51] hms_1.1.2                   MatrixGenerics_1.6.0       \n[53] parallel_4.1.3              SummarizedExperiment_1.24.0\n[55] rematch2_2.1.2              prismatic_1.1.1            \n[57] yaml_2.3.5                  curl_4.3.2                 \n[59] memoise_2.0.1               stringi_1.7.8              \n[61] RSQLite_2.2.16              BiocIO_1.4.0               \n[63] filelock_1.0.2              BiocParallel_1.28.3        \n[65] rlang_1.0.6                 pkgconfig_2.0.3            \n[67] matrixStats_0.62.0          bitops_1.0-7               \n[69] evaluate_0.16               lattice_0.20-45            \n[71] labeling_0.4.2              GenomicAlignments_1.30.0   \n[73] htmlwidgets_1.5.4           bit_4.0.4                  \n[75] tidyselect_1.2.0            magrittr_2.0.3             \n[77] R6_2.5.1                    generics_0.1.3             \n[79] DelayedArray_0.20.0         DBI_1.1.3                  \n[81] pillar_1.8.1                haven_2.5.1                \n[83] withr_2.5.0                 KEGGREST_1.34.0            \n[85] RCurl_1.98-1.8              modelr_0.1.9               \n[87] crayon_1.5.1                utf8_1.2.2                 \n[89] BiocFileCache_2.2.1         tzdb_0.3.0                 \n[91] rmarkdown_2.16              progress_1.2.2             \n[93] grid_4.1.3                  blob_1.2.3                 \n[95] reprex_2.0.2                digest_0.6.29              \n[97] munsell_0.5.0"
  },
  {
    "objectID": "analysis/Figure3_APA.html",
    "href": "analysis/Figure3_APA.html",
    "title": "Figure 3 - APA",
    "section": "",
    "text": "Load PDUIs averaged dataframe. Get gene names from Gene column.\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.5.0 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(ggrepel)\nlibrary(gprofiler2)\n\n#Load df with averaged PDUIs across technical replicates and samples (PDUIS.averaged.stats)\nload(\"data/dapars2/PDUIS.avg.with.stats.RData\")\ngene_names <-PDUIS.averaged.stats$Gene\n\nget_geneName <- function(tx_vec){\n  strsplit(tx_vec, split = \"|\", fixed = TRUE)[[1]][2]\n}\n\nPDUIS.averaged.stats$geneNames <- sapply(PDUIS.averaged.stats$Gene, get_geneName)\n\nPaired two-sample T-tests comparing CP vs VZ transcript PDUIs, with associated ggplots.\n\n#T-test for overall averaged statistics. \nt.test(PDUIS.averaged.stats$CP.PDUI, PDUIS.averaged.stats$VZ.PDUI, paired = TRUE)\n\n\n    Paired t-test\n\ndata:  PDUIS.averaged.stats$CP.PDUI and PDUIS.averaged.stats$VZ.PDUI\nt = 23.028, df = 9895, p-value < 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n 0.01068873 0.01267778\nsample estimates:\nmean of the differences \n             0.01168326 \n\n#Density plot of PDUI distribution in CP vs VZ\nggplot(data = PDUIS.averaged.stats) +\n  geom_density(mapping = aes(x = CP.PDUI, color = \"red\")) +\n  geom_density(mapping = aes(x = VZ.PDUI, color = \"blue\")) +\n  scale_color_manual(name = \"Region\", values = c('red' = 'red', 'blue' = 'blue'), labels = c('GZ', 'CP')) +\n  labs(title = \"Density plot of PDUI distribution in CP vs VZ\", x = \"PDUI\") \n\n\n\n#Histogram of distributions of VZ - CP difference\nggplot(data = PDUIS.averaged.stats) +\n  geom_histogram(mapping = aes(x = vz.cp.diff, y = after_stat(density)), binwidth = 0.05) +\n  labs(title = \"GZ - CP PDUI difference\", x = \"GZ.PDUI - CP.PDUI\")\n\n\n\n\nPlot CP vs VZ PDUI, denote transcripts with significant difference (FDR < 0.05 as per repeat measures ANOVA)\n\n#Get transcripts with significantly different PDUIs based on FDR cutoff of 0.05, separate to increased or decreased PDUI in CP compared to VZ. \nvz.cp.neg.sig =  PDUIS.averaged.stats %>% filter(FDR < 0.05, vz.cp.diff < 0)\nvz.cp.pos.sig = PDUIS.averaged.stats %>% filter(FDR < 0.05, vz.cp.diff > 0)\nvz.cp.neg.sig <- arrange(vz.cp.neg.sig, by = FDR)\nvz.cp.pos.sig = arrange(vz.cp.pos.sig, by = FDR)\n\n#Get top 10 genes from vz.cp.neg.sig and vz.cp.pos.sig\nvz.cp.pos.sig <- vz.cp.pos.sig %>% arrange(-vz.cp.diff)\nvz.cp.neg.sig <- vz.cp.neg.sig %>% arrange(vz.cp.diff)\n\nneg.sig.top10 <- vz.cp.neg.sig[1:15,]\npos.sig.top10 <- vz.cp.pos.sig[1:15,]\n\n\nFig3D=ggplot(data = PDUIS.averaged.stats) +\n  geom_point(mapping = aes(x = CP.PDUI, y = VZ.PDUI, color = cut(FDR, c(0, 0.05, Inf))), size = 0.5) +\n  scale_color_manual(values=c(\"red\", \"gray\"), labels = c(\"<0.05\", \">0.05\")) +\n  labs(title = \"PDUIs for CP vs VZ\", x = \"CP PDUI\", y = \"VZ PDUI\", color = \"FDR\") +\n  geom_text_repel(data = neg.sig.top10, mapping = aes(x = CP.PDUI, y = VZ.PDUI, label = geneNames), color = \"blue\", min.segment.length = 0, box.padding = 1, max.overlaps = Inf, size=3,force = 20, nudge_y = -.2) +\n  geom_text_repel(data = pos.sig.top10, mapping = aes(x = CP.PDUI, y = VZ.PDUI, label = geneNames), color = \"purple\", min.segment.length = 0, box.padding = 0, max.overlaps = Inf, size=3,force = 20, nudge_y = .2) + theme_bw()\n\nFig3D\n\n\n\nggsave(file='output/figures/Fig3/Fig3D_APA.pdf', width=5,height=4)\n\nPathway enrichment of top transcript PDUI changes using gprofiler2.\n\nlibrary(gprofiler2)\n\n#Order significant genes by descending vz.cp.diff\nvz.cp.neg.sig <- vz.cp.neg.sig %>% arrange(vz.cp.diff) ## Ordered by effect size\nvz.cp.pos.sig <- vz.cp.pos.sig %>% arrange(-vz.cp.diff) ## Ordered by effect size\nall.sig <- rbind(vz.cp.neg.sig, vz.cp.pos.sig)\nall.sig <- all.sig %>% arrange(-abs(vz.cp.diff))\n\ngostres.neg <- gost(query = vz.cp.neg.sig$geneNames, organism = \"hsapiens\", ordered_query = FALSE, significant = TRUE, custom_bg = PDUIS.averaged.stats$geneNames, correction_method = \"fdr\",sources = c(\"GO\", \"KEGG\", \"REAC\"))\n\nDetected custom background input, domain scope is set to 'custom'\n\nas_tibble(gostres.neg$result)\n\n# A tibble: 64 × 14\n   query   signi…¹ p_value term_…² query…³ inter…⁴ preci…⁵ recall term_id source\n   <chr>   <lgl>     <dbl>   <int>   <int>   <int>   <dbl>  <dbl> <chr>   <chr> \n 1 query_1 TRUE    3.00e-5    5445     653     510  0.781  0.0937 GO:000… GO:CC \n 2 query_1 TRUE    1.59e-4    2462     653     259  0.397  0.105  GO:004… GO:CC \n 3 query_1 TRUE    1.59e-4    2462     653     259  0.397  0.105  GO:004… GO:CC \n 4 query_1 TRUE    1.59e-4    2775     653     287  0.440  0.103  GO:003… GO:CC \n 5 query_1 TRUE    1.59e-4      59     653      18  0.0276 0.305  GO:001… GO:CC \n 6 query_1 TRUE    5.03e-4    2522     653     261  0.400  0.103  GO:003… GO:CC \n 7 query_1 TRUE    4.07e-3    2998     653     294  0.450  0.0981 GO:007… GO:CC \n 8 query_1 TRUE    4.07e-3     163     653      29  0.0444 0.178  GO:003… GO:CC \n 9 query_1 TRUE    4.07e-3    2998     653     294  0.450  0.0981 GO:003… GO:CC \n10 query_1 TRUE    4.07e-3    2998     653     294  0.450  0.0981 GO:004… GO:CC \n# … with 54 more rows, 4 more variables: term_name <chr>,\n#   effective_domain_size <int>, source_order <int>, parents <list>, and\n#   abbreviated variable names ¹​significant, ²​term_size, ³​query_size,\n#   ⁴​intersection_size, ⁵​precision\n\ngostres.pos <- gost(query = vz.cp.pos.sig$geneNames, organism = \"hsapiens\", ordered_query = FALSE, significant = TRUE, custom_bg = PDUIS.averaged.stats$geneNames, correction_method = \"fdr\", \n                    sources = c(\"GO\", \"KEGG\", \"REAC\"))\n\nDetected custom background input, domain scope is set to 'custom'\n\n\nNo results to show\nPlease make sure that the organism is correct or set significant = FALSE\n\n# No significant pathway enrichments from genes with significantly longer PDUI in VZ vs CP\n\ngostres_all <- gost(query = all.sig$geneNames, organism = \"hsapiens\", ordered_query = FALSE, significant = TRUE, custom_bg = PDUIS.averaged.stats$geneNames, correction_method = \"fdr\", sources = c(\"GO\", \"KEGG\", \"REAC\"))\n\nDetected custom background input, domain scope is set to 'custom'\n\n# No significant pathway enrichments when genes are ranked in order of decreasing magnitude of PDUI change between brain regions\n\n#Working with all significant genes:\ngostplot(gostres_all, capped = FALSE, interactive = T)\n\n\n\n\ngostres_out <- subset(gostres_all$result, select = c(\"significant\", \"p_value\", \"term_size\", \"query_size\", \"intersection_size\", \"precision\", \"recall\", \"term_id\", \"source\", \"term_name\", \"effective_domain_size\", \"source_order\"))\nwrite.table(gostres_out, \"output/tables/TableS3_APA_GO_results.txt\")\n\n#GO plot with RNA binding terms highlighted\nrna_terms <- c(\"RNA binding\", \"mRNA binding\", \"cytoplasmic stress granule\")\nrna_gostres_all <- subset(gostres_all$result, term_name %in% rna_terms)\npublish_gostplot(gostplot(gostres_all, capped = FALSE, interactive = FALSE), highlight_terms = rna_gostres_all$term_id)\n\n\n\n\n\n\n\nOverrepresentation analysis: are transcripts w/significantly different PDUIs enriched for RBPs & TFs compared to background genes? Use RBP list from Gebauer et al. 2021\n\n#Load RBP gene list from Gebauer et al. 2021\nRBPs <- scan(\"ref/RBPs/rbps_gebauer_nrg_2021.txt\", what = \"\", sep = \"\\n\")\n\n#Get background genes (transcripts with no significant change in PDUI)\nPDUIS.averaged.bckgrd <- PDUIS.averaged.stats %>% filter(FDR >= 0.05)\n\nbckgrd.rbp <- nrow(subset(PDUIS.averaged.bckgrd, geneNames %in% RBPs))\nbckgrd.nonrbp <- nrow(subset(PDUIS.averaged.bckgrd, !geneNames %in% RBPs))\n\nsig.rbp <- nrow(subset(PDUIS.averaged.stats %>% filter(FDR < 0.05), geneNames %in% RBPs))\nsig.nonrbp <- nrow(subset(PDUIS.averaged.stats %>% filter(FDR < 0.05), !geneNames %in% RBPs))\n\n#Run one-sided Fisher's exact test\nd <- data.frame(bckgrd = c(bckgrd.rbp, bckgrd.nonrbp), sig = c(sig.rbp, sig.nonrbp))\nrow.names(d) <- c(\"RBP\", \"non-RBP\")\n\nd\n\n        bckgrd sig\nRBP       3074 453\nnon-RBP   5809 560\n\nfisher.test(d, alternative = \"less\")\n\n\n    Fisher's Exact Test for Count Data\n\ndata:  d\np-value = 2.06e-10\nalternative hypothesis: true odds ratio is less than 1\n95 percent confidence interval:\n 0.0000000 0.7321337\nsample estimates:\nodds ratio \n 0.6541755"
  },
  {
    "objectID": "analysis/Figure4_combinedNetworks.html",
    "href": "analysis/Figure4_combinedNetworks.html",
    "title": "Figure 4 - Combined Networks",
    "section": "",
    "text": "source('code/fisher_overlap.R')\n\nsuppressPackageStartupMessages({\n  library(tidyverse)\n  library(edgeR)\n  library(WGCNA)\n  library(biomaRt)\n})\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]\n\n\n\nload(\"ref/EWCE/CellTypeData_DamonNeuralFetalOnly.rda\")\ncelltypemarkers <- openxlsx::read.xlsx('https://www.cell.com/cms/10.1016/j.neuron.2019.06.011/attachment/508ae008-b926-487a-b871-844a12acc1f8/mmc5', sheet='Cluster enriched genes') %>% as_tibble()\ncelltypemarkers_tableS5 = openxlsx::read.xlsx('https://ars.els-cdn.com/content/image/1-s2.0-S0896627319305616-mmc6.xlsx',sheet=2)\ncelltypemarkers.bg = read.csv(\"ref/polioudakis_neuron2020/single_cell_background_MJG221228.csv\") %>% dplyr::select(ensembl_gene_id) %>% pull()\ncelltypemarkers.bg = unique(c(celltypemarkers.bg, celltypemarkers$Ensembl))\n\ncts = read_tsv(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\nRows: 214516 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcr...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndatExpr.isoCounts = as.data.frame(cts[,12:35])\nrownames(datExpr.isoCounts) = cts$annot_transcript_id\ndatMeta = data.frame(sample=colnames(datExpr.isoCounts))\ndatMeta$Region = substr(datMeta$sample, 7,9)\ndatMeta$Subject = substr(datMeta$sample, 1,3)\ndatMeta$batch = substr(datMeta$sample, 5,5)\ndatAnno = data.frame(gene_id = cts$annot_gene_id, transcript_id=cts$annot_transcript_id,\n                     transcript_name=cts$annot_transcript_name, length=cts$length,\n                     gene_name = cts$annot_gene_name, ensg = substr(cts$annot_gene_id,1,15), novelty=cts$transcript_novelty)\n\n\nrbp_targets = read.csv(\"ref/RBP_targets.csv\")\nrbp_targets$regulation[is.na(rbp_targets$regulation)]=\"\"\n\n\nmart = useMart(\"ENSEMBL_MART_ENSEMBL\",\"mmusculus_gene_ensembl\")\nf = listFilters(mart); a = listAttributes(mart)\nfeaturesToGet = c(\"ensembl_gene_id\", \"external_gene_name\", \"hsapiens_homolog_ensembl_gene\", \"hsapiens_homolog_associated_gene_name\",\"hsapiens_homolog_orthology_type\")\nmouseHumanHomologs = getBM(attributes = featuresToGet,mart = mart)\n\nhuman_mouse_bg = mouseHumanHomologs %>% as_tibble() %>% filter(hsapiens_homolog_orthology_type == \"ortholog_one2one\") %>% dplyr::select(\"hsapiens_homolog_ensembl_gene\") %>% pull()\n\n## Load 3 Networks\ndatExpr.isoFr = readRDS('data/working/WGCNA/final/datExpr.localIF_batchCorrected_103k.rds')\nnet.isoFr = readRDS('data/working/WGCNA/final/WGCNA_isoformFraction_top103k_signed_sft14_net.rds')\nnet.isoFr$colors = labels2colors(net.isoFr$cut2$labels)\nnames(net.isoFr$colors) = names(net.isoFr$cut2$labels)\nnet.isoFr$module.number = net.isoFr$cut2$labels\nnet.isoFr$MEs = moduleEigengenes(t(datExpr.isoFr), colors=net.isoFr$colors)\nnet.isoFr$kMEtable = signedKME(t(datExpr.isoFr), datME =net.isoFr$MEs$eigengenes,corFnc = \"bicor\")\n\nWarning in bicor(datExpr, datME, , use = \"p\"): bicor: zero MAD in variable 'x'.\nPearson correlation was used for individual columns with zero (or missing) MAD.\n\ndatExpr.isoExpr = readRDS(file='data/working/WGCNA/final/datExpr.isoExpr_batchCorrected_92k.rds')\nnet.isoExpr = readRDS('data/working/WGCNA/final/WGCNA_isoExpression_top92k_signed_sft9_net.rds')\nnet.isoExpr$colors = labels2colors(net.isoExpr$cut2$labels)\nnames(net.isoExpr$colors) = names(net.isoExpr$cut2$labels)\nnet.isoExpr$module.number = net.isoExpr$cut2$labels\nnet.isoExpr$MEs = moduleEigengenes(t(datExpr.isoExpr), colors=net.isoExpr$colors)\nnet.isoExpr$kMEtable = signedKME(t(datExpr.isoExpr), datME =net.isoExpr$MEs$eigengenes,corFnc = \"bicor\")\n\ndatExpr.geneExpr = readRDS(file='data/working/WGCNA/final/datExpr.geneExpr_batchCorrected_16k.rds')\nnet.geneExpr = readRDS(file='data/working/WGCNA/final/WGCNA_geneExpression_top16k_signed_sft14_net.rds')\nnet.geneExpr$colors = labels2colors(net.geneExpr$cut2$labels)\nnames(net.geneExpr$colors) = names(net.geneExpr$cut2$labels)\nnet.geneExpr$module.number = net.geneExpr$cut2$labels\nnet.geneExpr$MEs = moduleEigengenes(t(datExpr.geneExpr), colors=net.geneExpr$colors)\nnet.geneExpr$kMEtable = signedKME(t(datExpr.geneExpr), datME =net.geneExpr$MEs$eigengenes,corFnc = \"bicor\")\n\n\n\n\ntidyMods1 = tibble(network = \"isoExpr\", transcript_id = rownames(net.isoExpr$kMEtable), module.color=net.isoExpr$colors, module.number = net.isoExpr$module.number, net.isoExpr$kMEtable) %>% pivot_longer(-c(network, transcript_id,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module.color==kMEtoMod) %>% dplyr::select(-kMEtoMod, -kME_to_module)\n\ntidyMods2 = tibble(network = \"isoUsage\", transcript_id = rownames(net.isoFr$kMEtable), module.color=net.isoFr$colors, module.number = net.isoFr$module.number, net.isoFr$kMEtable) %>% pivot_longer(-c(network, transcript_id,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module.color==kMEtoMod) %>% dplyr::select(-kMEtoMod, -kME_to_module)\n\ntidyMods <- rbind(tidyMods1, tidyMods2) %>% mutate(module=paste0(network, \".M\", module.number, \"_\", module.color))\ntidyMods <- tidyMods %>% left_join(datAnno %>% dplyr::select(gene_id, transcript_id, gene_name))\n\nJoining, by = \"transcript_id\"\n\ntidyMods3 = tibble(network = \"geneExpr\", gene_id = rownames(net.geneExpr$kMEtable), module.color=net.geneExpr$colors, module.number = net.geneExpr$module.number, net.geneExpr$kMEtable) %>% pivot_longer(-c(network, gene_id,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module.color==kMEtoMod) %>% dplyr::select(-kMEtoMod, -kME_to_module) %>% mutate(module=paste0(network, \".M\", module.number, \"_\", module.color), transcript_id=NA)\ntidyMods3$gene_name = datAnno$gene_name[match(tidyMods3$gene_id, datAnno$gene_id)]\n\ntidyMods = rbind(tidyMods, tidyMods3)\ntidyMods <- tidyMods %>% group_by(module) %>% mutate(hub.rank = rank(-kME)) %>% mutate(hub = (hub.rank <= 25), ensg = substr(gene_id,1,15))\nrm(tidyMods1, tidyMods2,tidyMods3)\nwrite_tsv(tidyMods,file='output/tables/TableS4A_networks.tsv')\nwrite_tsv(tidyMods %>% dplyr::select(ensg, module),file='output/tables/TableS4A_networks_forLDSC.tsv')\n# write_tsv(tidyMods %>% dplyr::select(gene_name, module),file='~/Downloads/TableS4A_networks_forTransite.tsv')\n# write_tsv(tidyMods %>% ungroup() %>% dplyr::select(gene_name) %>% unique(),file='~/Downloads/TableS4A_networks_forTransite_background.tsv')\ntidyMods_all = tidyMods"
  },
  {
    "objectID": "analysis/Figure4_combinedNetworks.html#network-dendrogram-plots",
    "href": "analysis/Figure4_combinedNetworks.html#network-dendrogram-plots",
    "title": "Figure 4 - Combined Networks",
    "section": "Network Dendrogram Plots",
    "text": "Network Dendrogram Plots\n\nFig4A: Plot IsoExpr\n\nthis_tree = net.isoExpr$dendrograms[[1]]\nthis_anno = datAnno[match(rownames(datExpr.isoExpr), datAnno$transcript_id),]\nthese_mods = data.frame(IsoExpr=net.isoExpr$colors)\nthese_mods$IsoFR = net.isoFr$colors[this_anno$transcript_id]\nthese_mods$GeneExpr = net.geneExpr$colors[this_anno$gene_id]\n\ncell_anno = as.data.frame(matrix('white', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n    marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n    cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\nndd = read.csv(\"ref/ASD+SCZ+DDD_2022.csv\")\nndd <- ndd %>% filter(Set %in% c(\"ASD (Satterstrom et al. 2019)\", \"ASD (SFARI score 1or2)\", \"ASD (SFARI syndromic)\", \"DDD (Kaplanis et al. 2019)\", \"SCZ_SCHEMA genes (FDR < 5%)\")) %>% dplyr::select(Gene) %>% unique() %>% pull()\n\nthese_mods$NDD = 'white'\nthese_mods$NDD[this_anno$gene_name %in% ndd] = 'purple'\n\nrbpcolors = table(rbp_targets$ENSG)[this_anno$ensg]\nthese_mods$RBP_targets = numbers2colors(rbpcolors,signed = T,centered = F, colors=blueWhiteRed(100)[51:1], naColor = \"white\" )\n\n\nplotDendroAndColors(this_tree, colors=cbind(these_mods), dendroLabels = F)\n\n\n\n pdf(file = \"output/figures/Fig4/Fig4_wgcna.pdf\",width = 8, height=8)\nplotDendroAndColors(this_tree, colors=cbind(these_mods, cell_anno), dendroLabels = F, main=\"\")\ndev.off()\n\nquartz_off_screen \n                2 \n\npdf(file = \"output/figures/Fig4/Fig4A.pdf\",width = 8, height=2)\nplotDendroAndColors(this_tree,colors=NULL,dendroLabels = F, main=\"\")\ndev.off()\n\nquartz_off_screen \n                2 \n\njpeg(filename = \"output/figures/Fig4/Fig4_wgcna.jpeg\",width = 8, height=8, units='in',res = 300)\nplotDendroAndColors(this_tree, colors=cbind(these_mods, cell_anno), dendroLabels = F, main=\"\")\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigS4: Supplement (Plot IsoFr)\n\nthis_tree = net.isoFr$tree\nthis_anno = datAnno[match(rownames(datExpr.isoFr), datAnno$transcript_id),]\nthese_mods = data.frame(IsoFr=net.isoFr$colors)\nthese_mods$IsoExpr = net.isoExpr$colors[this_anno$transcript_id]\nthese_mods$GeneExpr = net.geneExpr$colors[this_anno$gene_id]\n\ncell_anno = as.data.frame(matrix('white', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n    marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n    cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\nndd = read.csv(\"ref/ASD+SCZ+DDD_2022.csv\")\nndd <- ndd %>% filter(Set %in% c(\"ASD (Satterstrom et al. 2019)\", \"ASD (SFARI score 1or2)\", \"ASD (SFARI syndromic)\", \"DDD (Kaplanis et al. 2019)\", \"SCZ_SCHEMA genes (FDR < 5%)\")) %>% dplyr::select(Gene) %>% unique() %>% pull()\n\nthese_mods$NDD = 'white'\nthese_mods$NDD[this_anno$gene_name %in% ndd] = 'purple'\n\nplotDendroAndColors(this_tree, colors=cbind(these_mods), dendroLabels = F)"
  },
  {
    "objectID": "analysis/Figure4_combinedNetworks.html#compare-networks",
    "href": "analysis/Figure4_combinedNetworks.html#compare-networks",
    "title": "Figure 4 - Combined Networks",
    "section": "Compare networks",
    "text": "Compare networks\n\nCell-type enrichment\n\nEWCE\n\nif(FALSE){\n  df_ewce= data.frame()\n  datAnno$net.geneExpr = net.geneExpr$colors[datAnno$gene_id]\n  datAnno$net.isoExpr = net.isoExpr$colors[datAnno$transcript_id]\n  datAnno$net.isoFr = net.isoFr$colors[datAnno$transcript_id]\n  \n  for(this_mod in unique(na.omit(datAnno$net.geneExpr[datAnno$net.geneExpr!=\"grey\"]))) {\n    mod_genes = unique(na.omit(datAnno$gene_name[datAnno$net.geneExpr==this_mod]))\n    mod_gene.bg = unique(na.omit(datAnno$gene_name[!is.na(datAnno$net.geneExpr)]))\n    res=EWCE::bootstrap_enrichment_test(ctd, hits = mod_genes, bg=mod_gene.bg,genelistSpecies = 'human',sctSpecies = 'human',annotLevel = 2,verbose = F,no_cores = 10,reps = 10000)\n      df_ewce = rbind(df_ewce,data.frame(net = 'net.geneExpr', mod=this_mod, res$results))\n  }\n  \n  for(this_mod in unique(na.omit(datAnno$net.isoExpr[datAnno$net.isoExpr!=\"grey\"]))) {\n    mod_genes = unique(na.omit(datAnno$gene_name[datAnno$net.isoExpr==this_mod]))\n    mod_gene.bg = unique(na.omit(datAnno$gene_name[!is.na(datAnno$net.isoExpr)]))\n    res=EWCE::bootstrap_enrichment_test(ctd, hits = mod_genes, bg=mod_gene.bg,genelistSpecies = 'human',sctSpecies = 'human',annotLevel = 2,verbose = F,no_cores = 10,reps = 10000)\n      df_ewce = rbind(df_ewce,data.frame(net = 'net.isoExpr', mod=this_mod, res$results))\n  }\n  \n  for(this_mod in unique(na.omit(datAnno$net.isoFr[datAnno$net.isoFr!=\"grey\"]))) {\n    mod_genes = unique(na.omit(datAnno$gene_name[datAnno$net.isoFr==this_mod]))\n    mod_gene.bg = unique(na.omit(datAnno$gene_name[!is.na(datAnno$net.isoFr)]))\n    res=EWCE::bootstrap_enrichment_test(ctd, hits = mod_genes, bg=mod_gene.bg,genelistSpecies = 'human',sctSpecies = 'human',annotLevel = 2,verbose = F,no_cores = 10,reps = 10000)\n      df_ewce = rbind(df_ewce,data.frame(net = 'net.isoFr', mod=this_mod, res$results))\n  }\n  \n  \n  df_ewce$label = \"\"\n  df_ewce$label[df_ewce$q<.05] = signif((df_ewce$sd_from_mean[df_ewce$q<.05]),1)\n  ggplot(df_ewce, aes(y=mod, x=CellType, label=label, fill=-log10(p+1e-5))) + geom_tile(color='grey') + scale_fill_gradient(low='white', high='red') + geom_text(size=2) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + facet_grid(net~., scales='free',space = 'free') + labs(x=\"\", y=\"\")\n  \n  df_ewce$mod2 = paste0(df_ewce$net, '.', df_ewce$mod)\n  \n  df_ewce %>% as_tibble() %>%  mutate(ct = ((sd_from_mean))) %>% group_by(net) %>% summarise(mean(ct), median(ct), max(ct))\n}\n\n\n\nFisher’s exact\n\ndf_fisher.celltype = data.frame()\nnetworks = list(\"geneExpr\" = net.geneExpr$module.number[datAnno$gene_id], \n                \"isoExpr\" = net.isoExpr$module.number[datAnno$transcript_id], \n                \"isoUsage\" = net.isoFr$module.number[datAnno$transcript_id])\n\nfor(this_net in names(networks)) {\n  all_mods = unique(na.omit(networks[[this_net]][networks[[this_net]] != 0]))\n\n  for(this_mod in all_mods) {\n    mod_genes = unique(na.omit(datAnno$ensg[networks[[this_net]]==this_mod]))\n    mod_gene.bg = unique(na.omit(datAnno$ensg[!is.na(networks[[this_net]])]))\n    \n    for(this_cell in unique(celltypemarkers$Cluster)) {\n      marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% \n        dplyr::select(Ensembl) %>% pull()\n      enrichment = ORA(mod_genes, marker_genes, mod_gene.bg, celltypemarkers.bg)\n      df_fisher.celltype = rbind(df_fisher.celltype, \n                        data.frame(net = this_net, mod = this_mod, cell=this_cell,\n                                   as.data.frame(t(enrichment))))\n    }\n  }\n}\n\nfor(col in c(\"OR\", \"Fisher.p\")) df_fisher.celltype[,col] = as.numeric(df_fisher.celltype[,col])\ndf_fisher.celltype$Fisher.p[df_fisher.celltype$OR<1] = 1\ndf_fisher.celltype$Fisher.q = p.adjust(df_fisher.celltype$Fisher.p,'fdr')\n\ndf_fisher.celltype$label = \"\"\ndf_fisher.celltype$label[df_fisher.celltype$Fisher.q<.05] = signif((df_fisher.celltype$OR[df_fisher.celltype$Fisher.q<.05]),1)\n\n\nFigS4\n\ndf_fisher.celltype$net = factor(df_fisher.celltype$net, levels=c(\"geneExpr\", \"isoUsage\", \"isoExpr\"))\ng1= ggplot(df_fisher.celltype, aes(y=factor(mod,levels=c(100:1)), x=cell, label=label, fill=-log10(Fisher.q))) + geom_tile(color='grey') + scale_fill_gradient(low='white', high='red') + geom_text(size=2) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + facet_grid(net~., scales='free',space = 'free') + labs(x=\"\", y=\"\")\ng1\n\n\n\nggsave(g1, file=\"output/figures/Fig4/Fig4_supp_Fisher.pdf\",width=5,height=12)\n\n\n\nTableS4B\n\nTableS4B <- df_fisher.celltype%>% mutate(module.number = as.numeric(mod), module.color = labels2colors(module.number), mod = paste0(net, \"M.\", module.number, \"_\", module.color))\nwrite_tsv(TableS4B, file=\"output/tables/TableS4B_fisherCellType.tsv\")\n\n\n\n\nSingle Cell IsoSeq Overlap\n\ntableS5 = openxlsx::read.xlsx('data/single_cell/Table_S5_v2.xlsx',sheet = \"C\") %>% as_tibble()\nmod_bg = tidyMods_all %>% dplyr::select(transcript_id) %>% unique() %>% pull() %>% substr(1,15)\n\nAdding missing grouping variables: `module`\n\ndf_scOverlap = data.frame()\ntidyMods_all <- tidyMods_all %>% ungroup()\nfor(this_cell in unique(tableS5$cluster)){\n  cell_markers = tableS5 %>% filter(cluster == this_cell) %>% dplyr::select(Isoform.Id) %>% pull()\n  for(this_mod in tidyMods_all %>% filter(network != 'geneExpr', module.color !='grey') %>% dplyr::select(module) %>% unique() %>% pull()) {\n    mod_isoforms = tidyMods_all %>% filter(module==this_mod) %>% dplyr::select(transcript_id) %>% pull() %>% substr(1,15)\n    this_stat = ORA(mod_isoforms,cell_markers, mod_bg,mod_bg)\n    df_scOverlap = rbind(df_scOverlap, data.frame(cell=this_cell, mod=this_mod, t(this_stat)))\n  }\n}\n\nfor(col in c(\"OR\", \"Fisher.p\")) df_scOverlap[,col] = as.numeric(df_scOverlap[,col])\ndf_scOverlap$Fisher.p[df_scOverlap$OR<1] = 1\ndf_scOverlap$Fisher.q = p.adjust(df_scOverlap$Fisher.p,'fdr')\n\ndf_scOverlap$label = \"\"\ndf_scOverlap$label[df_scOverlap$Fisher.q<.05] = signif((df_scOverlap$OR[df_scOverlap$Fisher.q<.05]),1)\n\ndf_scOverlap$net = factor(substr(df_scOverlap$mod,1,6))\n\nggplot(df_scOverlap, aes(y=mod, x=cell, label=label, fill=-log10(Fisher.q))) + geom_tile(color='grey') + scale_fill_gradient(low='white', high='red') + geom_text(size=2) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + facet_wrap(net~., scales='free',shrink =T,ncol=1) + labs(x=\"\", y=\"\") + coord_flip()\n\n\n\n\n\n\n\nRare Var Enrichments\n\nIsoform level\n\nif(FALSE) {\n  fu=openxlsx::read.xlsx(('https://static-content.springer.com/esm/art%3A10.1038%2Fs41588-022-01104-0/MediaObjects/41588_2022_1104_MOESM3_ESM.xlsx'),'Supplementary Table 11')\nfu$p_TADA_ASD[fu$p_TADA_ASD==0] = min(fu$p_TADA_ASD[fu$p_TADA_ASD >0],na.rm=T)\nfu$p_TADA_NDD[fu$p_TADA_NDD==0] = min(fu$p_TADA_NDD[fu$p_TADA_NDD >0],na.rm=T)\n\ndatAnno.logit = data.frame(ASD_fuTADA= -log10(fu$p_TADA_ASD)[match(datAnno$ensg, fu$gene_id)])\ndatAnno.logit$NDD_fuTADA = -log10(fu$p_TADA_NDD)[match(datAnno$ensg, fu$gene_id)]\n\nSCZ.schema = read_tsv('ref/risk_genes/SCHEMA_gene_results.tsv')\ndatAnno.logit$SCZ_schema = -log10(SCZ.schema$`P meta`[match(datAnno$ensg, SCZ.schema$gene_id)])\n\nBIP.bipex = read_tsv('ref/risk_genes/BipEx_gene_results.tsv') %>% filter(group==\"Bipolar Disorder\")\ndatAnno.logit$BIP.bipex = -log10(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(datAnno$ensg,BIP.bipex$gene_id)])\n\nEPI.epi25 = read_tsv('ref/risk_genes/Epi25_gene_results.tsv') %>% filter(group==\"EPI\")\ndatAnno.logit$EPI.epi25 = -log10(EPI.epi25$pval[match(datAnno$ensg,EPI.epi25$gene_id)])\n\n\n\nnetworks = list(\"net.isoExpr\" = net.isoExpr$colors[datAnno$transcript_id], \n                \"net.isoFr\" = net.isoFr$colors[datAnno$transcript_id])\n\n\ndf_logit= data.frame()\n\nfor(this_net in names(networks)) {\n  all_mods = unique(na.omit(networks[[this_net]][networks[[this_net]] != 'grey']))\n\n  for(this_mod in all_mods) {\n    \n    binaryVec = as.numeric(networks[[this_net]] == this_mod)\n    \n    for(this_rare_var in colnames(datAnno.logit)) {\n      this_glm = summary(glm(binaryVec ~ datAnno.logit[,this_rare_var] + length + log10(length), data=datAnno, family='binomial'))\n    df_logit = rbind(df_logit, data.frame(net = this_net, mod = this_mod, set = this_rare_var, t(this_glm$coefficients[2,])))\n      \n    }\n  }\n}\n    \ndf_logit$OR = exp(df_logit$Estimate)\ndf_logit$P = df_logit$Pr...z..\ndf_logit$P[df_logit$OR < 1] = 1\ndf_logit$Q = p.adjust(df_logit$P,'fdr')\ndf_logit$mod = factor(df_logit$mod, levels=labels2colors(100:1))\n\n\ndf_logit$label = signif((df_logit$OR),3)\ndf_logit$label[df_logit$Q>.1] = \"\"\nggplot(df_logit, aes(y=factor(mod),x=set, label=label, fill=-log10(P))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text(size=2) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + facet_wrap(~net, scales='free') + labs(x=\"\",y=\"\")\n}\n\n\n\nGene level\n\ngeneAnno = rtracklayer::import(\"ref/gencode.v33lift37.annotation.gtf.gz\") %>% as_tibble() %>% filter(type=='gene')\ngeneAnno$ensg = substr(geneAnno$gene_id,1,15)\n\nfu=openxlsx::read.xlsx(('https://static-content.springer.com/esm/art%3A10.1038%2Fs41588-022-01104-0/MediaObjects/41588_2022_1104_MOESM3_ESM.xlsx'),'Supplementary Table 11')\nfu$p_TADA_ASD[fu$p_TADA_ASD==0] = min(fu$p_TADA_ASD[fu$p_TADA_ASD >0],na.rm=T)\nfu$p_TADA_NDD[fu$p_TADA_NDD==0] = min(fu$p_TADA_NDD[fu$p_TADA_NDD >0],na.rm=T)\n\ngeneAnno.logit = data.frame(ASD_fuTADA= -log10(fu$p_TADA_ASD)[match(geneAnno$ensg, fu$gene_id)])\ngeneAnno.logit$NDD_fuTADA = -log10(fu$p_TADA_NDD)[match(geneAnno$ensg, fu$gene_id)]\n\nSCZ.schema = read_tsv('ref/risk_genes/SCHEMA_gene_results.tsv')\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 18321 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (8): gene_id, group, OR (PTV), OR (Class I), OR (Class II), OR (PTV) up...\ndbl (16): Case PTV, Ctrl PTV, Case mis3, Ctrl mis3, Case mis2, Ctrl mis2, P ...\nlgl  (2): De novo mis3, De novo mis2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngeneAnno.logit$SCZ_schema = -log10(SCZ.schema$`P meta`[match(geneAnno$ensg, SCZ.schema$gene_id)])\n\nBIP.bipex = read_tsv('ref/risk_genes/BipEx_gene_results.tsv') %>% filter(group==\"Bipolar Disorder\")\n\nRows: 119958 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (4): gene_id, group, damaging_missense_fisher_gnom_non_psych_OR, ptv_fi...\ndbl (16): n_cases, n_controls, damaging_missense_case_count, damaging_missen...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngeneAnno.logit$BIP.bipex = -log10(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(geneAnno$ensg,BIP.bipex$gene_id)])\n\nEPI.epi25 = read_tsv('ref/risk_genes/Epi25_gene_results.tsv') %>% filter(group==\"EPI\")\n\nRows: 71456 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_id, group\ndbl (9): xcase_lof, xctrl_lof, pval_lof, xcase_mpc, xctrl_mpc, pval_mpc, xca...\nlgl (1): pval_infrIndel\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngeneAnno.logit$EPI.epi25 = -log10(EPI.epi25$pval[match(geneAnno$ensg,EPI.epi25$gene_id)])\n\n\n\nnetworks = data.frame(net=\"isoExpr\", module = net.isoExpr$module.number, transcript_id = names(net.isoExpr$colors))\nnetworks = rbind(networks, data.frame(net='isoUsage', module = net.isoFr$module.number, transcript_id = names(net.isoFr$colors)))\nnetworks$gene_id = datAnno$gene_id[match(networks$transcript_id, datAnno$transcript_id)]\nnetworks = rbind(networks, data.frame(net='geneExpr', module = net.geneExpr$module.number, transcript_id = NA, gene_id=names(net.geneExpr$colors)))\nnetworks$ensg = substr(networks$gene_id,1,15)\n\n\ndf_logit.gene = data.frame()\nbinaryVec = rep(NA, times=nrow(geneAnno))\nnames(binaryVec) = geneAnno$ensg\n\nfor(this_net in unique(networks$net)) {\n  all_mods = unique(na.omit(networks$module[networks$net ==this_net & networks$module!=0]))\n  \n  for(this_mod in all_mods) {\n    \n    this_binary_vec = binaryVec\n    this_binary_vec[names(this_binary_vec) %in% networks$ensg[networks$net==this_net]] = 0 \n    this_binary_vec[names(this_binary_vec) %in% networks$ensg[networks$net==this_net & networks$module==this_mod]] = 1\n    \n    for(this_rare_var in colnames(geneAnno.logit)) {\n      this_glm = summary(glm(this_binary_vec ~ geneAnno.logit[,this_rare_var] + width + log10(width), data=geneAnno, family='binomial'))\n    df_logit.gene = rbind(df_logit.gene, data.frame(net = this_net, mod = this_mod, set = this_rare_var, t(this_glm$coefficients[2,])))\n      \n    }\n  }\n}\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\ndf_logit.gene$OR = exp(df_logit.gene$Estimate)\ndf_logit.gene$P = df_logit.gene$Pr...z..\ndf_logit.gene$P[df_logit.gene$OR < 1] = 1\ndf_logit.gene$Q = p.adjust(df_logit.gene$P,'fdr')\n\ndf_logit.gene$label = signif((df_logit.gene$OR),3)\ndf_logit.gene$label[df_logit.gene$Q>.05] = \"\"\n\n\nFigS4\n\ng1 = ggplot(df_logit.gene, aes(y=factor(mod,levels=c(100:1)),x=set, label=label, fill=-log10(P))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text(size=2) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + facet_wrap(~net, scales='free') + labs(x=\"\", y=\"\")\ng1\n\n\n\nggsave(g1,file=\"output/figures/supplement/FigS4_rareVar_geneLogit.pdf\")\n\nSaving 7 x 5 in image\n\n\n\n\nTableS4C\n\nTableS4C <- df_logit.gene %>% mutate(module=paste0(net, \".M\", mod, \"_\", labels2colors(mod)))\nwrite_tsv(TableS4C, file=\"output/tables/TableS4C_rareVarlogit.tsv\")\n\n\n\n\n\nGWAS Enrichments\n\ndf_gwas = data.frame()\ngwas = dir(\"data/LDSC_cell_type_specific/networks/isoExpr_cts_result/\", pattern=\"txt\")\nfor(this_gwas in gwas) {\n  this_ldsc = read.table(paste0(\"data/LDSC_cell_type_specific/networks/isoExpr_cts_result/\",this_gwas),header = T)\n  colnames(this_ldsc)[1] = 'module'\n  this_ldsc$gwas = gsub(\".cell_type_results.txt\", \"\", this_gwas)\n  this_ldsc$net = 'isoExpr'\n  df_gwas = rbind(df_gwas, this_ldsc)\n}\n\ngwas = dir(\"data/LDSC_cell_type_specific/networks/isoUsage_cts_result/\", pattern=\"txt\")\nfor(this_gwas in gwas) {\n  this_ldsc = read.table(paste0(\"data/LDSC_cell_type_specific/networks/isoUsage_cts_result/\",this_gwas),header = T)\n  colnames(this_ldsc)[1] = 'module'\n  this_ldsc$gwas = gsub(\".cell_type_results.txt\", \"\", this_gwas)\n  this_ldsc$net = 'isoUsage'\n  df_gwas = rbind(df_gwas, this_ldsc)\n}\n\ngwas = dir(\"data/LDSC_cell_type_specific/networks/geneExpr_cts_result/\", pattern=\"txt\")\nfor(this_gwas in gwas) {\n  this_ldsc = read.table(paste0(\"data/LDSC_cell_type_specific/networks/geneExpr_cts_result/\",this_gwas),header = T)\n  colnames(this_ldsc)[1] = 'module'\n  this_ldsc$gwas = gsub(\".cell_type_results.txt\", \"\", this_gwas)\n  this_ldsc$net = 'geneExpr'\n  df_gwas = rbind(df_gwas, this_ldsc)\n}\n\n\ndf_gwas$fdr = p.adjust(df_gwas$Coefficient_P_value,'fdr')\ndf_gwas$mod = as.numeric(gsub(\"M\", \"\", unlist(lapply(strsplit(unlist(lapply(strsplit(df_gwas$module, \"[.]\"),'[',2)), '_'),'[',1))))\ndf_gwas$Zscore = df_gwas$Coefficient/df_gwas$Coefficient_std_error\n\n\n\nRBP Enrichments\n\nnetworks = list(\"net.isoExpr\" = net.isoExpr$colors[datAnno$transcript_id], \n                \"net.isoFr\" = net.isoFr$colors[datAnno$transcript_id],\n                \"net.geneExpr\" = net.geneExpr$colors[datAnno$gene_id])\n\ndf_fisher_rbp = data.frame()\n\nfor(this_net in names(networks)) {\n  all_mods = unique(na.omit(networks[[this_net]][networks[[this_net]] != 'grey']))\n\n  for(this_mod in all_mods) {\n    \n    if(this_net == \"net.geneExpr\") {\n      modGenes = substr(unique(na.omit(names(networks[[this_net]][networks[[this_net]] == this_mod]))), 1,15)\n      modGeneg.bg = substr(unique(na.omit(names(networks[[this_net]]))),1,15)\n    } else {\n      modTx = unique(na.omit(names(networks[[this_net]][networks[[this_net]] == this_mod])))\n      modGenes = unique(datAnno$ensg[match(modTx, datAnno$transcript_id)])\n      modGeneg.bg = unique(datAnno$ensg[match(names(networks[[this_net]]), datAnno$transcript_id)])\n    } \n  for(this_dataset in unique(rbp_targets$dataset)) {\n    this_rbp = rbp_targets %>% filter(dataset == this_dataset) %>% mutate(target = paste0(RBP, \"_\", data.type, \"_\", regulation, \"_\", msORhs)) %>% dplyr::select(target) %>% unique()  %>% pull()\n    target_genes = rbp_targets %>% filter(dataset == this_dataset) %>% dplyr::select(ENSG) %>% pull()\n \n if(grepl(\"Human\",this_rbp)) {\n   this_or = ORA(modGenes, target_genes, unique(datAnno$ensg), unique(datAnno$ensg))\n } else {\n  this_or = ORA(modGenes, target_genes, unique(datAnno$ensg), human_mouse_bg)\n }\n df_fisher_rbp = rbind(df_fisher_rbp, data.frame(net = this_net, mod = this_mod, dataset = this_dataset, target = this_rbp, t(this_or)))\n  }\n}}\n  \n\ndf_fisher_rbp$OR = as.numeric(df_fisher_rbp$OR)\n  df_fisher_rbp$Fisher.p[df_fisher_rbp$OR<1] = 1\n  df_fisher_rbp$Fisher.p = p.adjust(as.numeric(df_fisher_rbp$Fisher.p),'fdr')\n  df_fisher_rbp$label = signif(df_fisher_rbp$OR,2)\n  df_fisher_rbp$label[df_fisher_rbp$Fisher.p>.001] = ''\n  df_fisher_rbp<-df_fisher_rbp %>% left_join(data.frame(mod.num = 1:100, mod=labels2colors(1:100)))\n\nJoining, by = \"mod\"\n\n  df_fisher_rbp$mod.num = factor(df_fisher_rbp$mod.num,levels=c(100:1))\n\n  ggplot(df_fisher_rbp,aes(y=(mod.num), x=target, label=label, fill=-log10(Fisher.p))) + geom_tile() + facet_wrap(~net, scales='free') + geom_text(size=2)+ scale_fill_gradient(low='white',high='red') + theme(axis.text.x = element_text(angle=90,hjust=1))\n\n\n\n# ggplot(df_fisher_rbp,aes(y=reorder(paste0(net, \".M\", mod.num, \"_\", target),  -Fisher.p), x=-log10(Fisher.p), label=label, fill=net)) + \n#   geom_bar(stat='identity') + geom_text(size=2)+  theme(axis.text.x = element_text(angle=90,hjust=1))"
  },
  {
    "objectID": "analysis/Figure4_combinedNetworks.html#annotate-individual-modules",
    "href": "analysis/Figure4_combinedNetworks.html#annotate-individual-modules",
    "title": "Figure 4 - Combined Networks",
    "section": "Annotate Individual Modules",
    "text": "Annotate Individual Modules\n\nIsoExpr Network\n\nif(FALSE) {\nthis_datExpr = datExpr.isoExpr\nthis_net = net.isoExpr\nthis_net$module = paste0(\"M\", net.isoExpr$cut2$labels, \".\", labels2colors(net.isoExpr$cut2$labels))\nthis_net$module.number = net.isoExpr$cut2$labels\nthis_net$colors = labels2colors(net.isoExpr$cut2$labels)\nfileBaseNet=\"data/working/WGCNA/final/datExpr.isoExpr_batchCorrected_92k\"\n  \n\n#Generate MEs and kME table for Network\nMEs = moduleEigengenes(t(this_datExpr), colors=this_net$module.number)\nkMEtable = signedKME(t(this_datExpr), datME =MEs$eigengenes,corFnc = \"bicor\")\n\nthis_anno = datAnno[match(rownames(this_datExpr), datAnno$transcript_id),]\nthis_anno$module = this_net$module\nthis_anno$module.color = this_net$colors\nthis_anno$module.number = this_net$module.number\nidx = grep(\"^TALON\", this_anno$transcript_name)\nthis_anno$transcript_name[idx] = paste0(this_anno$gene_name[idx], '_', this_anno$transcript_name[idx])\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n    marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n    cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n  \ntidyMods = tibble(transcript_id = rownames(kMEtable), module=this_net$module, module.color = this_net$colors, module.number=this_net$module.number, kMEtable)\ntidyMods <- tidyMods %>% pivot_longer(-c(transcript_id,module,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module!=0, module != \"grey\", kMEtoMod !='grey', kMEtoMod != 0) %>% dplyr::select(-kME_to_module)\ntidyMods <- tidyMods %>% left_join(this_anno)\ntidyMods %>% group_by(module) %>% filter(kMEtoMod == module.number) %>% slice_max(kME,n=10)\n\n\npdf(file=paste0(fileBaseNet, \".pdf\"),width=15,height=8)\nplotDendroAndColors(this_net$tree, colors=cbind((this_net$colors),cell_anno), dendroLabels = F)\n\n\nggplot(df_fisher.celltype %>% filter(net==\"isoExpr\"), aes(x=cell,y=factor(mod,levels=c(100:1)), label=label, fill=-log10(Fisher.p))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text(size=3) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + labs(x=\"\",y=\"\")\n\n\n\nfor(i in 1:(ncol(MEs$eigengenes))) {\n  print(i)\n  this_mod = gsub(\"ME\", \"\", colnames(MEs$eigengenes)[i])\n    mod_genes = tidyMods %>% filter(module.number==this_mod,kMEtoMod==this_mod) %>% arrange(-kME) %>% dplyr::select(ensg) %>% pull()\n  if(!this_mod %in% c(\"grey\", 0, \"M0.grey\")) {\n  this_plot = data.frame(datMeta, eig=MEs$eigengenes[,i])\n  g1 = ggplot(this_plot, aes(x=Region, y=eig, color=Subject)) + geom_point() + ggtitle(paste0(\"Module \",this_mod, \": \", labels2colors(as.numeric(this_mod)), \" n=\", length(mod_genes)))\n  g2 = tidyMods %>% filter(module.number==this_mod, kMEtoMod==this_mod) %>% slice_max(kME,n=25) %>% ggplot(aes(x=reorder(transcript_name, kME), y=kME, fill=novelty)) + geom_bar(stat='identity') + coord_flip() + labs(x=\"\") + scale_fill_manual(values = colorVector)\n  \n  \n  g3=ggplot(df_fisher.celltype %>% filter(net==\"isoExpr\",mod==this_mod),aes(x=reorder(cell, -Fisher.p), y=-log10(Fisher.p), fill=OR)) + geom_bar(stat='identity') + \n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')\n  \n  # Add pathway enrichments\n  path = gprofiler2::gost(query=mod_genes,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = unique(datAnno$ensg), sources = c(\"GO\",\"KEGG\", \"REACTOME\"))\n  if(!is.null(path)) {\n    df_path = as_tibble(path$result)\n    df_path <- df_path %>% filter(term_size > 5, term_size < 1000)\n  g4 <- df_path %>% group_by(source) %>% slice_min(p_value,n=5,with_ties = F) %>% ungroup() %>%\n    ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity') + coord_flip() + theme_bw() + labs(x=\"\")  + \n    facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')\n  } else {\n    print(\"No pathway enrichment for this module\")\n    g4=NULL\n  }\n  \n  # RBP\n   g5=ggplot(df_fisher_rbp %>% filter(net==\"net.isoExpr\",mod.num==this_mod,Fisher.p<.05),aes(x=reorder(target, -Fisher.p), y=-log10(Fisher.p), fill=OR)) + geom_bar(stat='identity',position = position_dodge2()) + \n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"RBP Enrichment\")\n   \n    # Rare Var\n   g6=ggplot(df_logit.gene %>% filter(net==\"isoExpr\",mod==this_mod),aes(x=reorder(set, -Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity',position = position_dodge2()) + \n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"Rare Var Enrichment\")\n   \n     # GWAS\n   g7=ggplot(df_gwas %>% filter(net==\"isoExpr\",mod==this_mod),aes(x=reorder(gwas, -fdr), y=-log10(fdr), fill=Zscore)) + geom_bar(stat='identity',position = position_dodge2()) + scale_fill_gradient2()+\n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red') + ggtitle(\"GWAS Enrichment\")\n   \n\ngridExtra::grid.arrange(grobs=list(g1,g2,g3,g4,g5,g6,g7),layout_matrix=rbind(c(1,3,5),c(2,3,5), c(2,4,7), c(6,4,7)))\n  }\n}\ndev.off()\n}\n\n\n\nIsoUsage Network\n\nif(FALSE) {\nthis_datExpr = datExpr.isoFr\nthis_net = net.isoFr\nthis_net$module = paste0(\"M\", this_net$module.number, \".\", labels2colors(this_net$module.number))\nfileBaseNet=\"data/working/WGCNA/final/datExpr.localIF_batchCorrected_103k\"\n  \n\n#Generate MEs and kME table for Network\nMEs = moduleEigengenes(t(this_datExpr), colors=this_net$module.number)\nkMEtable = signedKME(t(this_datExpr), datME =MEs$eigengenes,corFnc = \"bicor\")\n\nthis_anno = datAnno[match(rownames(this_datExpr), datAnno$transcript_id),]\nidx = grep(\"^TALON\", this_anno$transcript_name)\nthis_anno$transcript_name[idx] = paste0(this_anno$gene_name[idx], '_', this_anno$transcript_name[idx])\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n    marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n    cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n  \ntidyMods = tibble(transcript_id = rownames(kMEtable), module=this_net$module, module.color = this_net$colors, module.number=this_net$module.number, kMEtable)\ntidyMods <- tidyMods %>% pivot_longer(-c(transcript_id,module,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module!=0, module != \"grey\", kMEtoMod !='grey', kMEtoMod != 0) %>% dplyr::select(-kME_to_module)\ntidyMods <- tidyMods %>% left_join(this_anno)\ntidyMods %>% group_by(module) %>% filter(kMEtoMod == module) %>% slice_max(kME,n=10)\n\n\npdf(file=paste0(fileBaseNet, \".pdf\"),width=15,height=8)\nplotDendroAndColors(this_net$tree, colors=cbind((this_net$colors),cell_anno), dendroLabels = F)\n\nggplot(df_fisher.celltype %>% filter(net==\"isoUsage\"), aes(x=cell,y=factor(mod,levels=c(100:1)), label=label, fill=-log10(Fisher.p))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text(size=3) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + labs(x=\"\",y=\"\")\n\n\n\nfor(i in 1:(ncol(MEs$eigengenes))) {\n  print(i)\n  this_mod = gsub(\"ME\", \"\", colnames(MEs$eigengenes)[i])\n  mod_genes = tidyMods %>% filter(module.number==this_mod,kMEtoMod==this_mod) %>% arrange(-kME) %>% dplyr::select(ensg) %>% pull()\n  if(!this_mod %in% c(\"grey\", 0, \"M0.grey\")) {\n  this_plot = data.frame(datMeta, eig=MEs$eigengenes[,i])\n  g1 = ggplot(this_plot, aes(x=Region, y=eig, color=Subject)) + geom_point() + ggtitle(paste0(\"Module \",this_mod, \": \", labels2colors(as.numeric(this_mod)), \" n=\", length(mod_genes)))\n  g2 = tidyMods %>% filter(module.number==this_mod, kMEtoMod==this_mod) %>% slice_max(kME,n=25) %>% ggplot(aes(x=reorder(transcript_name, kME), y=kME, fill=novelty)) + geom_bar(stat='identity') + coord_flip() + labs(x=\"\") + scale_fill_manual(values = colorVector)\n  \n  \n  g3=ggplot(df_fisher.celltype %>% filter(net==\"isoExpr\",mod==this_mod),aes(x=reorder(cell, -Fisher.p), y=-log10(Fisher.p), fill=OR)) + geom_bar(stat='identity') + \n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')\n  \n  # Add pathway enrichments\n  path = gprofiler2::gost(query=mod_genes,ordered_query = T,correction_method = 'fdr',\n                        custom_bg = unique(datAnno$ensg), sources = c(\"GO\",\"KEGG\", \"REACTOME\"))\n  if(!is.null(path)) {\n    df_path = as_tibble(path$result)\n    df_path <- df_path %>% filter(term_size > 5, term_size < 1000)\n  g4 <- df_path %>% group_by(source) %>% slice_min(p_value,n=5,with_ties = F) %>% ungroup() %>%\n    ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity') + coord_flip() + theme_bw() + labs(x=\"\")  + \n    facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none')\n  } else {\n    print(\"No pathway enrichment for this module\")\n    g4=NULL\n  }\n  \n  # RBP\n   g5=ggplot(df_fisher_rbp %>% filter(net==\"net.isoFr\",mod.num==this_mod,Fisher.p<.05),aes(x=reorder(target, -Fisher.p), y=-log10(Fisher.p), fill=OR)) + geom_bar(stat='identity',position = position_dodge2()) + \n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"RBP Enrichment\")\n   \n    # Rare Var\n   g6=ggplot(df_logit.gene %>% filter(net==\"isoUsage\",mod==this_mod),aes(x=reorder(set, -Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity',position = position_dodge2()) + \n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"Rare Var Enrichment\")\n   \n     # GWAS\n   g7=ggplot(df_gwas %>% filter(net==\"isoUsage\",mod==this_mod),aes(x=reorder(gwas, -fdr), y=-log10(fdr), fill=Zscore)) + geom_bar(stat='identity',position = position_dodge2()) + scale_fill_gradient2()+\n    coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red') + ggtitle(\"GWAS Enrichment\")\n   \n\ngridExtra::grid.arrange(grobs=list(g1,g2,g3,g4,g5,g6,g7),layout_matrix=rbind(c(1,3,5),c(2,3,5), c(2,4,7), c(6,4,7)))\n  }\n}\ndev.off()\n}"
  },
  {
    "objectID": "analysis/Figure4_combinedNetworks.html#combined-network-plots",
    "href": "analysis/Figure4_combinedNetworks.html#combined-network-plots",
    "title": "Figure 4 - Combined Networks",
    "section": "Combined Network Plots",
    "text": "Combined Network Plots\n\nNetwork Cluster\n\ndf1 = data.frame(net.isoFr$MEs$eigengenes)\ncolnames(df1) = paste0(\"isoUsage_\", gsub(\"ME\", \"\", colnames(df1)))\n\ndf2 = data.frame(net.isoExpr$MEs$eigengenes)\ncolnames(df2) = paste0(\"isoExpr_\",  gsub(\"ME\", \"\", colnames(df2)))\n\ndf3 = data.frame(net.geneExpr$MEs$eigengenes)\ncolnames(df3) = paste0(\"geneExpr_\",  gsub(\"ME\", \"\", colnames(df3)))\n\ndf = cbind(df1,df2,df3)\ntree = hclust(as.dist(1-bicor(df)),method = 'average')\n\n\n# Hierarchically cluster the sample-eigenegene correlations\n# and save the dendrogram representation\ndist_mat <- as.dist(1-bicor((df)))\nclust <- hclust(dist_mat,method = 'average')\ndend <- as.dendrogram(clust)\n\n# Define the mapping between network names and colors\nlabelColors = list(\n    \"geneExpr\" = \"#d62828\",\n    \"isoExpr\" = \"#219ebc\",\n    \"isoUsage\" = \"#ff9914\")\n\n# Iterate over the dendrogram leafs and manually change the node\n# parameters according to the label name (the column name)\ncolLab <- function(n) {\n    if (is.leaf(n)) {\n        \n        # Grab the attributes of the leaf/node\n        a <- attributes(n)\n        \n        # Print the name so that later on you can arrange the heatmap\n        # to match the order in the dendrogram\n        cat(as.character(a$label))\n        cat(\", \")\n        \n        # Extract the name of the network (this regex extracts dev_gene from dev_gene_blahblah)\n        net_name <- str_extract(a$label, \"[:alnum:]+\")\n        \n        # Assign the text color according to the mapping in labelColors\n        if (net_name %in% names(labelColors)) {\n            labCol <- labelColors[[net_name]] \n        } else {\n            labCol <- \"#5603ad\"\n        }\n        \n        # Assign the node color to match the WGCNA color (saddlebrown, turquoise, etc.)\n        mod_color <- str_match(a$label,\"[^_]+_(.*)\")[2]\n        \n        # Add the new node attributes onto the existing node attributes\n        attr(n, \"nodePar\") <- list(a$nodePar,\n                                 cex = 1,\n                                 pch = 15,\n                                 lab.col = labCol, # This is the color of the leaf label (the text)\n                                 col = mod_color)  # This is the color of the leaf (the square)\n        }\n    return(n)\n}\n\n# Apply the iteration function onto our saved dendrogram\nnew_dendro <- dendrapply(dend, colLab)\n\nisoExpr_salmon, isoExpr_purple, isoUsage_orange, isoExpr_darkgrey, isoExpr_mediumpurple3, isoExpr_palevioletred3, isoExpr_floralwhite, isoExpr_green, isoUsage_white, isoExpr_skyblue, isoExpr_darkorange2, isoUsage_darkgrey, isoExpr_sienna3, isoUsage_green, isoUsage_brown, isoUsage_grey, isoExpr_paleturquoise, isoExpr_royalblue, isoUsage_pink, isoExpr_plum1, isoExpr_steelblue, isoExpr_magenta, isoExpr_white, isoUsage_royalblue, isoExpr_darkmagenta, isoExpr_plum2, isoUsage_darkred, isoUsage_salmon, isoExpr_lightcyan1, isoExpr_greenyellow, isoExpr_saddlebrown, isoExpr_darkslateblue, isoExpr_orangered4, isoUsage_purple, isoUsage_saddlebrown, isoExpr_lightyellow, isoExpr_darkturquoise, isoExpr_skyblue3, isoUsage_lightcyan, isoUsage_darkturquoise, isoUsage_lightgreen, geneExpr_cyan, geneExpr_darkturquoise, geneExpr_lightyellow, geneExpr_lightcyan, geneExpr_blue, geneExpr_grey, geneExpr_lightgreen, geneExpr_darkgreen, geneExpr_midnightblue, geneExpr_darkred, geneExpr_magenta, isoExpr_black, isoExpr_darkorange, isoExpr_yellowgreen, isoExpr_darkgreen, isoExpr_orange, isoExpr_ivory, isoExpr_violet, isoExpr_darkolivegreen, isoExpr_lightcyan, isoUsage_magenta, isoExpr_salmon4, isoExpr_lightgreen, isoExpr_tan, isoUsage_black, isoUsage_tan, isoUsage_greenyellow, isoExpr_brown, isoUsage_skyblue, isoExpr_brown4, isoExpr_red, isoExpr_cyan, isoExpr_pink, isoExpr_thistle2, isoExpr_thistle1, isoUsage_midnightblue, isoExpr_bisque4, isoUsage_red, isoUsage_cyan, isoUsage_darkorange, isoExpr_grey60, isoUsage_darkgreen, geneExpr_purple, geneExpr_greenyellow, geneExpr_yellow, geneExpr_turquoise, isoUsage_blue, isoExpr_grey, isoExpr_turquoise, geneExpr_royalblue, isoUsage_turquoise, isoExpr_blue, geneExpr_salmon, geneExpr_black, geneExpr_brown, isoUsage_grey60, isoExpr_lightsteelblue1, isoExpr_midnightblue, isoExpr_darkred, isoUsage_lightyellow, isoExpr_yellow, isoUsage_yellow, geneExpr_green, geneExpr_tan, geneExpr_grey60, geneExpr_pink, geneExpr_red, \n\n# Plot the resulting dendrogram\noptions(repr.plot.width = 30, repr.plot.height = 5, repr.plot.res = 600)\npar(cex=0.8, mar = c(10,2,2,2))\nplot(new_dendro,\n        main = \"Clustering of module eigengenes (bicor)\",\n        xlab = \"\", sub = \"\")\n\n\n\n\n\n\nModule UMAP\n\nlibrary(Seurat)\n\nAttaching SeuratObject\n\n\nAttaching sp\n\nlibrary(tidyverse)\nlibrary(cowplot)\nlibrary(patchwork)\n\n\nAttaching package: 'patchwork'\n\n\nThe following object is masked from 'package:cowplot':\n\n    align_plots\n\nlibrary(igraph)\n\n\nAttaching package: 'igraph'\n\n\nThe following objects are masked from 'package:dplyr':\n\n    as_data_frame, groups, union\n\n\nThe following objects are masked from 'package:purrr':\n\n    compose, simplify\n\n\nThe following object is masked from 'package:tidyr':\n\n    crossing\n\n\nThe following object is masked from 'package:tibble':\n\n    as_data_frame\n\n\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n\n\nThe following object is masked from 'package:base':\n\n    union\n\nlibrary(hdWGCNA) # https://smorabit.github.io/hdWGCNA/#installation\n                 # options(timeout = 600)\n\n\nthis_datExpr = datExpr.isoFr\nthis_net = net.isoFr\nthis_net$colors = labels2colors(net.isoFr$cut2$labels)\nnames(this_net$colors) = names(net.isoFr$cut2$labels)\nMEs = moduleEigengenes(t(this_datExpr), colors=this_net$colors)\nkMEtable = signedKME(t(this_datExpr), datME =MEs$eigengenes,corFnc = \"bicor\")\n\nWarning in bicor(datExpr, datME, , use = \"p\"): bicor: zero MAD in variable 'x'.\nPearson correlation was used for individual columns with zero (or missing) MAD.\n\nthis_anno = datAnno[match(rownames(this_datExpr), datAnno$transcript_id),]\nthis_anno$module = this_net$module\nthis_anno$module.color = this_net$colors\nthis_anno$module.number = this_net$module.number\nidx = grep(\"^TALON\", this_anno$transcript_name)\nthis_anno$transcript_name[idx] = paste0(this_anno$gene_name[idx], '_', this_anno$transcript_name[idx])\n\nmodules_to_plot = c(\"turquoise\", \"blue\", \"brown\", \"pink\")\n#modules_to_plot = unique(this_net$colors)\n\ntidyMods = tibble(transcript_id = rownames(kMEtable), module=this_net$colors,\n                kMEtable)\ntidyMods <- tidyMods %>% pivot_longer(-c(transcript_id,module), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module!=0, module != \"grey\", kMEtoMod !='grey', kMEtoMod != 0) %>% dplyr::select(-kME_to_module)\ntidyMods <- tidyMods %>% left_join(datAnno)\n\nJoining, by = \"transcript_id\"\n\nhubs100 <- tidyMods %>% group_by(module) %>% filter(module %in% modules_to_plot, kMEtoMod == module) %>% slice_max(kME,n=100) %>% dplyr::select(transcript_id) %>% pull()\n\nAdding missing grouping variables: `module`\n\nhubs25 <- tidyMods %>% group_by(module) %>% filter(module %in% modules_to_plot, kMEtoMod == module) %>% slice_max(kME,n=25) %>% dplyr::select(transcript_id) %>% pull()\n\nAdding missing grouping variables: `module`\n\nhubs5 <- tidyMods %>% group_by(module) %>% filter(module %in% modules_to_plot, kMEtoMod == module) %>% slice_max(kME,n=5) %>% dplyr::select(transcript_id) %>% pull()\n\nAdding missing grouping variables: `module`\n\nisoTOM = TOMsimilarityFromExpr(t(this_datExpr[hubs25,]),networkType = 'signed', power = 14)\n\nTOM calculation: adjacency..\n..will not use multithreading.\n Fraction of slow calculations: 0.000000\n..connectivity..\n..matrix multiplication (system BLAS)..\n..normalization..\n..done.\n\ncolnames(isoTOM) = rownames(isoTOM) = hubs25\n\ndf=uwot::umap(isoTOM,n_neighbors = 25,metric = 'cosine',spread = 20,min_dist = .4)\nplot(df)\n\n\n\numap_df <- as.data.frame(df)\ncolnames(umap_df) <- c(\"UMAP1\", \"UMAP2\")\numap_df$gene <- hubs25\numap_df$module <- this_net$colors[umap_df$gene]\numap_df$color <- net.isoExpr$cut2$labels[umap_df$gene]\numap_df$hub <- ifelse(\n    umap_df$gene %in% as.character(unlist(hubs5)), 'hub', 'other'\n)\numap_df <- umap_df %>% left_join(tidyMods %>% filter(module == kMEtoMod) %>% dplyr::select(gene=transcript_id, module, kME), by = c(\"module\", \"gene\"))\numap_df <- umap_df %>% left_join(datAnno %>% dplyr::select(gene_name, transcript_id), by=c(\"gene\" = \"transcript_id\"))\n\nmods <- levels(factor(umap_df$module))\nmods <- mods[mods != 'grey']\n\nggplot(umap_df, aes(x=UMAP1, y=UMAP2)) +\n  geom_point(\n   color=umap_df$module, # color each point by WGCNA module\n   size=umap_df$kME # size of each point based on intramodular connectivity\n  ) +\n  umap_theme()\n\n\n\nsubset_TOM <- isoTOM[umap_df$gene, umap_df$gene[umap_df$hub == 'hub']]\ng1 = graph.adjacency(isoTOM[umap_df$gene, umap_df$gene], mode='undirected', diag=F,weighted = T)\nlayoutMat <- layout.fruchterman.reingold(g1)\ncairo_pdf(file='output/figures/Fig4/IsoUsage_hairballs.pdf', width=20,height=20,family='serif')\nplot.igraph(g1, layout=as.matrix(umap_df[,c(1:2)]),\n            vertex.label = paste0(umap_df$gene_name,\"_\", substr(umap_df$gene,1,15)),\n            vertex.family='serif',\n            edge.curved=0, edge.alpha=.5,\n            edge.color = ifelse(E(g1)$weight > .25, \"grey\", NA),\n            edge.width = E(g1)$weight,\n            vertex.label.cex=0.5, vertex.color = umap_df$module,\n            vertex.size=umap_df$kME^5*4)\ndev.off()\n\nquartz_off_screen \n                2 \n\n  selected_modules <- data.frame(gene_name = umap_df$gene, module = this_net$module.number[umap_df$gene],color= this_net$colors[umap_df$gene])\n  selected_modules <- cbind(selected_modules, umap_df[,c('UMAP1', 'UMAP2', 'hub', 'kME')])\n\n  selected_modules$label <- ifelse(selected_modules$hub %in% \"hub\", selected_modules$gene_name, '')\n  selected_modules$fontcolor <- ifelse(selected_modules$color == 'black', 'gray50', 'black')\n\n  # set frome color\n  # same color as module for all genes, black outline for the selected hub genes\n  selected_modules$framecolor <- ifelse(selected_modules$hub %in% \"hub\", 'black', selected_modules$color)\n\n\n\n\nedge_df <- subset_TOM %>% reshape2::melt()\n  print(dim(edge_df))\n\n[1] 2000    3\n\n    edge_df$color <- future.apply::future_sapply(1:nrow(edge_df), function(i){\n      gene1 = as.character(edge_df[i,'Var1'])\n      gene2 = as.character(edge_df[i,'Var2'])\n\n      col1 <- selected_modules[selected_modules$gene_name == gene1, 'color']\n      col2 <- selected_modules[selected_modules$gene_name == gene2, 'color']\n\n      if(col1 == col2){\n        col = col1\n      } else{\n        col = 'grey90'\n      }\n      col\n  })\n\n  edge_df <- edge_df %>% subset(color != 'grey90')\n\n\n  # subset edges:\n  groups <- unique(edge_df$color)\n\n    # get top strongest edges\n    temp <- do.call(rbind, lapply(groups, function(cur_group){\n      cur_df <- edge_df %>% subset(color == cur_group)\n      n_edges <- nrow(cur_df)\n      cur_df %>% dplyr::top_n(round(n_edges * .5), wt=value)\n    }))\n\n  edge_df <- temp\n  print(dim(edge_df))\n\n[1] 248   4\n\n    edge_df <- edge_df %>% group_by(color) %>% mutate(value=hdWGCNA::scale01(value))\n\n  edge_df$color <- sapply(1:nrow(edge_df), function(i){\n    a = edge_df$value[i]\n    #if(edge_df$value[i] < 0.05){a=0.05}\n    alpha(edge_df$color[i], alpha=a)\n  })\n\n\n  g <- igraph::graph_from_data_frame(\n    edge_df,\n    directed=FALSE,\n    vertices=selected_modules\n  )\n\n  l <- igraph::layout_with_fr(g,)\nplot(\n    g, layout=l,\n    edge.color=adjustcolor(E(g)$color, alpha.f=.25),\n    vertex.size=V(g)$size,\n    edge.curved=0,\n    edge.width=0.5,\n    vertex.color=V(g)$color,\n    vertex.frame.color=V(g)$color,\n    vertex.label=V(g)$label,\n    vertex.label.family='Helvetica', #vertex.label.font=vertex_df$font,\n    vertex.label.font = 3,\n    vertex.label.color = V(g)$fontcolor,\n    vertex.label.cex=.5\n  )\n\n\n\nhub_list = hubs5\nnames(hub_list) = this_net$colors[hubs5]\nhub_labels <- as.character(unlist(hub_list))\n\ng<- igraph::graph_from_data_frame(edge_df, directed=F)\nplot(g, layout= as.matrix(umap_df[,c(1:2)]))\n\n\n\n\n\nIsoExpr.M11 Hairball\n\nthis_datExpr = datExpr.isoExpr\nthis_net = net.isoExpr\nthis_net$colors = labels2colors(this_net$cut2$labels)\nnames(this_net$colors) = names(this_net$cut2$labels)\nMEs = moduleEigengenes(t(this_datExpr), colors=this_net$colors)\nkMEtable = signedKME(t(this_datExpr), datME =MEs$eigengenes,corFnc = \"bicor\")\n\nthis_anno = datAnno[match(rownames(this_datExpr), datAnno$transcript_id),]\nthis_anno$module = this_net$module\nthis_anno$module.color = this_net$colors\nthis_anno$module.number = this_net$module.number\nidx = grep(\"^TALON\", this_anno$transcript_name)\nthis_anno$transcript_name[idx] = paste0(this_anno$gene_name[idx], '_', this_anno$transcript_name[idx])\n\nmodules_to_plot = c(\"greenyellow\")\n#modules_to_plot = unique(this_net$colors)\n\ntidyMods = tibble(transcript_id = rownames(kMEtable), module=this_net$colors,\n                kMEtable)\ntidyMods <- tidyMods %>% pivot_longer(-c(transcript_id,module), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module!=0, module != \"grey\", kMEtoMod !='grey', kMEtoMod != 0) %>% dplyr::select(-kME_to_module)\ntidyMods <- tidyMods %>% left_join(datAnno)\n\nJoining, by = \"transcript_id\"\n\nhubs100 <- tidyMods %>% group_by(module) %>% filter(module %in% modules_to_plot, kMEtoMod == module) %>% slice_max(kME,n=100) %>% dplyr::select(transcript_id) %>% pull()\n\nAdding missing grouping variables: `module`\n\nhubs25 <- tidyMods %>% group_by(module) %>% filter(module %in% modules_to_plot, kMEtoMod == module) %>% slice_max(kME,n=25) %>% dplyr::select(transcript_id) %>% pull()\n\nAdding missing grouping variables: `module`\n\nhubs5 <- tidyMods %>% group_by(module) %>% filter(module %in% modules_to_plot, kMEtoMod == module) %>% slice_max(kME,n=5) %>% dplyr::select(transcript_id) %>% pull()\n\nAdding missing grouping variables: `module`\n\nisoTOM = TOMsimilarityFromExpr(t(this_datExpr[hubs25,]),networkType = 'signed', power = 14)\n\nTOM calculation: adjacency..\n..will not use multithreading.\n Fraction of slow calculations: 0.000000\n..connectivity..\n..matrix multiplication (system BLAS)..\n..normalization..\n..done.\n\ncolnames(isoTOM) = rownames(isoTOM) = hubs25\n\ndf=uwot::umap(isoTOM,n_neighbors = 25,metric = 'cosine',spread = 20,min_dist = .4)\nplot(df)\n\n\n\numap_df <- as.data.frame(df)\ncolnames(umap_df) <- c(\"UMAP1\", \"UMAP2\")\numap_df$gene <- hubs25\numap_df$module <- this_net$colors[umap_df$gene]\numap_df$color <- net.isoExpr$cut2$labels[umap_df$gene]\numap_df$hub <- ifelse(\n    umap_df$gene %in% as.character(unlist(hubs5)), 'hub', 'other'\n)\numap_df <- umap_df %>% left_join(tidyMods %>% filter(module == kMEtoMod) %>% dplyr::select(gene=transcript_id, module, kME), by = c(\"module\", \"gene\"))\numap_df <- umap_df %>% left_join(datAnno %>% dplyr::select(gene_name, transcript_id), by=c(\"gene\" = \"transcript_id\"))\n\nmods <- levels(factor(umap_df$module))\nmods <- mods[mods != 'grey']\n\nggplot(umap_df, aes(x=UMAP1, y=UMAP2)) +\n  geom_point(\n   color=umap_df$module, # color each point by WGCNA module\n   size=umap_df$kME # size of each point based on intramodular connectivity\n  ) +\n  umap_theme()\n\n\n\nsubset_TOM <- isoTOM[umap_df$gene, umap_df$gene[umap_df$hub == 'hub']]\ng1 = graph.adjacency(isoTOM[umap_df$gene, umap_df$gene], mode='undirected', diag=F,weighted = T)\nlayoutMat <- layout.fruchterman.reingold(g1)\ncairo_pdf(file='output/figures/Fig4/IsoExpr_hairballs.pdf', width=20,height=20,family='serif')\nplot.igraph(g1, layout=as.matrix(umap_df[,c(1:2)]),\n            vertex.label = paste0(umap_df$gene_name,\"_\", substr(umap_df$gene,1,15)),\n            vertex.family='serif',\n            edge.curved=0, edge.alpha=.5,\n            edge.color = ifelse(E(g1)$weight > .25, \"grey\", NA),\n            edge.width = E(g1)$weight,\n            vertex.label.cex=0.5, vertex.color = umap_df$module,\n            vertex.size=umap_df$kME^5*4)\ndev.off()\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "analysis/Figure4_Networks_Enrichments.html",
    "href": "analysis/Figure4_Networks_Enrichments.html",
    "title": "Figure 4 - Networks Enrichments",
    "section": "",
    "text": "suppressPackageStartupMessages({\n    library(tidyverse)\n    library(edgeR)\n    library(WGCNA)\n    library(biomaRt)\n    library(openxlsx)\n    library(readxl)\n    library(gprofiler2)\n    library(gridExtra)\n    library(cowplot)\n    library(paletteer)\n})\n\nsource(\"code/fisher_overlap.R\")\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]"
  },
  {
    "objectID": "analysis/Figure4_Networks_Enrichments.html#load-data",
    "href": "analysis/Figure4_Networks_Enrichments.html#load-data",
    "title": "Figure 4 - Networks Enrichments",
    "section": "Load Data",
    "text": "Load Data\n\ncts = read_tsv(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\nRows: 214516 Columns: 35\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (7): annot_gene_id, annot_transcript_id, annot_gene_name, annot_transcr...\ndbl (28): gene_ID, transcript_ID, n_exons, length, 209_1_VZ, 209_2_VZ, 209_3...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nload(\"ref/EWCE/CellTypeData_DamonNeuralFetalOnly.rda\")\ncelltypemarkers <- openxlsx::read.xlsx('https://www.cell.com/cms/10.1016/j.neuron.2019.06.011/attachment/508ae008-b926-487a-b871-844a12acc1f8/mmc5', sheet='Cluster enriched genes') %>% as_tibble()\ncelltypemarkers_tableS5 = openxlsx::read.xlsx('https://ars.els-cdn.com/content/image/1-s2.0-S0896627319305616-mmc6.xlsx',sheet=2)\ncelltypemarkers.bg = read.csv(\"ref/polioudakis_neuron2020/single_cell_background_MJG221228.csv\") %>% dplyr::select(ensembl_gene_id) %>% pull()\ncelltypemarkers.bg = unique(c(celltypemarkers.bg, celltypemarkers$Ensembl))\n\n\ndatExpr.isoCounts = as.data.frame(cts[,12:35])\nrownames(datExpr.isoCounts) = cts$annot_transcript_id\ndatMeta = data.frame(sample=colnames(datExpr.isoCounts))\ndatMeta$Region = substr(datMeta$sample, 7,9)\ndatMeta$Subject = substr(datMeta$sample, 1,3)\ndatMeta$batch = substr(datMeta$sample, 5,5)\ndatAnno = data.frame(gene_id = cts$annot_gene_id, transcript_id=cts$annot_transcript_id,\n                     transcript_name=cts$annot_transcript_name, length=cts$length,\n                     gene_name = cts$annot_gene_name, ensg = substr(cts$annot_gene_id,1,15), novelty=cts$transcript_novelty)\n\nbrainRBPs = read.csv(\"data/RBP_Data/CSVs/RBP_targets_v5.csv\", header=TRUE)\nbrainRBPs = dplyr::select(brainRBPs, -c(MGI.symbol, ENSMUSG))\nencodeRBPs = read.csv(\"data/RBP_Data/CSVs/RBP_targets_ENCODE.csv\", header=TRUE)\nencodeRBPs = encodeRBPs %>% filter(cell.type==\"HepG2\") %>% rename(\"HGNC.symbol\"=\"hgnc_symbol\", \"ENSG\"=\"ensembl_gene_id\")\n\nrbp_targets = rbind(brainRBPs,encodeRBPs)\nrbp_targets$regulation[is.na(rbp_targets$regulation)]=\"\"\n\nmart = useMart(\"ENSEMBL_MART_ENSEMBL\",\"mmusculus_gene_ensembl\")\nf = listFilters(mart); a = listAttributes(mart)\nfeaturesToGet = c(\"ensembl_gene_id\", \"external_gene_name\", \"hsapiens_homolog_ensembl_gene\", \"hsapiens_homolog_associated_gene_name\",\"hsapiens_homolog_orthology_type\")\nmouseHumanHomologs = getBM(attributes = featuresToGet,mart = mart)\n\nhuman_mouse_bg = mouseHumanHomologs %>% as_tibble() %>% filter(hsapiens_homolog_orthology_type == \"ortholog_one2one\") %>% dplyr::select(\"hsapiens_homolog_ensembl_gene\") %>% pull()\n\n\n## Load 3 Networks\n\ndatExpr.isoFr = readRDS(\"data/working/WGCNA/final/datExpr.localIF_batchCorrected_103k.rds\")\nnet.isoFr = readRDS(\"data/working/WGCNA/final/WGCNA_isoformFraction_top103k_signed_sft14_net.rds\")\nnet.isoFr$colors = labels2colors(net.isoFr$cut2$labels)\nnames(net.isoFr$colors) = names(net.isoFr$cut2$labels)\nnet.isoFr$module.number = net.isoFr$cut2$labels\nnet.isoFr$MEs = moduleEigengenes(t(datExpr.isoFr), colors=net.isoFr$colors)\nnet.isoFr$kMEtable = signedKME(t(datExpr.isoFr), datME =net.isoFr$MEs$eigengenes,corFnc = \"bicor\")\n\nWarning in bicor(datExpr, datME, , use = \"p\"): bicor: zero MAD in variable 'x'.\nPearson correlation was used for individual columns with zero (or missing) MAD.\n\ndatExpr.isoExpr = readRDS(file='data/working/WGCNA/final/datExpr.isoExpr_batchCorrected_92k.rds')\nnet.isoExpr = readRDS('data/working/WGCNA/final/WGCNA_isoExpression_top92k_signed_sft9_net.rds')\nnet.isoExpr$colors = labels2colors(net.isoExpr$cut2$labels)\nnames(net.isoExpr$colors) = names(net.isoExpr$cut2$labels)\nnet.isoExpr$module.number = net.isoExpr$cut2$labels\nnet.isoExpr$MEs = moduleEigengenes(t(datExpr.isoExpr), colors=net.isoExpr$colors)\nnet.isoExpr$kMEtable = signedKME(t(datExpr.isoExpr), datME =net.isoExpr$MEs$eigengenes,corFnc = \"bicor\")\n\ndatExpr.geneExpr = readRDS(file='data/working/WGCNA/final/datExpr.geneExpr_batchCorrected_16k.rds')\nnet.geneExpr = readRDS(file='data/working/WGCNA/final/WGCNA_geneExpression_top16k_signed_sft14_net.rds')\nnet.geneExpr$colors = labels2colors(net.geneExpr$cut2$labels)\nnames(net.geneExpr$colors) = names(net.geneExpr$cut2$labels)\nnet.geneExpr$module.number = net.geneExpr$cut2$labels\nnet.geneExpr$MEs = moduleEigengenes(t(datExpr.geneExpr), colors=net.geneExpr$colors)\nnet.geneExpr$kMEtable = signedKME(t(datExpr.geneExpr), datME =net.geneExpr$MEs$eigengenes,corFnc = \"bicor\")"
  },
  {
    "objectID": "analysis/Figure4_Networks_Enrichments.html#network-dendrogram-plots",
    "href": "analysis/Figure4_Networks_Enrichments.html#network-dendrogram-plots",
    "title": "Figure 4 - Networks Enrichments",
    "section": "Network Dendrogram Plots",
    "text": "Network Dendrogram Plots\n\nFig4A\n\nthis_tree = net.isoFr$dendrograms[[1]]\nthis_anno = datAnno[match(rownames(datExpr.isoFr), datAnno$transcript_id),]\nthese_mods = data.frame(IsoUsage=net.isoFr$colors)\nthese_mods$isoExpr = net.isoExpr$colors[this_anno$transcript_id]\nthese_mods$geneExpr = net.geneExpr$colors[this_anno$gene_id]\n\n\ncell_anno = as.data.frame(matrix('white', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n  marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n  cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\n\nrbp.comp = openxlsx::read.xlsx(\"ref/RBPCompilation_Sundararaman_MolCell2016_TableS1.xlsx\", 'Sheet2_1072_RBP_compilation')\nthese_mods$RBP = 'white'\nthese_mods$RBP[this_anno$gene_name %in% rbp.comp$Gene.Symbol] = 'black'\n\n\nplotDendroAndColors(this_tree, colors=cbind(these_mods), dendroLabels = F, cex.colorLabels = 0.4)\n\n\n\n\n\npdf(\"output/figures/Fig4/Fig4A_IsoExprDendro_wRBPComp.pdf\", width=6, height=3.5)\nplotDendroAndColors(this_tree, colors=cbind(these_mods), dendroLabels = F, cex.colorLabels = 0.4)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigS5A\n\nthis_tree = net.geneExpr$dendrograms[[1]]\nthis_anno = datAnno[match(rownames(datExpr.geneExpr), datAnno$gene_id),]\nthese_mods = data.frame(geneExpr=net.geneExpr$colors)\nthese_mods$IsoExpr = net.isoExpr$colors[this_anno$transcript_id]\nthese_mods$IsoUsage = net.isoFr$colors[this_anno$transcript_id]\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n  marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n  cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\nrbp.comp = openxlsx::read.xlsx(\"ref/RBPCompilation_Sundararaman_MolCell2016_TableS1.xlsx\", 'Sheet2_1072_RBP_compilation')\nthese_mods$RBP = 'white'\nthese_mods$RBP[this_anno$gene_name %in% rbp.comp$Gene.Symbol] = 'black'\n\nplotDendroAndColors(this_tree, colors=cbind(these_mods,cell_anno), dendroLabels = F, cex.colorLabels = 0.4)\n\n\n\n\n\npdf(\"output/figures/supplement/FigS5A_Dendro_geneExpr_wCellAnno_wRBP.pdf\", width=8,height=6)\nplotDendroAndColors(this_tree, colors=cbind(these_mods,cell_anno), dendroLabels = F, cex.colorLabels = 0.8)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigS5B\n\nthis_tree = net.isoExpr$dendrograms[[1]]\nthis_anno = datAnno[match(rownames(datExpr.isoExpr), datAnno$transcript_id),]\nthese_mods = data.frame(isoExpr=net.isoExpr$colors)\nthese_mods$GeneExpr = net.geneExpr$colors[this_anno$gene_id]\nthese_mods$IsoUsage = net.isoFr$colors[this_anno$transcript_id]\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n  marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n  cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\nrbp.comp = openxlsx::read.xlsx(\"ref/RBPCompilation_Sundararaman_MolCell2016_TableS1.xlsx\", 'Sheet2_1072_RBP_compilation')\nthese_mods$RBP = 'white'\nthese_mods$RBP[this_anno$gene_name %in% rbp.comp$Gene.Symbol] = 'black'\n\nplotDendroAndColors(this_tree, colors=cbind(these_mods,cell_anno), dendroLabels = F, cex.colorLabels = 0.4)\n\n\n\n\n\npdf(\"output/figures/supplement/FigS5B_Dendro_isoExpr_wCellAnno_wRBP.pdf\", width=8,height=6)\nplotDendroAndColors(this_tree, colors=cbind(these_mods,cell_anno), dendroLabels = F, cex.colorLabels = 0.8)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigS5C\n\nthis_tree = net.isoFr$dendrograms[[1]]\nthis_anno = datAnno[match(rownames(datExpr.isoFr), datAnno$transcript_id),]\nthese_mods = data.frame(isoFr=net.isoFr$colors)\nthese_mods$GeneExpr = net.geneExpr$colors[this_anno$gene_id]\nthese_mods$IsoExpr = net.isoExpr$colors[this_anno$transcript_id]\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n  marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n  cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\nrbp.comp = openxlsx::read.xlsx(\"ref/RBPCompilation_Sundararaman_MolCell2016_TableS1.xlsx\", 'Sheet2_1072_RBP_compilation')\nthese_mods$RBP = 'white'\nthese_mods$RBP[this_anno$gene_name %in% rbp.comp$Gene.Symbol] = 'black'\n\nplotDendroAndColors(this_tree, colors=cbind(these_mods,cell_anno), dendroLabels = F, cex.colorLabels = 0.4)\n\n\n\n\n\npdf(\"output/figures/supplement/FigS5C_Dendro_isoUsage_wCellAnno_wRBP.pdf\", width=8,height=6)\nplotDendroAndColors(this_tree, colors=cbind(these_mods,cell_anno), dendroLabels = F, cex.colorLabels = 0.8)\ndev.off()\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "analysis/Figure4_Networks_Enrichments.html#compare-networks",
    "href": "analysis/Figure4_Networks_Enrichments.html#compare-networks",
    "title": "Figure 4 - Networks Enrichments",
    "section": "Compare Networks",
    "text": "Compare Networks\n\nCell-type enrichment\n\nFisher’s exact\n\ndf_fisher.celltype = data.frame()\nnetworks = list(\"geneExpr\" = net.geneExpr$module.number[datAnno$gene_id], \n                \"isoExpr\" = net.isoExpr$module.number[datAnno$transcript_id], \n                \"isoUsage\" = net.isoFr$module.number[datAnno$transcript_id])\n\nfor(this_net in names(networks)) {\n  all_mods = unique(na.omit(networks[[this_net]][networks[[this_net]] != 0]))\n  \n  for(this_mod in all_mods) {\n    mod_genes = unique(na.omit(datAnno$ensg[networks[[this_net]]==this_mod]))\n    mod_gene.bg = unique(na.omit(datAnno$ensg[!is.na(networks[[this_net]])]))\n    \n    for(this_cell in unique(celltypemarkers$Cluster)) {\n      marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% \n        dplyr::select(Ensembl) %>% pull()\n      enrichment = ORA(mod_genes, marker_genes, mod_gene.bg, celltypemarkers.bg)\n      df_fisher.celltype = rbind(df_fisher.celltype, \n                                 data.frame(net = this_net, mod = this_mod, cell=this_cell,\n                                            as.data.frame(t(enrichment))))\n    }\n  }\n}\n\nfor(col in c(\"OR\", \"Fisher.p\")) df_fisher.celltype[,col] = as.numeric(df_fisher.celltype[,col])\ndf_fisher.celltype$Fisher.p[df_fisher.celltype$OR<1] = 1\ndf_fisher.celltype$Fisher.q = p.adjust(df_fisher.celltype$Fisher.p,'fdr')\n\ndf_fisher.celltype$label = \"\"\ndf_fisher.celltype$label[df_fisher.celltype$Fisher.q<.05] = signif((df_fisher.celltype$OR[df_fisher.celltype$Fisher.q<.05]),1)\n\ndf_fisher.celltype$net = factor(df_fisher.celltype$net, levels=c(\"geneExpr\", \"isoExpr\", \"isoUsage\"))\n\n\n# Order cell types\norder.celltype = c(\"vRG\", \"oRG\", \"PgS\", \"PgG2M\", \"IP\", \"ExN\", \"ExM\", \"ExM-U\", \"ExDp1\", \"ExDp2\", \"InMGE\", \"InCGE\", \"OPC\", \"End\", \"Per\", \"Mic\")\n\n# Order modules\ngeneExpr_order.celltype = c(2,21,9,16,15,1, # Progenitors\n                            5,12,6,8,10, #Exc Neurons\n                            4,11, #Exc Neurons 2\n                            7,19,14, #In Neurons\n                            3,13,17,18,20,22,23) # Other \nisoExpr_order.celltype = c(2,15,41,4,3,11,21, # Progenitors\n                           12,19,23, # Sub progenitors\n                           16, # ExN\n                           1,30,6,20,14,38,5,8,46,34,49,45,31, # Neurons \n                           47,25,26, # Sub neurons\n                           17,42,9,29, # ExM\n                           35,40,53,27, # Sub neurons 2\n                           48,39,13, # In neurons\n                           7,10,18,22,24,28,32,33,36,37,43,44,50,51,52) # Other\nisoUsage_order.celltype = c(3,12,11, # Progenitors to neurons\n                            1,27, # Non-migrating\n                            2,8,14, # Neurons\n                            20,15,24,10,29, # Exc neurons\n                            23, # In neurons\n                            19, # OPC\n                            4,5,6,7,9,13,16,17,18,21,22,25,26,28) # Other\n\ndf_fisher.celltype_geneExpr = df_fisher.celltype  %>% filter(net==\"geneExpr\")\ndf_fisher.celltype_geneExpr$mod = factor(df_fisher.celltype_geneExpr$mod, levels=geneExpr_order.celltype)\ndf_fisher.celltype_isoExpr = df_fisher.celltype  %>% filter(net==\"isoExpr\")\ndf_fisher.celltype_isoExpr$mod = factor(df_fisher.celltype_isoExpr$mod, levels=isoExpr_order.celltype)\ndf_fisher.celltype_isoUsage = df_fisher.celltype  %>% filter(net==\"isoUsage\")\ndf_fisher.celltype_isoUsage$mod = factor(df_fisher.celltype_isoUsage$mod, levels=isoUsage_order.celltype)\n\n# Cell type aggregation\ndf_fisher.celltype = df_fisher.celltype %>% mutate(cell.type = case_when(cell %in% c('vRG', 'oRG', 'PgS', 'PgG2M', 'IP') ~ 'Progenitor',\n                                             cell %in% c('ExN', 'ExM', 'ExM-U', 'ExDp1', 'ExDp2') ~ 'Exc Neuron',\n                                             cell %in% c('InMGE', 'InCGE') ~ 'Inh Neuron',\n                                             cell %in% c('OPC', 'End', 'Per', 'Mic') ~ 'Other'))\n\n\n\n\nFigS6A\n\nCellType_ColorBar = ggplot(df_fisher.celltype %>% filter(net==\"geneExpr\",mod==1),aes(x=factor(cell, levels=order.celltype))) + \n  geom_tile(aes(y=factor(1),fill=cell.type)) + \n  # geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  # scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) +\n  theme_bw() +\n  theme(axis.text.y = element_blank(), \n        axis.ticks.y=element_blank(),\n        axis.text.x = element_text(angle=45,vjust=1, hjust=1, size=6), \n        legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=6), legend.title=element_text(size=6), \n        plot.margin=unit(c(-21,5,5,5),\"pt\"), legend.position=c(0.5,-2.5), legend.box=\"horizontal\", legend.direction=\"horizontal\", \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  labs(x='', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1, nrow=1))\n\nplot_gE = ggplot(df_fisher.celltype_geneExpr,aes(y=factor(mod, levels=rev(levels(mod))), x=factor(cell, levels=order.celltype), label=label, fill=-log10(Fisher.q))) + \n  geom_tile() + facet_wrap(~net, scales='free') + geom_text(size=2.5)+ scale_fill_gradient(low='white',high='red') + \n  theme(axis.text.x = element_blank(), axis.text.y = element_text(size=6), axis.ticks.x=element_blank()) +\n  labs(x='Cell Type', y='Module')\n\nplot_grid(plot_gE,CellType_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS6A_geneExpr_ModOrdered.pdf\", height=6, width=6)\nplot_grid(plot_gE,CellType_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigS6B\n\nplot_iE = ggplot(df_fisher.celltype_isoExpr,aes(y=factor(mod, levels=rev(levels(mod))), x=factor(cell, levels=order.celltype), label=label, fill=-log10(Fisher.q))) + \n  geom_tile() + facet_wrap(~net, scales='free') + geom_text(size=2.5)+ scale_fill_gradient(low='white',high='red') + \n  theme(axis.text.x = element_blank(), axis.text.y = element_text(size=6), axis.ticks.x=element_blank()) +\n  labs(x='Cell Type', y='Module')\nplot_grid(plot_iE,CellType_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS6B_isoExpr_ModOrdered.pdf\", height=6, width=6)\nplot_grid(plot_iE,CellType_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFigS6C\n\nplot_iU = ggplot(df_fisher.celltype_isoUsage,aes(y=factor(mod, levels=rev(levels(mod))), x=factor(cell, levels=order.celltype), label=label, fill=-log10(Fisher.q))) + \n  geom_tile() + facet_wrap(~net, scales='free') + geom_text(size=2.5)+ scale_fill_gradient(low='white',high='red') + \n  theme(axis.text.x = element_blank(), axis.text.y = element_text(size=6), axis.ticks.x=element_blank()) +\n  labs(x='Cell Type', y='Module')\nplot_grid(plot_iU,CellType_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS6C_isoUsage_ModOrdered.pdf\", height=6, width=6)\nplot_grid(plot_iU,CellType_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nRare Var Enrichments\n\nGene level\n\ngeneAnno = rtracklayer::import(\"ref/gencode.v33lift37.annotation.gtf.gz\") %>% as_tibble() %>% filter(type=='gene')\ngeneAnno$ensg = substr(geneAnno$gene_id,1,15)\n\nfu=openxlsx::read.xlsx(('https://static-content.springer.com/esm/art%3A10.1038%2Fs41588-022-01104-0/MediaObjects/41588_2022_1104_MOESM3_ESM.xlsx'),'Supplementary Table 11')\nfu$p_TADA_ASD[fu$p_TADA_ASD==0] = min(fu$p_TADA_ASD[fu$p_TADA_ASD >0],na.rm=T)\nfu$p_TADA_NDD[fu$p_TADA_NDD==0] = min(fu$p_TADA_NDD[fu$p_TADA_NDD >0],na.rm=T)\n\ngeneAnno.logit = data.frame(ASD_fuTADA= -log10(fu$p_TADA_ASD)[match(geneAnno$ensg, fu$gene_id)])\ngeneAnno.logit$NDD_fuTADA = -log10(fu$p_TADA_NDD)[match(geneAnno$ensg, fu$gene_id)]\nSCZ.schema = read_tsv('ref/risk_genes/SCHEMA_gene_results.tsv')\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 18321 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (8): gene_id, group, OR (PTV), OR (Class I), OR (Class II), OR (PTV) up...\ndbl (16): Case PTV, Ctrl PTV, Case mis3, Ctrl mis3, Case mis2, Ctrl mis2, P ...\nlgl  (2): De novo mis3, De novo mis2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngeneAnno.logit$SCZ_schema = -log10(SCZ.schema$`P meta`[match(geneAnno$ensg, SCZ.schema$gene_id)])\nBIP.bipex = read_tsv('ref/risk_genes/BipEx_gene_results.tsv') %>% filter(group==\"Bipolar Disorder\")\n\nRows: 119958 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (4): gene_id, group, damaging_missense_fisher_gnom_non_psych_OR, ptv_fi...\ndbl (16): n_cases, n_controls, damaging_missense_case_count, damaging_missen...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngeneAnno.logit$BIP.bipex = -log10(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(geneAnno$ensg,BIP.bipex$gene_id)])\nEPI.epi25 = read_tsv('ref/risk_genes/Epi25_gene_results.tsv') %>% filter(group==\"EPI\")\n\nRows: 71456 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_id, group\ndbl (9): xcase_lof, xctrl_lof, pval_lof, xcase_mpc, xctrl_mpc, pval_mpc, xca...\nlgl (1): pval_infrIndel\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ngeneAnno.logit$EPI.epi25 = -log10(EPI.epi25$pval[match(geneAnno$ensg,EPI.epi25$gene_id)])\n\nnetworks = data.frame(net=\"isoExpr\", module = net.isoExpr$module.number, transcript_id = names(net.isoExpr$colors))\nnetworks = rbind(networks, data.frame(net='isoUsage', module = net.isoFr$module.number, transcript_id = names(net.isoFr$colors)))\nnetworks$gene_id = datAnno$gene_id[match(networks$transcript_id, datAnno$transcript_id)]\nnetworks = rbind(networks, data.frame(net='geneExpr', module = net.geneExpr$module.number, transcript_id = NA, gene_id=names(net.geneExpr$colors)))\nnetworks$ensg = substr(networks$gene_id,1,15)\n\ndf_logit.gene = data.frame()\nbinaryVec = rep(NA, times=nrow(geneAnno))\nnames(binaryVec) = geneAnno$ensg\n\nfor(this_net in unique(networks$net)) {\n  all_mods = unique(na.omit(networks$module[networks$net ==this_net & networks$module!=0]))\n  \n  for(this_mod in all_mods) {\n    \n    this_binary_vec = binaryVec\n    this_binary_vec[names(this_binary_vec) %in% networks$ensg[networks$net==this_net]] = 0 \n    this_binary_vec[names(this_binary_vec) %in% networks$ensg[networks$net==this_net & networks$module==this_mod]] = 1\n    \n    for(this_rare_var in colnames(geneAnno.logit)) {\n      this_glm = summary(glm(this_binary_vec ~ geneAnno.logit[,this_rare_var] + width + log10(width), data=geneAnno, family='binomial'))\n      df_logit.gene = rbind(df_logit.gene, data.frame(net = this_net, mod = this_mod, set = this_rare_var, t(this_glm$coefficients[2,])))\n      \n    }\n  }\n}\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\n\nWarning: glm.fit: fitted probabilities numerically 0 or 1 occurred\n\ndf_logit.gene$OR = exp(df_logit.gene$Estimate)\ndf_logit.gene$P = df_logit.gene$Pr...z..\ndf_logit.gene$P[df_logit.gene$OR < 1] = 1\ndf_logit.gene$Q = p.adjust(df_logit.gene$P,'fdr')\n\ndf_logit.gene$label = signif((df_logit.gene$OR),3)\ndf_logit.gene$label[df_logit.gene$Q>.05] = \"\"\ndf_logit.gene$mod = factor(df_logit.gene$mod,levels=c(100:1))\n\n\ndf_logit.gene_geneExpr = df_logit.gene %>% filter(net==\"geneExpr\")\ndf_logit.gene_geneExpr$mod = factor(df_logit.gene_geneExpr$mod, levels=geneExpr_order.celltype)\ndf_logit.gene_isoExpr = df_logit.gene %>% filter(net==\"isoExpr\")\ndf_logit.gene_isoExpr$mod = factor(df_logit.gene_isoExpr$mod, levels=isoExpr_order.celltype)\ndf_logit.gene_isoUsage = df_logit.gene %>% filter(net==\"isoUsage\")\ndf_logit.gene_isoUsage$mod = factor(df_logit.gene_isoUsage$mod, levels=isoUsage_order.celltype)\n\n# Module aggregation\ndf_logit.gene_geneExpr = df_logit.gene_geneExpr %>% mutate(mod.group = case_when(mod %in% c(2,21,9,16,15,1) ~ 'Progenitor',\n                                                                                 mod %in% c(5,12,6,8,10,4,11) ~ 'Exc Neuron',\n                                                                                 mod %in% c(7,19) ~ 'Inh Neuron',\n                                                                                 mod %in% c(14,3,13,17,18,20,22,23) ~ 'Other'))\ndf_logit.gene_isoExpr = df_logit.gene_isoExpr %>% mutate(mod.group = case_when(mod %in% c(2,15,41,4,3,11,21,12,19,23,26) ~ 'Progenitor',\n                                                                                 mod %in% c(16,1,30,6,20,14,38,5,8,46,34,49,45,31,47,25,17,42,9,29,35,40,53,27,48) ~ 'Exc Neuron',\n                                                                                 mod %in% c(39,13,7) ~ 'Inh Neuron',\n                                                                                 mod %in% c(10,18,22,24,28,32,33,36,37,43,44,50,51,52) ~ 'Other'))\ndf_logit.gene_isoUsage = df_logit.gene_isoUsage %>% mutate(mod.group = case_when(mod %in% c(27,19) ~ 'Progenitor',\n                                                                                 mod %in% c(2,8,14,20,15,24,10,29) ~ 'Exc Neuron',\n                                                                                 mod %in% c(23) ~ 'Inh Neuron',\n                                                                                 mod %in% c(4,5,6,7,9,13,16,17,18,21,22,25,26,28) ~ 'Other',\n                                                                                 mod %in% c(3,12,11,1) ~ 'Prog/Neur'))\n\n# Order of Rare Vars\norder.rarevar = c(\"NDD_fuTADA\", \"ASD_fuTADA\", \"SCZ_schema\", \"BIP.bipex\", \"EPI.epi25\")\n\n\nModGroup_ColorBar.gE = ggplot(df_logit.gene_geneExpr,aes(x=factor(mod, levels = rev(levels(mod))))) + \n  geom_tile(aes(y=factor(1),fill=mod.group)) + \n  # geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  theme_bw() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.text.y = element_text(angle=0,vjust=1, hjust=1, size=5), \n        # legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=3), legend.title=element_text(size=4), \n        plot.margin=unit(c(5,-10,5,5),\"pt\"), legend.position=c(-3,0.8), \n        # legend.box=\"vertical\", legend.direction=\"vertical\", \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  scale_y_discrete(labels=rev(levels(df_logit.gene_geneExpr$mod))) +\n  labs(x='Module', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(reverse=TRUE)) + coord_flip()\nlegend.gE = get_legend(ModGroup_ColorBar.gE + theme(legend.position=c(2.5,0.5), legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=3), legend.title=element_text(size=4),\n                                         legend.box=\"horizontal\", legend.direction=\"horizontal\"))\n\nplot_logit.gE = ggplot(df_logit.gene_geneExpr,aes(y=factor(mod, levels=rev(levels(mod))), x=factor(set, levels=order.rarevar), label=label, fill=-log10(Q))) + \n  # scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n  geom_tile() + \n  facet_wrap(~net, scales='free') + \n  geom_text(size=1) + scale_fill_gradient(low='white',high='red') + \n  theme(axis.text.x = element_text(angle=45,hjust=1, size=4), axis.text.y = element_blank(), axis.title = element_text(size=5),\n        axis.ticks.y = element_blank(), plot.margin=unit(c(5,5,5,-10),\"pt\"),\n        legend.key.size=unit(0.25,'cm'), legend.text=element_text(size=5), legend.title=element_text(size=5)) + \n  labs(x='Rare Variant Set', y='')\n\nModGroup_ColorBar.iE = ggplot(df_logit.gene_isoExpr,aes(x=factor(mod, levels = rev(levels(mod))))) + \n  geom_tile(aes(y=factor(1),fill=mod.group)) + \n  # geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  theme_bw() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.text.y = element_text(angle=0,vjust=1, hjust=1, size=4), \n        # legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=6), legend.title=element_text(size=6), \n        plot.margin=unit(c(5,-10,5,5),\"pt\"), legend.position=c(0.5,-2.5), \n        # legend.box=\"vertical\", legend.direction=\"vertical\", \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  scale_y_discrete(labels=rev(levels(df_logit.gene_geneExpr$mod))) +\n  labs(x='Module', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1, nrow=1)) + coord_flip()\nlegend.iE = get_legend(ModGroup_ColorBar.iE + theme(legend.position=c(2.5,0.5), legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=3), legend.title=element_text(size=4),\n                                                    legend.box=\"horizontal\", legend.direction=\"horizontal\"))\n\nplot_logit.iE = ggplot(df_logit.gene_isoExpr,aes(y=factor(mod, levels=rev(levels(mod))), x=factor(set, levels=order.rarevar), label=label, fill=-log10(Q))) + \n  # scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n  geom_tile() + facet_wrap(~net, scales='free') + geom_text(size=1) + scale_fill_gradient(low='white',high='red') + \n  theme(axis.text.x = element_text(angle=45,hjust=1, size=4), axis.text.y = element_blank(), axis.title = element_text(size=5),\n        axis.ticks.y = element_blank(), plot.margin=unit(c(5,5,5,-10),\"pt\"),\n        legend.key.size=unit(0.25,'cm'), legend.text=element_text(size=5), legend.title=element_text(size=5)) + \n  labs(x='Rare Variant Set', y='')\n\nModGroup_ColorBar.iU = ggplot(df_logit.gene_isoUsage,aes(x=factor(mod, levels = rev(levels(mod))))) + \n  geom_tile(aes(y=factor(1),fill=mod.group)) + \n  # geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  theme_bw() +\n  theme(axis.text.x = element_blank(),\n        axis.ticks.x = element_blank(),\n        axis.text.y = element_text(angle=0,vjust=1, hjust=1, size=4), \n        # legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=6), legend.title=element_text(size=6), \n        plot.margin=unit(c(5,-10,5,5),\"pt\"), legend.position=c(0.5,-2.5), \n        # legend.box=\"vertical\", legend.direction=\"vertical\", \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  scale_y_discrete(labels=rev(levels(df_logit.gene_geneExpr$mod))) +\n  labs(x='Module', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1, nrow=1)) + coord_flip()\nlegend.iU = get_legend(ModGroup_ColorBar.iU + theme(legend.position=c(2.5,0.5), legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=3), legend.title=element_text(size=4),\n                                                    legend.box=\"horizontal\", legend.direction=\"horizontal\"))\n\nplot_logit.iU = ggplot(df_logit.gene_isoUsage,aes(y=factor(mod, levels=rev(levels(mod))), x=factor(set, levels=order.rarevar), label=label, fill=-log10(Q))) + \n  # scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n  geom_tile() + facet_wrap(~net, scales='free') + geom_text(size=1) + scale_fill_gradient(low='white',high='red') + \n  theme(axis.text.x = element_text(angle=45,hjust=1, size=4), axis.text.y = element_blank(), axis.title = element_text(size=5),\n        axis.ticks.y = element_blank(), plot.margin=unit(c(5,5,5,-10),\"pt\"),\n        legend.key.size=unit(0.25,'cm'), legend.text=element_text(size=5), legend.title=element_text(size=5)) + \n  labs(x='Rare Variant Set', y='')\n\nFigS5_C_geneExpr = plot_grid(ModGroup_ColorBar.gE,plot_logit.gE, legend.gE, align=\"h\", nrow=2, axis=\"bt\", rel_widths=c(1,4), rel_heights=c(20,1))\nFigS5_C_isoExpr = plot_grid(ModGroup_ColorBar.iE,plot_logit.iE, legend.iE, align=\"h\", nrow=2, axis=\"bt\", rel_widths=c(1,4), rel_heights=c(20,1))\nFigS5_C_isoUsage = plot_grid(ModGroup_ColorBar.iU,plot_logit.iU, legend.iU, align=\"h\", nrow=2, axis=\"bt\", rel_widths=c(1,4), rel_heights=c(20,1))\n\nplot_grid(FigS5_C_geneExpr,FigS5_C_isoExpr,FigS5_C_isoUsage, align=\"h\", nrow=1, axis=\"bt\", rel_widths=c(1,1,1))\n\n\n\n\n\n\n\nGWAS Enrichments\n\ndf_gwas = data.frame()\ngwas = dir(\"data/LDSC_cell_type_specific/networks/isoExpr_cts_result/\", pattern=\"txt\")\nfor(this_gwas in gwas) {\n  this_ldsc = read.table(paste0(\"data/LDSC_cell_type_specific/networks/isoExpr_cts_result/\",this_gwas),header = T)\n  colnames(this_ldsc)[1] = 'module'\n  this_ldsc$gwas = gsub(\".cell_type_results.txt\", \"\", this_gwas)\n  this_ldsc$net = 'isoExpr'\n  df_gwas = rbind(df_gwas, this_ldsc)\n}\n\ngwas = dir(\"data/LDSC_cell_type_specific/networks/isoUsage_cts_result/\", pattern=\"txt\")\nfor(this_gwas in gwas) {\n  this_ldsc = read.table(paste0(\"data/LDSC_cell_type_specific/networks/isoUsage_cts_result/\",this_gwas),header = T)\n  colnames(this_ldsc)[1] = 'module'\n  this_ldsc$gwas = gsub(\".cell_type_results.txt\", \"\", this_gwas)\n  this_ldsc$net = 'isoUsage'\n  df_gwas = rbind(df_gwas, this_ldsc)\n}\n\ngwas = dir(\"data/LDSC_cell_type_specific/networks/geneExpr_cts_result/\", pattern=\"txt\")\nfor(this_gwas in gwas) {\n  this_ldsc = read.table(paste0(\"data/LDSC_cell_type_specific/networks/geneExpr_cts_result/\",this_gwas),header = T)\n  colnames(this_ldsc)[1] = 'module'\n  this_ldsc$gwas = gsub(\".cell_type_results.txt\", \"\", this_gwas)\n  this_ldsc$net = 'geneExpr'\n  df_gwas = rbind(df_gwas, this_ldsc)\n}\n\n\ndf_gwas$fdr = p.adjust(df_gwas$Coefficient_P_value,'fdr')\ndf_gwas$mod = as.numeric(gsub(\"M\", \"\", unlist(lapply(strsplit(unlist(lapply(strsplit(df_gwas$module, \"[.]\"),'[',2)), '_'),'[',1))))\ndf_gwas$Zscore = df_gwas$Coefficient/df_gwas$Coefficient_std_error\n\n\n\nRBP Enrichments\n\nnetworks = list(\"net.isoExpr\" = net.isoExpr$colors[datAnno$transcript_id], \n                \"net.isoFr\" = net.isoFr$colors[datAnno$transcript_id],\n                \"net.geneExpr\" = net.geneExpr$colors[datAnno$gene_id])\n\ndf_fisher_rbp = data.frame()\n\nfor(this_net in names(networks)) {\n  all_mods = unique(na.omit(networks[[this_net]][networks[[this_net]] != 'grey']))\n  \n  for(this_mod in all_mods) {\n    \n    if(this_net == \"net.geneExpr\") {\n      modGenes = substr(unique(na.omit(names(networks[[this_net]][networks[[this_net]] == this_mod]))), 1,15)\n      modGeneg.bg = substr(unique(na.omit(names(networks[[this_net]]))),1,15)\n    } else {\n      modTx = unique(na.omit(names(networks[[this_net]][networks[[this_net]] == this_mod])))\n      modGenes = unique(datAnno$ensg[match(modTx, datAnno$transcript_id)])\n      modGeneg.bg = unique(datAnno$ensg[match(names(networks[[this_net]]), datAnno$transcript_id)])\n    } \n    for(this_dataset in unique(rbp_targets$dataset.id)) {\n      this_rbp = rbp_targets %>% filter(dataset.id == this_dataset) %>% mutate(target = paste0(RBP, \"_\", data.type, \"_\", cell.type)) %>% dplyr::select(target) %>% unique()  %>% pull()\n      target_genes = rbp_targets %>% filter(dataset.id == this_dataset) %>% dplyr::select(ENSG) %>% pull()\n      \n      if(grepl(\"Human\",this_rbp)) {\n        this_or = ORA(modGenes, target_genes, unique(datAnno$ensg), unique(datAnno$ensg))\n      } else {\n        this_or = ORA(modGenes, target_genes, unique(datAnno$ensg), human_mouse_bg)\n      }\n      df_fisher_rbp = rbind(df_fisher_rbp, data.frame(net = this_net, mod = this_mod, dataset = this_dataset, target = this_rbp, t(this_or)))\n    }\n  }}\n\n# Order of curated RBPs\norder.brainRBPs = read_excel(\"data/RBP_Data/curatedRBPs_order.xlsx\") %>% as_tibble()\n# Order Encode by Target Regions\norder.Encode.TarReg = read_excel(\"data/RBP_Data/ENCODE_vanNostrand_NatMeth2016_Fig2a_order.xlsx\", sheet=2)\norder.Encode.TarReg = order.Encode.TarReg %>% filter(name %in% df_fisher_rbp$target)\norder.RBPs = rbind(order.brainRBPs, order.Encode.TarReg)\n\ndf_fisher_rbp$OR = as.numeric(df_fisher_rbp$OR)\ndf_fisher_rbp$Fisher.p[df_fisher_rbp$OR<1] = 1\ndf_fisher_rbp$Fisher.p = p.adjust(as.numeric(df_fisher_rbp$Fisher.p),'fdr')\ndf_fisher_rbp$label = signif(df_fisher_rbp$OR,2)\ndf_fisher_rbp$label[df_fisher_rbp$Fisher.p>.001] = ''\ndf_fisher_rbp$target.region = order.RBPs$target.region[match(df_fisher_rbp$target, order.RBPs$name)]\ndf_fisher_rbp$data.type = rbp_targets$data.type[match(df_fisher_rbp$dataset, rbp_targets$dataset.id)]\ndf_fisher_rbp$cell.type = rbp_targets$cell.type[match(df_fisher_rbp$dataset, rbp_targets$dataset.id)]\ndf_fisher_rbp<-df_fisher_rbp %>% left_join(data.frame(mod.num = 1:100, mod=labels2colors(1:100)))\n\nJoining, by = \"mod\"\n\ndf_fisher_rbp$target = factor(df_fisher_rbp$target, levels=order.RBPs$name)\n\n\n\nTableS4D\n\nTableS4D <- df_fisher_rbp %>% mutate(module.color = mod, mod = paste0(net,\"M.\",mod.num,\"_\",mod))\nwrite_tsv(TableS4D, file=\"output/tables/TableS4D_fisherRBP.tsv\")\n\n\n\nFigS6B\n\n# Order of modules\ndf_fisher_rbp.geneExpr = df_fisher_rbp  %>% filter(net==\"net.geneExpr\")\ndf_fisher_rbp.geneExpr$mod.num = factor(df_fisher_rbp.geneExpr$mod.num, levels=geneExpr_order.celltype)\ndf_fisher_rbp.isoExpr = df_fisher_rbp  %>% filter(net==\"net.isoExpr\")\ndf_fisher_rbp.isoExpr$mod.num = factor(df_fisher_rbp.isoExpr$mod.num, levels=isoExpr_order.celltype)\ndf_fisher_rbp.isoUsage = df_fisher_rbp  %>% filter(net==\"net.isoFr\")\ndf_fisher_rbp.isoUsage$mod.num = factor(df_fisher_rbp.isoUsage$mod.num, levels=isoUsage_order.celltype)\n\n# Color bar for RBP TargetRegions\nRBP_ColorBar = ggplot(df_fisher_rbp %>% filter(net==\"net.isoFr\",mod.num==1),aes(x=target, label=target.region)) + \n  # geom_tile(aes(y=factor(1),fill=data.type)) + \n  geom_tile(aes(y=factor(1),fill=target.region)) + \n  # geom_point(aes(y=factor(1), shape=target.region),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n  # scale_x_discrete(labels=df_fisher$RBP) +\n  scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) +\n  theme_bw() +\n  theme(axis.text.y = element_blank(), \n        axis.ticks.y=element_blank(),\n        axis.text.x = element_text(angle=45,vjust=1, hjust=1, size=5), \n        legend.key.size=unit(0.3,'cm'), legend.text=element_text(size=6), legend.title=element_text(size=6), \n        plot.margin=unit(c(-21,5,5,5),\"pt\"), legend.position=c(0.5,-2.5), legend.box=\"horizontal\", legend.direction=\"horizontal\", \n        panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n  labs(x='', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1, nrow=1))\n\nplot_geneExpr = ggplot(df_fisher_rbp.geneExpr,aes(y=factor(mod.num, levels=rev(levels(mod.num))), x=target, label=label, fill=-log10(Fisher.p))) + \n  scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n  geom_tile() + \n  # facet_wrap(~net, scales='free') + \n  geom_text(size=1) + scale_fill_gradient(low='white',high='red', limits=c(0,200)) + \n  theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + labs(x='', y='')\ncol1_gE = plot_grid(plot_geneExpr,RBP_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\ncol2_gE = plot_grid(ModGroup_ColorBar.gE + theme(plot.margin=unit(c(5,-20,5,5),\"pt\")),NULL, ncol=1, rel_heights=c(9,1))\n\nplot_grid(col2_gE, col1_gE, ncol=2, rel_widths=c(1,20))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS6B_geneExpr_ModOrdered.pdf\", height=6, width=20)\nplot_grid(col2_gE, col1_gE, ncol=2, rel_widths=c(1,20))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\nplot_isoExpr = ggplot(df_fisher_rbp.isoExpr,aes(y=factor(mod.num, levels=rev(levels(mod.num))), x=target, label=label, fill=-log10(Fisher.p))) + \n  scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n  geom_tile() + \n  # facet_wrap(~net, scales='free') + \n  geom_text(size=1) + scale_fill_gradient(low='white',high='red', limits=c(0,200)) + \n  theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + labs(x='', y='')\ncol1_iE = plot_grid(plot_isoExpr,RBP_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\ncol2_iE = plot_grid(ModGroup_ColorBar.iE + theme(plot.margin=unit(c(5,-20,5,5),\"pt\")),NULL, ncol=1, rel_heights=c(9,1))\nplot_grid(col2_iE, col1_iE, ncol=2, rel_widths=c(1,20))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS6B_isoExpr_ModOrdered.pdf\", height=6, width=20)\nplot_grid(col2_iE, col1_iE, ncol=2, rel_widths=c(1,20))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\nplot_isoUsage = ggplot(df_fisher_rbp.isoUsage,aes(y=factor(mod.num, levels=rev(levels(mod.num))), x=target, label=label, fill=-log10(Fisher.p))) + \n  scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n  geom_tile() + \n  # facet_wrap(~net, scales='free') + \n  geom_text(size=1) + scale_fill_gradient(low='white',high='red', limits=c(0,200)) + \n  theme(axis.text.x=element_blank(), axis.ticks.x=element_blank(), axis.text.y=element_blank(), axis.ticks.y=element_blank()) + labs(x='', y='')\ncol1_iU = plot_grid(plot_isoUsage,RBP_ColorBar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(9,1))\ncol2_iU = plot_grid(ModGroup_ColorBar.iU + theme(plot.margin=unit(c(5,-20,5,5),\"pt\")),NULL, ncol=1, rel_heights=c(9,1))\nplot_grid(col2_iU, col1_iU, ncol=2, rel_widths=c(1,20))\n\n\n\n\n\npdf(\"output/figures/supplement/FigS6B_isoUsage_ModOrdered.pdf\", height=6, width=20)\nplot_grid(col2_iU, col1_iU, ncol=2, rel_widths=c(1,20))\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nFig4B\n\nFig4B_density.rbp = ggplot(df_fisher_rbp %>% filter(Fisher.p <= .001), aes(x=-log10(Fisher.p), fill=net)) + \n  geom_density(alpha=0.25, size=0.2, position=\"identity\", stat='bin', binwidth=15) +\n  scale_y_log10() +\n  theme_bw() + theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(), axis.text = element_text(size=5), axis.title = element_text(size=8),\n                     legend.position=\"top\", legend.key.size = unit(0.25,'cm'), legend.title=element_text(size=5)) +\n  labs(y='RBP enrichments', x='-log10(pValue)')\n\nFig4B_density.rbp\n\nWarning: Transformation introduced infinite values in continuous y-axis\n\n\n\n\n\n\npdf(\"output/figures/Fig4/Fig4B_density_RBPEnrich.pdf\", height=2, width=3)\nFig4B_density.rbp\n\nWarning: Transformation introduced infinite values in continuous y-axis\n\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\nFig4B_density.celltype = ggplot(df_fisher.celltype %>% filter(Fisher.q <= .001), aes(x=-log10(Fisher.q), fill=net)) + \n  geom_density(alpha=0.25, size=0.2, position=\"identity\", stat='bin', binwidth=15) +\n  scale_y_log10() +\n  theme_bw() + theme(panel.grid.major=element_blank(), panel.grid.minor=element_blank(), axis.text = element_text(size=5), axis.title = element_text(size=8),\n                     legend.position=\"top\", legend.key.size = unit(0.25,'cm'), legend.title=element_text(size=5)) +\n  labs(y='Cell Type enrichments', x='-log10(pValue)')  \nFig4B_density.celltype\n\nWarning: Transformation introduced infinite values in continuous y-axis\n\n\n\n\n\n\npdf(\"output/figures/Fig4/Fig4B_density_CellTypeEnrich.pdf\", height=2, width=3)\nFig4B_density.celltype\n\nWarning: Transformation introduced infinite values in continuous y-axis\n\ndev.off()\n\nquartz_off_screen \n                2"
  },
  {
    "objectID": "analysis/Figure4_Networks_Enrichments.html#annotate-individual-modules",
    "href": "analysis/Figure4_Networks_Enrichments.html#annotate-individual-modules",
    "title": "Figure 4 - Networks Enrichments",
    "section": "Annotate Individual Modules",
    "text": "Annotate Individual Modules\n\nFig4C,D and FigS7\n\n\nIsoUsage Network\n\nthis_datExpr = datExpr.isoFr\nthis_net = net.isoFr\nthis_net$module = paste0(\"M\", this_net$module.number, \".\", labels2colors(this_net$module.number))\nfileBaseNet=\"datExpr.localIF_batchCorrected_103k_byTargetRegion_Reordered_RBPModColor\"\n\n#Generate MEs and kME table for Network\nMEs = moduleEigengenes(t(this_datExpr), colors=this_net$module.number)\nkMEtable = signedKME(t(this_datExpr), datME =MEs$eigengenes,corFnc = \"bicor\")\n\nthis_anno = datAnno[match(rownames(this_datExpr), datAnno$transcript_id),]\nidx = grep(\"^TALON\", this_anno$transcript_name)\nthis_anno$transcript_name[idx] = paste0(this_anno$gene_name[idx], '_', this_anno$transcript_name[idx])\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n  marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n  cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\ntidyMods = tibble(transcript_id = rownames(kMEtable), module=this_net$module, module.color = this_net$colors, module.number=this_net$module.number, kMEtable)\ntidyMods <- tidyMods %>% pivot_longer(-c(transcript_id,module,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module!=0, module != \"grey\", kMEtoMod !='grey', kMEtoMod != 0) %>% dplyr::select(-kME_to_module)\ntidyMods <- tidyMods %>% left_join(this_anno)\n\nJoining, by = \"transcript_id\"\n\ntidyMods %>% group_by(module) %>% filter(kMEtoMod == module.number) %>% slice_max(kME,n=10)\n\n\npdf(file=paste0(\"output/figures/Fig4/\", fileBaseNet, \".pdf\"),width=15,height=8)\nplotDendroAndColors(this_net$tree, colors=cbind((this_net$colors),cell_anno), dendroLabels = F)\n\nggplot(df_fisher.celltype %>% filter(net==\"isoUsage\"), aes(x=factor(cell, levels=order.celltype),y=factor(mod,levels=c(100:1)), label=label, fill=-log10(Fisher.p))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text(size=3) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + labs(x=\"\",y=\"\")\n\nfor(i in 1:(ncol(MEs$eigengenes))) {\n# for(i in 2:2) {\n  print(i)\n  this_mod = gsub(\"ME\", \"\", colnames(MEs$eigengenes)[i])\n  mod_color = tidyMods %>% filter(module.number==this_mod,kMEtoMod==this_mod) %>% dplyr::select(module.color) %>% unique() %>% as.character()\n  mod_genes = tidyMods %>% filter(module.number==this_mod,kMEtoMod==this_mod) %>% arrange(-kME) %>% dplyr::select(ensg) %>% pull()\n  if(!this_mod %in% c(\"grey\", 0, \"M0.grey\")) {\n    this_plot = data.frame(datMeta, eig=MEs$eigengenes[,i])\n    g1 = ggplot(this_plot, aes(x=Region, y=eig, color=Subject)) + geom_point() + ggtitle(paste0(\"Module \",this_mod, \": \", labels2colors(as.numeric(this_mod)), \" n=\", length(mod_genes)))\n    g2 = tidyMods %>% filter(module.number==this_mod, kMEtoMod==this_mod) %>% slice_max(kME,n=25) %>% ggplot(aes(x=reorder(transcript_name, kME), y=kME, fill=novelty)) + geom_bar(stat='identity') + coord_flip() + labs(x=\"\") + scale_fill_manual(values = colorVector)\n    \n\n    g3=ggplot(df_fisher.celltype %>% filter(net==\"isoUsage\",mod==this_mod),\n              # aes(x=reorder(cell, -Fisher.p), \n              aes(x=factor(cell, levels=order.celltype), \n                  y=-log10(Fisher.p), fill=OR)) + \n      geom_bar(stat='identity') + \n      coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')\n    \n    # Add pathway enrichments\n    path = gprofiler2::gost(query=mod_genes,ordered_query = T,correction_method = 'fdr',\n                            custom_bg = unique(datAnno$ensg), sources = c(\"GO\",\"KEGG\", \"REACTOME\"))\n    if(!is.null(path)) {\n      df_path = as_tibble(path$result)\n      df_path <- df_path %>% filter(term_size > 5, term_size < 1000)\n      g4 <- df_path %>% group_by(source) %>% slice_min(p_value,n=5,with_ties = F) %>% ungroup() %>%\n        ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity') + theme_bw() + \n        labs(x=\"\")  + scale_x_discrete(labels = function(x) str_wrap(x, width=30)) +\n        facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none') + theme(axis.text.y = element_text(size=8)) +\n        coord_flip()\n    } else {\n      print(\"No pathway enrichment for this module\")\n      g4=NULL\n    }\n    \n    g5=ggplot(df_fisher_rbp %>% filter(net==\"net.isoFr\",mod.num==this_mod),\n              aes(x=target, y=-log10(Fisher.p), fill=OR)) + \n      geom_bar(stat='identity',position = position_dodge2()) + \n      labs(x=\"\", y=\"Enrichment\\n(-log10 q-value)\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"RBP Enrichment\") + \n      scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) + \n      scale_fill_gradient(low=\"grey60\", high=mod_color) + \n      theme(axis.text.y = element_text(size=5), axis.text.x = element_blank(), axis.ticks.x=element_blank(), plot.margin=unit(c(5,5,0,5),\"pt\"))\n    # + coord_flip()\n    Bar = ggplot(df_fisher_rbp %>% filter(net==\"net.isoFr\",mod.num==this_mod),aes(x=target, label=target.region)) + \n      # geom_tile(aes(y=factor(1),fill=data.type)) + \n      geom_tile(aes(y=factor(1),fill=target.region)) + \n      # geom_point(aes(y=factor(1), shape=target.region),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n      geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n      # scale_x_discrete(labels=df_fisher$RBP) +\n      scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) +\n      theme_bw() +\n      theme(axis.text.y = element_blank(), \n            axis.ticks.y=element_blank(),\n            axis.text.x = element_text(angle=45,vjust=1, hjust=1, size=5), \n            legend.key.size=unit(0.25,'cm'), legend.text=element_text(size=5), legend.title=element_text(size=5), \n            plot.margin=unit(c(-20,5,5,5),\"pt\"), legend.position=c(0.5,-4), legend.box=\"horizontal\", legend.direction=\"horizontal\", \n            panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n      labs(x='', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1, nrow=1))\n    g5.Bar = plot_grid(g5,Bar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(4,1))\n    \n    # Rare Var\n    g6=ggplot(df_logit.gene %>% filter(net==\"isoUsage\",mod==this_mod),aes(x=reorder(set, -Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity',position = position_dodge2()) + \n      coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"Rare Var Enrichment\")\n    \n    # GWAS\n    g7=ggplot(df_gwas %>% filter(net==\"isoUsage\",mod==this_mod),aes(x=reorder(gwas, -fdr), y=-log10(fdr), fill=Zscore)) + geom_bar(stat='identity',position = position_dodge2()) + scale_fill_gradient2()+\n      coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red') + ggtitle(\"GWAS Enrichment\")\n    \n    \n    gridExtra::grid.arrange(grobs=list(g1,g2,g3,g4,g5.Bar,g6,g7),layout_matrix=rbind(c(1,1,1,3,3,4,4,7,7,7),\n                                                                                 c(2,2,2,3,3,4,4,7,7,7), \n                                                                                 c(2,2,2,3,3,4,4,7,7,7), \n                                                                                 c(2,2,2,3,3,4,4,7,7,7),\n                                                                                 c(6,6,6,5,5,5,5,5,5,5),\n                                                                                 c(6,6,6,5,5,5,5,5,5,5)))\n  }\n}\n\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\n\ndev.off()\n\n# A tibble: 290 × 12\n# Groups:   module [29]\n   transcr…¹ module modul…² modul…³   kME kMEto…⁴ gene_id trans…⁵ length gene_…⁶\n   <chr>     <chr>  <chr>     <dbl> <dbl> <chr>   <chr>   <chr>    <dbl> <chr>  \n 1 ENST0000… M1.tu… turquo…       1 0.996 1       ENSG00… PKM-202   2305 PKM    \n 2 ENST0000… M1.tu… turquo…       1 0.992 1       ENSG00… CTNNA1…   3754 CTNNA1 \n 3 ENST0000… M1.tu… turquo…       1 0.992 1       ENSG00… SMARCE…   5150 SMARCE1\n 4 ENST0000… M1.tu… turquo…       1 0.992 1       ENSG00… USP5-2…   3083 USP5   \n 5 ENST0000… M1.tu… turquo…       1 0.990 1       ENSG00… TRIM9-…   5284 TRIM9  \n 6 ENST0000… M1.tu… turquo…       1 0.989 1       ENSG00… TWF1-2…   3045 TWF1   \n 7 ENST0000… M1.tu… turquo…       1 0.988 1       ENSG00… SSR1-2…   9661 SSR1   \n 8 ENST0000… M1.tu… turquo…       1 0.987 1       ENSG00… RPN2-2…   2227 RPN2   \n 9 ENST0000… M1.tu… turquo…       1 0.987 1       ENSG00… DPF2-2…   3714 DPF2   \n10 ENST0000… M1.tu… turquo…       1 0.986 1       ENSG00… DYNC1I…   2572 DYNC1I2\n# … with 280 more rows, 2 more variables: ensg <chr>, novelty <chr>, and\n#   abbreviated variable names ¹​transcript_id, ²​module.color, ³​module.number,\n#   ⁴​kMEtoMod, ⁵​transcript_name, ⁶​gene_name\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n[1] 11\n[1] 12\n[1] 13\n[1] 14\n[1] 15\n[1] 16\n[1] 17\n[1] 18\n[1] 19\n[1] 20\n[1] 21\n[1] 22\n[1] 23\n[1] 24\n[1] 25\n[1] 26\n[1] 27\n[1] 28\n[1] 29\n[1] 30\nquartz_off_screen \n                2 \n\n\n\n\nIsoExpr Network\n\nthis_datExpr = datExpr.isoExpr\nthis_net = net.isoExpr\nthis_net$module = paste0(\"M\", this_net$module.number, \".\", labels2colors(this_net$module.number))\nfileBaseNet=\"datExpr.isoExpr_batchCorrected_92k_byTargetRegion_Reordered_RBPModColor\"\n\n#Generate MEs and kME table for Network\nMEs = moduleEigengenes(t(this_datExpr), colors=this_net$module.number)\nkMEtable = signedKME(t(this_datExpr), datME =MEs$eigengenes,corFnc = \"bicor\")\n\nthis_anno = datAnno[match(rownames(this_datExpr), datAnno$transcript_id),]\nidx = grep(\"^TALON\", this_anno$transcript_name)\nthis_anno$transcript_name[idx] = paste0(this_anno$gene_name[idx], '_', this_anno$transcript_name[idx])\n\ncell_anno = as.data.frame(matrix('grey', nrow=nrow(this_anno), ncol = length(unique(celltypemarkers$Cluster))))\ncolnames(cell_anno) = sort(unique(celltypemarkers$Cluster))\nfor(this_cell in unique(celltypemarkers$Cluster)) {\n  marker_genes = celltypemarkers %>% filter(Cluster == this_cell) %>% dplyr::select(Ensembl) %>% pull()\n  cell_anno[this_anno$ensg %in% marker_genes, this_cell] = \"red\"\n}\n\ntidyMods = tibble(transcript_id = rownames(kMEtable), module=this_net$module, module.color = this_net$colors, module.number=this_net$module.number, kMEtable)\ntidyMods <- tidyMods %>% pivot_longer(-c(transcript_id,module,module.color,module.number), names_to = \"kME_to_module\", values_to = 'kME') %>% mutate(kMEtoMod = gsub(\"kME\", \"\", kME_to_module)) %>% filter(module!=0, module != \"grey\", kMEtoMod !='grey', kMEtoMod != 0) %>% dplyr::select(-kME_to_module)\ntidyMods <- tidyMods %>% left_join(this_anno)\n\nJoining, by = \"transcript_id\"\n\ntidyMods %>% group_by(module) %>% filter(kMEtoMod == module.number) %>% slice_max(kME,n=10)\n\npdf(file=paste0(\"output/figures/Fig4/\", fileBaseNet, \".pdf\"),width=15,height=8)\nplotDendroAndColors(this_net$tree, colors=cbind((this_net$colors),cell_anno), dendroLabels = F)\n\nggplot(df_fisher.celltype %>% filter(net==\"isoExpr\"), aes(x=factor(cell, levels=order.celltype),y=factor(mod,levels=c(100:1)), label=label, fill=-log10(Fisher.p))) + geom_tile() + scale_fill_gradient(low='white', high='red') + geom_text(size=3) + theme(axis.text.x = element_text(angle=-45,hjust=0)) + labs(x=\"\",y=\"\")\n\nfor(i in 1:(ncol(MEs$eigengenes))) {\n  # for(i in 2:2) {\n  print(i)\n  this_mod = gsub(\"ME\", \"\", colnames(MEs$eigengenes)[i])\n  mod_color = tidyMods %>% filter(module.number==this_mod,kMEtoMod==this_mod) %>% dplyr::select(module.color) %>% unique() %>% as.character()\n  mod_genes = tidyMods %>% filter(module.number==this_mod,kMEtoMod==this_mod) %>% arrange(-kME) %>% dplyr::select(ensg) %>% pull()\n  if(!this_mod %in% c(\"grey\", 0, \"M0.grey\")) {\n    this_plot = data.frame(datMeta, eig=MEs$eigengenes[,i])\n    g1 = ggplot(this_plot, aes(x=Region, y=eig, color=Subject)) + geom_point() + ggtitle(paste0(\"Module \",this_mod, \": \", labels2colors(as.numeric(this_mod)), \" n=\", length(mod_genes)))\n    g2 = tidyMods %>% filter(module.number==this_mod, kMEtoMod==this_mod) %>% slice_max(kME,n=25) %>% ggplot(aes(x=reorder(transcript_name, kME), y=kME, fill=novelty)) + geom_bar(stat='identity') + coord_flip() + labs(x=\"\") + scale_fill_manual(values = colorVector)\n    \n    \n    g3=ggplot(df_fisher.celltype %>% filter(net==\"isoExpr\",mod==this_mod),\n              # aes(x=reorder(cell, -Fisher.p), \n              aes(x=factor(cell, levels=order.celltype), \n                  y=-log10(Fisher.p), fill=OR)) + \n      geom_bar(stat='identity') + \n      coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')\n    \n    # Add pathway enrichments\n    path = gprofiler2::gost(query=mod_genes,ordered_query = T,correction_method = 'fdr',\n                            custom_bg = unique(datAnno$ensg), sources = c(\"GO\",\"KEGG\", \"REACTOME\"))\n    if(!is.null(path)) {\n      df_path = as_tibble(path$result)\n      df_path <- df_path %>% filter(term_size > 5, term_size < 1000)\n      g4 <- df_path %>% group_by(source) %>% slice_min(p_value,n=5,with_ties = F) %>% ungroup() %>%\n        ggplot(aes(x=reorder(term_name, -p_value), y=-log10(p_value), fill=source)) + geom_bar(stat='identity') + theme_bw() + \n        labs(x=\"\")  + scale_x_discrete(labels = function(x) str_wrap(x, width=30)) +\n        facet_grid(source~., space = 'free', scales='free') + theme(legend.position = 'none') + theme(axis.text.y = element_text(size=8)) +\n        coord_flip()\n    } else {\n      print(\"No pathway enrichment for this module\")\n      g4=NULL\n    }\n    \n    # RBP\n    g5=ggplot(df_fisher_rbp %>% filter(net==\"net.isoExpr\",mod.num==this_mod),\n              aes(x=target, y=-log10(Fisher.p), fill=OR)) + \n      geom_bar(stat='identity',position = position_dodge2()) + \n      labs(x=\"\", y=\"Enrichment\\n(-log10 q-value)\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"RBP Enrichment\") + \n      scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) +\n      scale_fill_gradient(low=\"grey60\", high=mod_color) + \n      theme(axis.text.y = element_text(size=5), axis.text.x = element_blank(), axis.ticks.x=element_blank(), plot.margin=unit(c(5,5,0,5),\"pt\"))\n    # + coord_flip()\n    Bar = ggplot(df_fisher_rbp %>% filter(net==\"net.isoExpr\",mod.num==this_mod),aes(x=target, label=target.region)) + \n      # geom_tile(aes(y=factor(1),fill=data.type)) + \n      geom_tile(aes(y=factor(1),fill=target.region)) + \n      # geom_point(aes(y=factor(1), shape=target.region),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n      geom_point(aes(y=factor(1), shape=data.type),position=position_dodge2(width=1),size=0.5) + scale_shape_manual(values = c(1:9)) + \n      # scale_x_discrete(labels=df_fisher$RBP) +\n      scale_x_discrete(labels=sapply(strsplit(levels(df_fisher_rbp$target), \"_\"), \"[[\",1)) +\n      theme_bw() +\n      theme(axis.text.y = element_blank(), \n            axis.ticks.y=element_blank(),\n            axis.text.x = element_text(angle=45,vjust=1, hjust=1, size=5), \n            legend.key.size=unit(0.25,'cm'), legend.text=element_text(size=5), legend.title=element_text(size=5), \n            plot.margin=unit(c(-20,5,5,5),\"pt\"), legend.position=c(0.5,-4), legend.box=\"horizontal\", legend.direction=\"horizontal\", \n            panel.grid.major=element_blank(), panel.grid.minor=element_blank(), panel.border=element_blank(), axis.line=element_line(color=\"black\", size=0.2)) + \n      labs(x='', y='') + paletteer::scale_fill_paletteer_d(\"rcartocolor::Vivid\") + guides(fill=guide_legend(order=1, nrow=1))\n    g5.Bar = plot_grid(g5,Bar, align=\"v\", ncol=1, axis=\"lr\", rel_heights=c(4,1))\n    \n    # Rare Var\n    g6=ggplot(df_logit.gene %>% filter(net==\"isoExpr\",mod==this_mod),aes(x=reorder(set, -Q), y=-log10(Q), fill=OR)) + geom_bar(stat='identity',position = position_dodge2()) + \n      coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red')+ ggtitle(\"Rare Var Enrichment\")\n    \n    # GWAS\n    g7=ggplot(df_gwas %>% filter(net==\"isoExpr\",mod==this_mod),aes(x=reorder(gwas, -fdr), y=-log10(fdr), fill=Zscore)) + geom_bar(stat='identity',position = position_dodge2()) + scale_fill_gradient2()+\n      coord_flip() + labs(x=\"\") + geom_hline(yintercept = -log10(.05),lty=2,col='red') + ggtitle(\"GWAS Enrichment\")\n    \n    \n    gridExtra::grid.arrange(grobs=list(g1,g2,g3,g4,g5.Bar,g6,g7),layout_matrix=rbind(c(1,1,1,3,3,4,4,7,7,7),\n                                                                                     c(2,2,2,3,3,4,4,7,7,7), \n                                                                                     c(2,2,2,3,3,4,4,7,7,7), \n                                                                                     c(2,2,2,3,3,4,4,7,7,7),\n                                                                                     c(6,6,6,5,5,5,5,5,5,5),\n                                                                                     c(6,6,6,5,5,5,5,5,5,5)))\n  }\n}\n\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\nDetected custom background input, domain scope is set to 'custom'\n\ndev.off()\n\n# A tibble: 530 × 12\n# Groups:   module [53]\n   transcr…¹ module modul…² modul…³   kME kMEto…⁴ gene_id trans…⁵ length gene_…⁶\n   <chr>     <chr>  <chr>     <dbl> <dbl> <chr>   <chr>   <chr>    <dbl> <chr>  \n 1 TALONT00… M1.tu… turquo…       1 0.995 1       ENSG00… ABLIM3…   4338 ABLIM3 \n 2 ENST0000… M1.tu… turquo…       1 0.994 1       ENSG00… DYNC1I…   2947 DYNC1I1\n 3 ENST0000… M1.tu… turquo…       1 0.992 1       ENSG00… NCDN-2…   3677 NCDN   \n 4 ENST0000… M1.tu… turquo…       1 0.992 1       ENSG00… HS3ST5…   3901 HS3ST5 \n 5 ENST0000… M1.tu… turquo…       1 0.991 1       ENSG00… SULT4A…   2478 SULT4A1\n 6 ENST0000… M1.tu… turquo…       1 0.991 1       ENSG00… JPH4-2…   4265 JPH4   \n 7 ENST0000… M1.tu… turquo…       1 0.990 1       ENSG00… SRD5A1…   7035 SRD5A1 \n 8 TALONT00… M1.tu… turquo…       1 0.990 1       ENSG00… CDH13_…   3659 CDH13  \n 9 ENST0000… M1.tu… turquo…       1 0.990 1       ENSG00… SATB2-…   1663 SATB2-…\n10 ENST0000… M1.tu… turquo…       1 0.990 1       ENSG00… SOSTDC…   1758 SOSTDC1\n# … with 520 more rows, 2 more variables: ensg <chr>, novelty <chr>, and\n#   abbreviated variable names ¹​transcript_id, ²​module.color, ³​module.number,\n#   ⁴​kMEtoMod, ⁵​transcript_name, ⁶​gene_name\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n[1] 11\n[1] 12\n[1] 13\n[1] 14\n[1] 15\n[1] 16\n[1] 17\n[1] 18\n[1] 19\n[1] 20\n[1] 21\n[1] 22\n[1] 23\n[1] 24\n[1] 25\n[1] 26\n[1] 27\n[1] 28\n[1] 29\n[1] 30\n[1] 31\n[1] 32\n[1] 33\n[1] 34\n[1] 35\n[1] 36\n[1] 37\n[1] 38\n[1] 39\n[1] 40\n[1] 41\n[1] 42\n[1] 43\n[1] 44\n[1] 45\n[1] 46\n[1] 47\n[1] 48\n[1] 49\n[1] 50\n[1] 51\n[1] 52\n[1] 53\n[1] 54\nquartz_off_screen \n                2 \n\n\n\nHub Transcript Models\n\nsuppressPackageStartupMessages({\n  library(GenomicFeatures)\n  library(ggtranscript)\n})\n\n# Isoseq Annotations\nisoseq=\"data/sqanti/cp_vz_0.75_min_7_recovery_talon_corrected.gtf.cds.gff.gz\"\nisoseq_txdb=makeTxDbFromGFF(isoseq, format=\"gtf\")\n\nImport genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... \n\n\nWarning in .get_cds_IDX(mcols0$type, mcols0$phase): some CDS phases are missing\nor not between 0 and 2\n\n\nOK\n\nisoseq_transcript=exonsBy(isoseq_txdb,by=\"tx\",use.names=T)\ngr.isoseq = rtracklayer::import(isoseq) %>% as_tibble()\n\ncts = read_table(\"data/cp_vz_0.75_min_7_recovery_talon_abundance_filtered.tsv.gz\")\n\n\n── Column specification ────────────────────────────────────────────────────────\ncols(\n  .default = col_double(),\n  annot_gene_id = col_character(),\n  annot_transcript_id = col_character(),\n  annot_gene_name = col_character(),\n  annot_transcript_name = col_character(),\n  gene_novelty = col_character(),\n  transcript_novelty = col_character(),\n  ISM_subtype = col_character()\n)\nℹ Use `spec()` for the full column specifications.\n\ncts$novelty2 = as.character(cts$transcript_novelty)\ncts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Prefix\")] = \"ISM_Prefix\"\ncts$novelty2[which(cts$novelty2==\"ISM\" & cts$ISM_subtype==\"Suffix\")] = \"ISM_Suffix\"\ncts$novelty2[cts$novelty2 %in% c(\"Antisense\", \"Genomic\", \"Intergenic\", \"ISM\")] = \"Other\"\ncts$novelty2 = factor(cts$novelty2,levels=c(\"Known\", \"ISM_Prefix\", \"ISM_Suffix\", \"NIC\", \"NNC\", \"Other\"))\ncts$counts = rowSums(cts[,c(12:35)])\ncts$cpm = cts$counts / (sum(cts$counts)/1000000)\n\ngr.isoseq.old = gr.isoseq\n\ngr.isoseq <- gr.isoseq.old %>% left_join(cts, by=c(\"transcript_id\" = \"annot_transcript_id\"))\n\nisoseq.gene.names = rtracklayer::import(\"data/cp_vz_0.75_min_7_recovery_talon.gtf.gz\") %>%\n  as_tibble() %>%\n  dplyr::filter(type == \"gene\") %>%\n  dplyr::select(gene_id, gene_name)\n\ngr.isoseq = gr.isoseq %>% left_join(isoseq.gene.names)\n\nJoining, by = \"gene_id\"\n\n\n\n\nSMARCE1\n\nthis_gene=\"SMARCE1\"\n\nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\" & (counts > 100 | novelty2==\"Known\"))\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\" & (counts > 100 | novelty2==\"Known\"))\n\ng1<-these_exons %>% \n  ggplot(aes(\n    xstart = start,\n    xend = end,\n    y = reorder(transcript_id, counts)\n  )) +\n  geom_range(\n    aes(fill = log2(1+cpm), group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = log2(1+cpm), group=novelty2)) + \n  geom_intron(\n    data = to_intron(these_exons, \"transcript_id\"),\n    aes(strand = strand),arrow.min.intron.length = 500,\n    arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n    color='grey60',\n  ) + facet_grid(novelty2~.,scale='free',space='free') + theme_bw() + labs(y=\"\") + ggtitle(this_gene,subtitle = unique(these_exons$seqnames)) + theme(plot.title = element_text(hjust=.5), plot.subtitle = element_text(hjust=.5), axis.text.y = element_text(size=12))\ng1\n\n\n\n\n\npdf(\"output/figures/Fig4/Fig4C_subplot_ggtranscript_SMARCE1.pdf\", width=10, height=20)\nprint(g1)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nELAVL1\n\nthis_gene=\"ELAVL1\"\n\nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\" & (counts > 100 | novelty2==\"Known\"))\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\" & (counts > 100 | novelty2==\"Known\"))\n\ng1<-these_exons %>% \n  ggplot(aes(\n    xstart = start,\n    xend = end,\n    y = reorder(transcript_id, counts)\n  )) +\n  geom_range(\n    aes(fill = log2(1+cpm), group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = log2(1+cpm), group=novelty2)) + \n  geom_intron(\n    data = to_intron(these_exons, \"transcript_id\"),\n    aes(strand = strand),arrow.min.intron.length = 500,\n    arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n    color='grey60',\n  ) + facet_grid(novelty2~.,scale='free',space='free') + theme_bw() + labs(y=\"\") + ggtitle(this_gene,subtitle = unique(these_exons$seqnames)) + theme(plot.title = element_text(hjust=.5), plot.subtitle = element_text(hjust=.5), axis.text.y = element_text(size=12))\ng1\n\n\n\n\n\npdf(\"output/figures/Fig4/Fig4D_subplot_ggtranscript_ELAVL1.pdf\", width=10, height=4)\nprint(g1)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\n\nDDX3X\n\nthis_gene=\"DDX3X\"\n\nthese_exons <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"exon\" & (counts > 100 | novelty2==\"Known\"))\nthis_cds <- gr.isoseq %>% dplyr::filter(annot_gene_name == this_gene & type == \"CDS\" & (counts > 100 | novelty2==\"Known\"))\n\ng1<-these_exons %>% \n  ggplot(aes(\n    xstart = start,\n    xend = end,\n    y = reorder(transcript_id, counts)\n  )) +\n  geom_range(\n    aes(fill = log2(1+cpm), group=novelty2), height=.25) + \n  geom_range(data=this_cds, aes(fill = log2(1+cpm), group=novelty2)) + \n  geom_intron(\n    data = to_intron(these_exons, \"transcript_id\"),\n    aes(strand = strand),arrow.min.intron.length = 500,\n    arrow = grid::arrow(ends = \"last\", length = grid::unit(0.1, \"inches\")),\n    color='grey60',\n  ) + facet_grid(novelty2~.,scale='free',space='free') + theme_bw() + labs(y=\"\") + ggtitle(this_gene,subtitle = unique(these_exons$seqnames)) + theme(plot.title = element_text(hjust=.5), plot.subtitle = element_text(hjust=.5), axis.text.y = element_text(size=12))\ng1 \n\n\n\n\n\npdf(\"output/figures/supplement/FigS7A_subplot_ggtranscript_DDX3X.pdf\", width=10, height=20)\nprint(g1)\ndev.off()\n\nquartz_off_screen \n                2 \n\n\n\nsessionInfo()\n\nR version 4.1.3 (2022-03-10)\nPlatform: x86_64-apple-darwin17.0 (64-bit)\nRunning under: macOS Big Sur/Monterey 10.16\n\nMatrix products: default\nBLAS:   /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRblas.0.dylib\nLAPACK: /Library/Frameworks/R.framework/Versions/4.1/Resources/lib/libRlapack.dylib\n\nlocale:\n[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8\n\nattached base packages:\n[1] stats4    stats     graphics  grDevices utils     datasets  methods  \n[8] base     \n\nother attached packages:\n [1] ggtranscript_0.99.9    GenomicFeatures_1.46.5 AnnotationDbi_1.56.2  \n [4] Biobase_2.54.0         GenomicRanges_1.46.1   GenomeInfoDb_1.30.1   \n [7] IRanges_2.28.0         S4Vectors_0.32.4       BiocGenerics_0.40.0   \n[10] paletteer_1.5.0        cowplot_1.1.1          gridExtra_2.3         \n[13] gprofiler2_0.2.1       readxl_1.4.1           openxlsx_4.2.5        \n[16] biomaRt_2.50.3         WGCNA_1.72-1           fastcluster_1.2.3     \n[19] dynamicTreeCut_1.63-1  edgeR_3.36.0           limma_3.50.3          \n[22] forcats_0.5.2          stringr_1.5.0          dplyr_1.0.10          \n[25] purrr_0.3.4            readr_2.1.2            tidyr_1.2.0           \n[28] tibble_3.1.8           ggplot2_3.3.6          tidyverse_1.3.2       \n\nloaded via a namespace (and not attached):\n  [1] backports_1.4.1             Hmisc_4.7-1                \n  [3] BiocFileCache_2.2.1         lazyeval_0.2.2             \n  [5] splines_4.1.3               BiocParallel_1.28.3        \n  [7] digest_0.6.29               foreach_1.5.2              \n  [9] htmltools_0.5.3             GO.db_3.14.0               \n [11] fansi_1.0.3                 magrittr_2.0.3             \n [13] checkmate_2.1.0             memoise_2.0.1              \n [15] googlesheets4_1.0.1         cluster_2.1.4              \n [17] doParallel_1.0.17           tzdb_0.3.0                 \n [19] Biostrings_2.62.0           modelr_0.1.9               \n [21] matrixStats_0.62.0          vroom_1.5.7                \n [23] prettyunits_1.1.1           jpeg_0.1-9                 \n [25] colorspace_2.0-3            ggrepel_0.9.2              \n [27] blob_1.2.3                  rvest_1.0.3                \n [29] rappdirs_0.3.3              haven_2.5.1                \n [31] xfun_0.32                   prismatic_1.1.1            \n [33] crayon_1.5.1                RCurl_1.98-1.8             \n [35] jsonlite_1.8.0              impute_1.68.0              \n [37] survival_3.4-0              iterators_1.0.14           \n [39] glue_1.6.2                  gtable_0.3.1               \n [41] gargle_1.2.0                zlibbioc_1.40.0            \n [43] XVector_0.34.0              DelayedArray_0.20.0        \n [45] scales_1.2.1                DBI_1.1.3                  \n [47] Rcpp_1.0.9                  viridisLite_0.4.1          \n [49] progress_1.2.2              htmlTable_2.4.1            \n [51] foreign_0.8-82              bit_4.0.4                  \n [53] preprocessCore_1.56.0       Formula_1.2-4              \n [55] htmlwidgets_1.5.4           httr_1.4.4                 \n [57] RColorBrewer_1.1-3          ellipsis_0.3.2             \n [59] pkgconfig_2.0.3             XML_3.99-0.10              \n [61] farver_2.1.1                nnet_7.3-17                \n [63] dbplyr_2.2.1                deldir_1.0-6               \n [65] locfit_1.5-9.6              utf8_1.2.2                 \n [67] tidyselect_1.2.0            labeling_0.4.2             \n [69] rlang_1.0.6                 munsell_0.5.0              \n [71] cellranger_1.1.0            tools_4.1.3                \n [73] cachem_1.0.6                cli_3.4.1                  \n [75] generics_0.1.3              RSQLite_2.2.16             \n [77] broom_1.0.1                 evaluate_0.16              \n [79] fastmap_1.1.0               yaml_2.3.5                 \n [81] rematch2_2.1.2              knitr_1.40                 \n [83] bit64_4.0.5                 fs_1.5.2                   \n [85] zip_2.2.0                   KEGGREST_1.34.0            \n [87] xml2_1.3.3                  compiler_4.1.3             \n [89] rstudioapi_0.14             plotly_4.10.0              \n [91] filelock_1.0.2              curl_4.3.2                 \n [93] png_0.1-7                   reprex_2.0.2               \n [95] stringi_1.7.8               lattice_0.20-45            \n [97] Matrix_1.4-1                vctrs_0.5.1                \n [99] pillar_1.8.1                lifecycle_1.0.3            \n[101] data.table_1.14.2           bitops_1.0-7               \n[103] rtracklayer_1.54.0          BiocIO_1.4.0               \n[105] R6_2.5.1                    latticeExtra_0.6-30        \n[107] codetools_0.2-18            assertthat_0.2.1           \n[109] SummarizedExperiment_1.24.0 rjson_0.2.21               \n[111] withr_2.5.0                 GenomicAlignments_1.30.0   \n[113] Rsamtools_2.10.0            GenomeInfoDbData_1.2.7     \n[115] parallel_4.1.3              hms_1.1.2                  \n[117] grid_4.1.3                  rpart_4.1.16               \n[119] rmarkdown_2.16              MatrixGenerics_1.6.0       \n[121] googledrive_2.0.0           lubridate_1.8.0            \n[123] base64enc_0.1-3             restfulr_0.0.15            \n[125] interp_1.1-3"
  },
  {
    "objectID": "analysis/Figure5_SeuratClustering.html",
    "href": "analysis/Figure5_SeuratClustering.html",
    "title": "Figure 5 - Seurat Clustering",
    "section": "",
    "text": "library(Seurat)\n\nAttaching SeuratObject\n\n\nAttaching sp\n\nlibrary(tidyverse)\n\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n\n\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.5.0 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(patchwork)\nlibrary(sctransform)\nlibrary(cowplot)\n\n\nAttaching package: 'cowplot'\n\nThe following object is masked from 'package:patchwork':\n\n    align_plots\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n\nThe following object is masked from 'package:purrr':\n\n    transpose\n\nlibrary(RColorBrewer)\n#rm(list=ls())\n\n\n#isoT_7k.data <- data.frame(fread(\"zcat Isoform_counts_7189_allSingleCells_4seurat.tsv.gz\", header=TRUE, sep=\"auto\"), row.names = 1)\n\n#With new Id\nisoT_7k.data <- data.frame(fread(\"data/AllBarcode_newId_with_geneID.txt.gz\", header=TRUE, sep=\"auto\"), row.names = 1)\ndim(isoT_7k.data)\n\n[1] 143490   7189\n\n\n\nisoT7k<- CreateSeuratObject(counts = isoT_7k.data, project = \"7kTranscript\", min.cells = 3, min.features = 85)\n\nWarning: Feature names cannot have underscores ('_'), replacing with dashes\n('-')\n\nisoT7k\n\nAn object of class Seurat \n90595 features across 4924 samples within 1 assay \nActive assay: RNA (90595 features, 0 variable features)\n\nhead(isoT7k@meta.data)\n\n                 orig.ident nCount_RNA nFeature_RNA\nEnd_ACGGCATAGTAC        End        230          190\nEnd_ACTGACTGATCC        End        162          141\nEnd_ACTGGCACCGAG        End        150          120\nEnd_AGCTAGCCCATG        End        277          219\nEnd_AGTTTAGCGGTC        End       1207          871\nEnd_ATCCGACCATCA        End        132           98\n\n\n\n# Compute percent mito and ribo ratio\nisoT7k[[\"percent.mt\"]] <- PercentageFeatureSet(isoT7k, pattern = \"^MT-\")\nisoT7k[[\"percent.RP\"]] <- PercentageFeatureSet(isoT7k, pattern = \"^RP\")\n\n####DropOut\ndropouts <- Matrix::colSums(isoT7k@assays$RNA@data == 0)/nrow(isoT7k@assays$RNA)\nisoT7k[['dropouts']] <- dropouts\n\nhead(isoT7k@meta.data)\n\n                 orig.ident nCount_RNA nFeature_RNA percent.mt percent.RP\nEnd_ACGGCATAGTAC        End        230          190  0.4347826   24.78261\nEnd_ACTGACTGATCC        End        162          141  1.2345679   29.62963\nEnd_ACTGGCACCGAG        End        150          120  0.6666667   13.33333\nEnd_AGCTAGCCCATG        End        277          219  6.4981949   22.38267\nEnd_AGTTTAGCGGTC        End       1207          871  3.0654515   13.42171\nEnd_ATCCGACCATCA        End        132           98  2.2727273   12.87879\n                  dropouts\nEnd_ACGGCATAGTAC 0.9979028\nEnd_ACTGACTGATCC 0.9984436\nEnd_ACTGGCACCGAG 0.9986754\nEnd_AGCTAGCCCATG 0.9975826\nEnd_AGTTTAGCGGTC 0.9903858\nEnd_ATCCGACCATCA 0.9989183\n\n\n\n# Add number of genes per UMI for each cell to metadata\nisoT7k$log10GenesPerUMI <- log10(isoT7k$nFeature_RNA) / log10(isoT7k$nCount_RNA)\nhead(isoT7k@meta.data)\n\n                 orig.ident nCount_RNA nFeature_RNA percent.mt percent.RP\nEnd_ACGGCATAGTAC        End        230          190  0.4347826   24.78261\nEnd_ACTGACTGATCC        End        162          141  1.2345679   29.62963\nEnd_ACTGGCACCGAG        End        150          120  0.6666667   13.33333\nEnd_AGCTAGCCCATG        End        277          219  6.4981949   22.38267\nEnd_AGTTTAGCGGTC        End       1207          871  3.0654515   13.42171\nEnd_ATCCGACCATCA        End        132           98  2.2727273   12.87879\n                  dropouts log10GenesPerUMI\nEnd_ACGGCATAGTAC 0.9979028        0.9648671\nEnd_ACTGACTGATCC 0.9984436        0.9727108\nEnd_ACTGGCACCGAG 0.9986754        0.9554660\nEnd_AGCTAGCCCATG 0.9975826        0.9582246\nEnd_AGTTTAGCGGTC 0.9903858        0.9540225\nEnd_ATCCGACCATCA 0.9989183        0.9390034\n\n\n\n# Create metadata dataframe\nmetadataisoT7k <- isoT7k@meta.data\n\n# Add cell IDs to metadata\nmetadataisoT7k$cells <- str_split(rownames(metadataisoT7k), pattern = \"_\", simplify = T)[,2]\n\n# Rename columns\nmetadataisoT7k <- metadataisoT7k %>%\n  dplyr::rename(CellType = orig.ident,\n                nUMI = nCount_RNA,\n                nGene = nFeature_RNA)\n\n##Create method column\nmetadataisoT7k$method <- \"LongRead\"\n\n\n#Donor Innformation\ndonor<-read.table(\"ref/polioudakis_neuron2020/TableS3_Cell_metadata.csv\", header=TRUE, row.names=1)\ndf<- as.data.frame.matrix(donor)\n\n# Add additional innfo into the metadata\n#metadataisoT7k$DonorID=df$DonorID[match(metadataisoT7k$cells,rownames(df))]\nmetadataisoT7k$Layer=df$Layer[match(metadataisoT7k$cells,rownames(df))]\nmetadataisoT7k$Donor=df$Donor[match(metadataisoT7k$cells,rownames(df))]\nmetadataisoT7k$Gestation_week=df$Gestation_week[match(metadataisoT7k$cells,rownames(df))]\n\n# Add metadata back to Seurat object\nisoT7k@meta.data<- metadataisoT7k\nhead(isoT7k@meta.data)\n\n                 CellType nUMI nGene percent.mt percent.RP  dropouts\nEnd_ACGGCATAGTAC      End  230   190  0.4347826   24.78261 0.9979028\nEnd_ACTGACTGATCC      End  162   141  1.2345679   29.62963 0.9984436\nEnd_ACTGGCACCGAG      End  150   120  0.6666667   13.33333 0.9986754\nEnd_AGCTAGCCCATG      End  277   219  6.4981949   22.38267 0.9975826\nEnd_AGTTTAGCGGTC      End 1207   871  3.0654515   13.42171 0.9903858\nEnd_ATCCGACCATCA      End  132    98  2.2727273   12.87879 0.9989183\n                 log10GenesPerUMI        cells   method Layer Donor\nEnd_ACGGCATAGTAC        0.9648671 ACGGCATAGTAC LongRead    CP   370\nEnd_ACTGACTGATCC        0.9727108 ACTGACTGATCC LongRead    CP   370\nEnd_ACTGGCACCGAG        0.9554660 ACTGGCACCGAG LongRead    GZ   372\nEnd_AGCTAGCCCATG        0.9582246 AGCTAGCCCATG LongRead    CP   371\nEnd_AGTTTAGCGGTC        0.9540225 AGTTTAGCGGTC LongRead    CP   371\nEnd_ATCCGACCATCA        0.9390034 ATCCGACCATCA LongRead    CP   370\n                 Gestation_week\nEnd_ACGGCATAGTAC             18\nEnd_ACTGACTGATCC             18\nEnd_ACTGGCACCGAG             18\nEnd_AGCTAGCCCATG             17\nEnd_AGTTTAGCGGTC             17\nEnd_ATCCGACCATCA             18\n\n\n\n####Some Quality Check\n#VlnPlot(isoT7k, features = c(\"nGene\", \"nUMI\", \"percent.mt\", \"percent.RP\", \"dropouts\"), ncol = 5, group.by=\"method\", pt.size=0.25)\nVlnPlot(isoT7k, features = c(\"nGene\", \"nUMI\", \"percent.mt\"), ncol = 3, group.by=\"method\", pt.size=0.25)\n\n\n\n\n\nFeatureScatter(isoT7k, feature1 = \"nUMI\", feature2 = \"percent.mt\", group.by=\"method\")\n\n\n\n\n\nFeatureScatter(isoT7k, feature1 = \"nUMI\", feature2 = \"nGene\", group.by=\"method\")\n\n\n\n\n\nisoT7k_filter <- subset(x = isoT7k, \n                        subset= (nGene >= 85) & \n                          (nGene < 2000)  &\n                          (percent.mt < 7))\n\n\n####Some Quality Check after Filtering\nVlnPlot(isoT7k_filter, features = c(\"nGene\", \"nUMI\", \"percent.mt\", \"percent.RP\", \"dropouts\"), ncol = 5, group.by=\"method\", pt.size=0.25)\n\n\n\n\n\n# Output a logical vector for every gene on whether the more than zero counts per cell\n# Extract counts\ncounts <- GetAssayData(object = isoT7k_filter, slot = \"counts\")\n\n# Output a logical vector for every gene on whether the more than zero counts per cell\nnonzero <- counts > 0\n\n# Filter Isoforms\nkeep_genes <- Matrix::rowSums(nonzero) >= 3\n\n# Only keeping those filtered isoforms \nfiltered_counts <- counts[keep_genes, ]\n\n# Reassign to filtered Seurat object\nisoT7k_filter <- CreateSeuratObject(filtered_counts, meta.data = isoT7k_filter@meta.data)\n\n\n######Filter Known Cells\nisoT4k_sub <- subset(x = isoT7k_filter,\n                        subset= CellType != \"Unknown\" ) \n\n# Output a logical vector for every gene on whether the more than zero counts per cell\n# Extract counts\ncounts <- GetAssayData(object = isoT4k_sub, slot = \"counts\")\n\n# Output a logical vector for every gene on whether the more than zero counts per cell\nnonzero <- counts > 0\n\n# Filter non expresses isoforms\nkeep_genes <- Matrix::rowSums(nonzero) >= 0\n\n# Only keeping filtered isoforms\nfiltered_counts <- counts[keep_genes, ]\n\n# Reassign to filtered Seurat object and Running seurat\n\nisoT4k_filter <- CreateSeuratObject(filtered_counts, meta.data = isoT4k_sub@meta.data) %>%\n  SCTransform(\n    verbose = FALSE, \n    assay = 'RNA',\n    variable.features.n = 10000,\n    #return.only.var.genes = FALSE,\n    new.assay.name = 'SCT', \n    vars.to.regress = \"percent.mt\" #,\n    #n_genes=10000\n  ) %>%\n  RunPCA( )\n\nPC_ 1 \nPositive:  STMN2-ENST00000220876, MAP1B-TALONT000671508, TUBB3-ENST00000315491, NEUROD6-ENST00000297142, NEUROD2-ENST00000302584, RTN1-ENST00000342503, NSG2-ENST00000303177, GAP43-ENST00000305124, GPM6A-ENST00000393658, TUBB-ENST00000327892 \n       NEFM-ENST00000221166, SOX11-ENST00000322002, SOX4-ENST00000244745, SLA-ENST00000338087, INA-ENST00000369849, SYT4-ENST00000255224, TUBB2A-ENST00000333628, NEFL-TALONT000583190, CALM1-ENST00000356978, ENC1-ENST00000302351 \n       CRYM-TALONT000431241, AC004158.1-ENST00000564508, PFN2-ENST00000239940, ANKRD18CP-TALONT000751502, MLLT3-TALONT000705935, LMO3-ENST00000354662, DLX6-AS1-TALONT000801216, ATP1B1-ENST00000367815, LMO3-ENST00000441439, BASP1-ENST00000322611 \nNegative:  VIM-ENST00000224237, FOS-ENST00000303562, PTN-ENST00000348225, JUN-ENST00000371222, EGR1-ENST00000239938, HES1-ENST00000232424, ID4-ENST00000378700, SOX2-ENST00000325404, CCN1-ENST00000451137, PEA15-ENST00000360472 \n       FOS-ENST00000554617, FABP5-ENST00000297258, PTN-TALONT000822332, HSPA1B-ENST00000375650, SFRP1-ENST00000220772, HSPA1A-ENST00000375651, SOX9-ENST00000245479, GPM6B-ENST00000454189, PTN-TALONT000822343, SFRP1-TALONT000603415 \n       IER2-ENST00000588173, SPARC-ENST00000231061, FABP7-ENST00000368444, TUBA1B-ENST00000336023, HMGB2-ENST00000296503, H4C3-ENST00000377803, HMGN2-ENST00000361427, TTYH1-ENST00000376530, FGFBP3-ENST00000311575, JUNB-ENST00000302754 \nPC_ 2 \nPositive:  H4C3-ENST00000377803, HMGB2-ENST00000296503, TUBA1B-ENST00000336023, HMGN2-ENST00000361427, UBE2C-ENST00000356455, H1-3-ENST00000244534, PPP1R17-ENST00000342032, SOX4-ENST00000244745, HES6-ENST00000272937, KIFC1-ENST00000428849 \n       KPNA2-ENST00000330459, PENK-ENST00000451791, CCND2-ENST00000261254, EOMES-ENST00000449599, ARL6IP1-ENST00000304414, ENC1-ENST00000302351, CCNB1-ENST00000256442, HES6-ENST00000409160, PLK1-ENST00000300093, GADD45G-ENST00000252506 \n       NNAT-ENST00000649451, SSTR2-ENST00000357585, IGFBPL1-ENST00000377694, ENC1-ENST00000618628, CDKN2C-ENST00000396148, ANKRD18CP-TALONT000751502, CADM1-ENST00000616271, SMOC1-ENST00000361956, NHLH1-ENST00000302101, POU3F2-ENST00000328345 \nNegative:  FABP7-ENST00000368444, STMN2-ENST00000220876, TUBB2A-ENST00000333628, MAP1B-TALONT000671508, PTN-ENST00000348225, VIM-ENST00000224237, NEFM-ENST00000221166, FOS-ENST00000303562, TUBB2B-ENST00000259818, RTN1-ENST00000342503 \n       CALM1-ENST00000356978, TUBB3-ENST00000315491, NEFL-TALONT000583190, GAP43-ENST00000305124, JUN-ENST00000371222, HSPA1A-ENST00000375651, HSPA1B-ENST00000375650, PEA15-ENST00000360472, INA-ENST00000369849, FGFBP3-ENST00000311575 \n       SYT4-ENST00000255224, PTN-TALONT000822332, TTYH1-ENST00000376530, HOPX-ENST00000337881, NEUROD2-ENST00000302584, LMO4-ENST00000370542, NEUROD6-ENST00000297142, PTN-TALONT000822343, FOS-ENST00000554617, GPM6B-ENST00000454189 \nPC_ 3 \nPositive:  SOX4-ENST00000244745, DLX6-AS1-TALONT000801216, FOS-ENST00000303562, ENC1-ENST00000302351, EGR1-ENST00000239938, DLX2-ENST00000234198, BTG1-ENST00000256015, SST-ENST00000287641, JUN-ENST00000371222, ANKRD18CP-TALONT000751502 \n       DLX5-ENST00000648378, FOS-ENST00000554617, CITED2-ENST00000367651, IER2-ENST00000588173, CCN1-ENST00000451137, SOX2-OT-ENST00000596250, DLX6-AS1-ENST00000458352, CADM1-ENST00000616271, PLS3-ENST00000355899, SCGN-ENST00000377961 \n       GAD2-ENST00000428517, HES1-ENST00000232424, DLX1-ENST00000361725, RASD1-ENST00000225688, RBP1-ENST00000232219, SOX2-OT-ENST00000600801, MAF-ENST00000393350, ENC1-ENST00000618628, JUNB-ENST00000302754, MAFB-ENST00000373313 \nNegative:  H4C3-ENST00000377803, FABP7-ENST00000368444, TUBA1B-ENST00000336023, HMGB2-ENST00000296503, NEFM-ENST00000221166, MAP1B-TALONT000671508, NEFL-TALONT000583190, TUBB-ENST00000327892, TUBB2A-ENST00000333628, UBE2C-ENST00000356455 \n       STMN2-ENST00000220876, CALM1-ENST00000356978, PTN-ENST00000348225, GAP43-ENST00000305124, H1-3-ENST00000244534, HMGN2-ENST00000361427, TUBB2B-ENST00000259818, KPNA2-ENST00000330459, VIM-ENST00000224237, ARL6IP1-ENST00000304414 \n       LMO4-ENST00000370542, TUBB3-ENST00000315491, CCNB1-ENST00000256442, SYT4-ENST00000255224, KIFC1-ENST00000428849, NPY-ENST00000242152, NEUROD6-ENST00000297142, PEA15-ENST00000360472, PTN-TALONT000822332, INA-ENST00000369849 \nPC_ 4 \nPositive:  DLX6-AS1-TALONT000801216, DLX2-ENST00000234198, SST-ENST00000287641, DLX5-ENST00000648378, H4C3-ENST00000377803, SOX2-OT-ENST00000596250, DLX6-AS1-ENST00000458352, NSG2-ENST00000303177, CXCR4-ENST00000241393, SCGN-ENST00000377961 \n       GAD2-ENST00000428517, PFN2-ENST00000239940, CRYM-TALONT000431241, PDE4DIP-TALONT000551834, DLX1-ENST00000361725, SOX2-OT-ENST00000600801, PLS3-ENST00000355899, LMO3-ENST00000354662, RBP1-ENST00000232219, MAF-ENST00000393350 \n       CALB2-TALONT000509228, LMO3-ENST00000441439, SOX2-ENST00000325404, C11orf96-ENST00000617612, ATP1B1-ENST00000367815, MEG3-ENST00000451743, CALB2-ENST00000302628, PCDH9-ENST00000377861, MEG3-ENST00000522771, AC004158.1-ENST00000564508 \nNegative:  ENC1-ENST00000302351, ANKRD18CP-TALONT000751502, NEUROD6-ENST00000297142, NEUROD2-ENST00000302584, RASD1-ENST00000225688, POU3F2-ENST00000328345, EEF1A1-ENST00000309268, SLA-ENST00000338087, HS3ST1-ENST00000002596, SOX11-ENST00000322002 \n       JUN-ENST00000371222, SDCBP-ENST00000260130, HES6-ENST00000409160, ENC1-ENST00000618628, HES6-ENST00000272937, GPM6A-ENST00000393658, SLC17A6-ENST00000263160, IGFBPL1-ENST00000377694, PPP1R17-ENST00000342032, EPHB6-TALONT000824230 \n       CCND2-ENST00000261254, NRN1-ENST00000244766, NHLH1-ENST00000302101, SOX4-ENST00000244745, FOS-ENST00000303562, MLLT3-TALONT000705935, PENK-ENST00000451791, SSTR2-ENST00000357585, EGR1-ENST00000239938, GADD45G-ENST00000252506 \nPC_ 5 \nPositive:  EGR1-ENST00000239938, FOS-ENST00000303562, CCN1-ENST00000451137, IER2-ENST00000588173, FOS-ENST00000554617, H4C3-ENST00000377803, HES1-ENST00000232424, CCN2-ENST00000367976, CRYM-TALONT000431241, JUN-ENST00000371222 \n       LMO3-ENST00000354662, NR4A1-ENST00000394825, LMO3-ENST00000441439, CRYAB-ENST00000650687, MAP1B-TALONT000671508, CALM1-ENST00000356978, GAP43-ENST00000305124, NEFM-ENST00000221166, JUNB-ENST00000302754, SPARC-ENST00000231061 \n       STMN2-ENST00000220876, H1-3-ENST00000244534, NEFL-TALONT000583190, ATP1B1-ENST00000367815, ZFP36-ENST00000597629, NSG2-ENST00000303177, BCYRN1-ENST00000418539, LMO3-TALONT000528879, BTG2-ENST00000290551, PCDH9-ENST00000377861 \nNegative:  PTN-ENST00000348225, FABP7-ENST00000368444, PEA15-ENST00000360472, PTN-TALONT000822332, HOPX-ENST00000337881, HSPA1B-ENST00000375650, ENC1-ENST00000302351, PTN-TALONT000822343, SOX4-ENST00000244745, HSPA1A-ENST00000375651 \n       FABP5-ENST00000297258, GPM6B-ENST00000454189, DLX6-AS1-TALONT000801216, SFRP1-ENST00000220772, SFRP1-TALONT000603415, TUBB2B-ENST00000259818, ANKRD18CP-TALONT000751502, CXCR4-ENST00000241393, TTYH1-ENST00000376530, VIM-ENST00000224237 \n       FGFBP3-ENST00000311575, PPP1R17-ENST00000342032, DLX2-ENST00000234198, CADM1-ENST00000616271, CRH-ENST00000276571, SDCBP-ENST00000260130, RASD1-ENST00000225688, DLX5-ENST00000648378, SST-ENST00000287641, CCND2-ENST00000261254 \n\n\n\n####Some Quality Check after Filtering\nVlnPlot(isoT4k_filter, features = c(\"nGene\", \"nUMI\", \"percent.mt\", \"percent.RP\", \"dropouts\"), ncol = 5, group.by=\"method\", pt.size=0.25)\n\n\n\n\n\n# Plot PCA\nPCAPlot(isoT4k_filter ) \n\n\n\n#FeaturePlot(isoT4k_filter,  reduction='pca', features=c(\"nGene\", \"nUMI\",  \"percent.mt\", \"percent.RP\"), ncol = 2)\n\n\n####Elbow Plot\nElbowPlot(isoT4k_filter, ndims = 50)\n\n\n\n\n\n# Run UMAP\nisoT4k_filter<- RunUMAP(isoT4k_filter,\n                        n.neighbors = 15,\n                        min.dist = 0.15,\n                        dims = 1:26)\n\nWarning: The default method for RunUMAP has changed from calling Python UMAP via reticulate to the R-native UWOT using the cosine metric\nTo use Python UMAP via reticulate, set umap.method to 'umap-learn' and metric to 'correlation'\nThis message will be shown once per session\n\n\n16:09:21 UMAP embedding parameters a = 1.414 b = 0.9488\n\n\n16:09:21 Read 4167 rows and found 26 numeric columns\n\n\n16:09:21 Using Annoy for neighbor search, n_neighbors = 15\n\n\n16:09:21 Building Annoy index with metric = cosine, n_trees = 50\n\n\n0%   10   20   30   40   50   60   70   80   90   100%\n\n\n[----|----|----|----|----|----|----|----|----|----|\n\n\n**************************************************|\n16:09:21 Writing NN index file to temp file /var/folders/qr/3swxhlmx2xgb5qkpdbhqkkd80000gp/T//RtmpPj1I38/file14997514f7fc2\n16:09:22 Searching Annoy index using 1 thread, search_k = 1500\n16:09:22 Annoy recall = 100%\n16:09:24 Commencing smooth kNN distance calibration using 1 thread with target n_neighbors = 15\n16:09:24 Initializing from normalized Laplacian + noise (using irlba)\n16:09:24 Commencing optimization for 500 epochs, with 87210 positive edges\n16:09:29 Optimization finished\n\n\n\n# Determine the K-nearest neighbor graph\nisoT4k_filter <- FindNeighbors(object = isoT4k_filter, \n                               reduction = \"pca\",\n                               features = VariableFeatures(object = isoT4k_filter),\n                               dims = 1:26,\n                               nn.method = \"annoy\") # annoy or rann\n\nComputing nearest neighbor graph\n\n\nComputing SNN\n\n\n\nisoT4k_filter <- FindClusters(isoT4k_filter, verbose = FALSE,\n                              resolution = seq(1, 2, 0.1))\n\n\nIdents(isoT4k_filter) <- \"SCT_snn_res.1.6\"\nIdents(isoT4k_filter) <- isoT4k_filter$SCT_snn_res.1.6\nnew.cluster.ids <- c(\"ExM\", \"ExN-ExM\", \"ExM-U\", \"ExN-1\", \"ExN-2\", \"In\",\n                     \"vRG-ExN\", \"oRG\", \"IP\", \"ExDp\", \"ExN-3\", \"vRG\", \"PgS\", \"PgG2M\", \"Mic/Per/End\")\nnames(new.cluster.ids) <- levels(isoT4k_filter)\nisoT4k_filter <- RenameIdents(isoT4k_filter, new.cluster.ids)\nisoT4k_filter@meta.data$isoCellType <- Idents(isoT4k_filter)\nIdents(isoT4k_filter) <- isoT4k_filter$isoCellType\nwrite.table(isoT4k_filter@meta.data, file='output/tables/TableS5A.txt', quote=FALSE, sep='\\t', col.names = TRUE)\n\n##used the old metadata file\n#ap4<-read.table(\"meta_2212022_v3.txt\", header=T)\n#df4<- as.data.frame.matrix(ap4)\n#isoT4k_filter@meta.data<- df4\n#Idents(isoT4k_filter) <- isoT4k_filter$isoCellType\n\n\np1<- DimPlot(isoT4k_filter, reduction = \"umap\",label = TRUE, pt.size = 0.5, label.size = 3.5,repel=TRUE) +\n            NoLegend() + \n            ggtitle('Cells Clustered by Isoform Expression') +\n            theme(plot.title = element_text(size = 10, face = \"bold\")) +\n            ggeasy::easy_center_title() &\n            theme(text = element_text(), #face = \"bold\"\n            axis.text=element_text(size=6), #angle=45, hjust=1,\n            axis.title = element_text(size=8 ),   #face=\"bold\"),\n            axis.title.y.right = element_text(size = 2),\n            legend.text=element_text(size=8),\n            legend.title=element_text(size=8),\n            axis.line = element_line(size=0.5))\n\n\np2<- DimPlot(isoT4k_filter, reduction = \"umap\",label = TRUE, group.by = \"CellType\", pt.size = 0.5, label.size = 3.5, repel=TRUE) + \n            NoLegend() + \n            ggtitle('Cells Clustered by Gene Expression') +\n            theme(plot.title = element_text(size = 10, face = \"bold\")) +\n            ggeasy::easy_center_title() &\n            theme(text = element_text(), #face = \"bold\"\n            axis.text=element_text(size=6), #angle=45, hjust=1,\n            axis.title = element_text(size=8 ),   #face=\"bold\"),\n            axis.title.y.right = element_text(size = 2),\n            legend.text=element_text(size=8),\n            legend.title=element_text(size=8),\n            axis.line = element_line(size=0.5))\n\np1 + p2\n\n\n\n\n\nggsave(\"output/figures/Fig5/Fig5_UMAP.pdf\", width = 8, height = 10/3)\n\n\n# Select the RNA counts slot to be the default assay\nIdents(isoT4k_filter) <- isoT4k_filter$isoCellType\nDefaultAssay(isoT4k_filter) <- \"RNA\"\n\n# Normalize RNA data for visualization purposes\nisoT4k_filter <- NormalizeData(isoT4k_filter, normalization.method = \"LogNormalize\", scale.factor = 100000, verbose = FALSE)\n\n#Scal Data\nall.genes <- rownames(isoT4k_filter)\nisoT4k_filter <- ScaleData(isoT4k_filter, features = all.genes)\n\nCentering and scaling data matrix\n\n\n\nif (!file.exists(\"data/working/isoT4k_filter.rds\")) {\n  saveRDS(isoT4k_filter, \"data/working/isoT4k_filter.rds\")\n}"
  },
  {
    "objectID": "analysis/Figure5_MarkerGenesFigs.html",
    "href": "analysis/Figure5_MarkerGenesFigs.html",
    "title": "Figure 5 - Marker Genes",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.5.0 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(Seurat)\n\nAttaching SeuratObject\nAttaching sp"
  },
  {
    "objectID": "analysis/Figure5_MarkerGenesFigs.html#markers-for-isoform-based-clustering",
    "href": "analysis/Figure5_MarkerGenesFigs.html#markers-for-isoform-based-clustering",
    "title": "Figure 5 - Marker Genes",
    "section": "Markers for isoform-based clustering",
    "text": "Markers for isoform-based clustering\n\nisoT4k_filter_1<- subset(isoT4k_filter, idents=c(\"ExM\", \"ExN-ExM\", \"ExM-U\", \"In\",\n                                                 \"oRG\", \"IP\", \"ExDp\",\"vRG\",\n                                                 \"ExN-1\", \"ExN-2\", \"ExN-3\"))\nmerged.markers.CT <- FindAllMarkers(isoT4k_filter_1, only.pos = TRUE, min.pct = 0.25, logfc.threshold = 0.75)\n\nCalculating cluster ExM\n\n\nCalculating cluster ExN-ExM\n\n\nWarning in FindMarkers.default(object = data.use, slot = data.slot, counts =\ncounts, : No features pass logfc.threshold threshold; returning empty data.frame\n\n\nCalculating cluster ExM-U\n\n\nCalculating cluster ExN-1\n\n\nCalculating cluster ExN-2\n\n\nCalculating cluster In\n\n\nCalculating cluster oRG\n\n\nCalculating cluster IP\n\n\nCalculating cluster ExDp\n\n\nCalculating cluster ExN-3\n\n\nCalculating cluster vRG\n\nmerged.markers.CT.padj<- merged.markers.CT[merged.markers.CT$p_val_adj < 0.05,]\ntop.merged.markers.CT.padj<- merged.markers.CT.padj%>% group_by(cluster) %>% top_n(n = 3, wt = avg_log2FC)\n\n\nnew_order<- c(\"vRG\", \"oRG\", \"IP\", \"vRG-ExN\", \"ExN-1\", \"ExN-2\", \"ExN-3\", \"ExN-ExM\", \"ExM\", \"ExM-U\",\"ExDp\", \"In\")\ntop.merged.markers.CT.padj$cluster<- factor( as.character(top.merged.markers.CT.padj$cluster), levels= new_order)\ntop.merged.markers.CT.padj<- top.merged.markers.CT.padj[order(top.merged.markers.CT.padj$cluster),]\nisoT4k_filter_1$isoCellType<- factor(isoT4k_filter_1$isoCellType, levels = c(\"vRG\", \"oRG\", \"IP\", \"vRG-ExN\", \"ExN-1\", \"ExN-2\", \"ExN-3\", \"ExN-ExM\", \"ExM\", \"ExM-U\", \"ExDp\", \"In\"))\nIdents(isoT4k_filter_1)<- isoT4k_filter_1$isoCellType\n\nmapal <- colorRampPalette(RColorBrewer::brewer.pal(9,\"Blues\"))(256)\n\nDoHeatmap(subset(isoT4k_filter_1, downsample = 113), group.by = 'isoCellType', features = top.merged.markers.CT.padj$gene, angle = 90, size = 3, disp.max = 7, disp.min=1.5) + \n          scale_fill_gradientn(colours = mapal) + theme(plot.margin = unit(c(0.75,0.25,0.25,0.25), \"cm\")) +theme(axis.text=element_text(size=10), legend.title = element_text(size = 8), legend.text = element_text(size = 6))\n\nScale for 'fill' is already present. Adding another scale for 'fill', which\nwill replace the existing scale.\n\n\n\n\n\n\n#ggsave(\"output/figures/Fig_4G.pdf\", device =\"pdf\", dpi=600, width =754, height = 704, scale = 1/100)\nggsave(\"output/figures/Fig5/Fig5_Markers_NewCellTypes.pdf\", width = 7, height = 7)"
  },
  {
    "objectID": "analysis/Figure5_MarkerGenesFigs.html#markers-for-gene-based-clustering",
    "href": "analysis/Figure5_MarkerGenesFigs.html#markers-for-gene-based-clustering",
    "title": "Figure 5 - Marker Genes",
    "section": "Markers for gene-based clustering",
    "text": "Markers for gene-based clustering\n\nIdents(isoT4k_filter)<- isoT4k_filter$orig.ident\nhead(Idents(isoT4k_filter))\n\nEnd_ACGGCATAGTAC End_ACTGACTGATCC End_ACTGGCACCGAG End_AGCTAGCCCATG \n             End              End              End              End \nEnd_AGTTTAGCGGTC End_ATCCGACCATCA \n             End              End \n16 Levels: End ExDp1 ExDp2 ExM ExM-U ExN InCGE InMGE IP Mic OPC oRG ... vRG\n\nisoT4k_filter_2<- subset(isoT4k_filter, idents=c(\"vRG\", \"oRG\", \"IP\", \"ExN\", \"ExM\", \"ExM-U\", \"ExDp1\", \"ExDp2\", \"InCGE\", \"InMGE\"))\nisoT4k_filter_2\n\nAn object of class Seurat \n141112 features across 3912 samples within 2 assays \nActive assay: RNA (87162 features, 0 variable features)\n 1 other assay present: SCT\n 2 dimensional reductions calculated: pca, umap\n\n\n\nmerged.markers.CT <- FindAllMarkers(isoT4k_filter_2, only.pos = TRUE, min.pct = 0.15, logfc.threshold = 0.25)\n\nCalculating cluster ExDp1\n\n\nCalculating cluster ExDp2\n\n\nCalculating cluster ExM\n\n\nCalculating cluster ExM-U\n\n\nCalculating cluster ExN\n\n\nCalculating cluster InCGE\n\n\nCalculating cluster InMGE\n\n\nCalculating cluster IP\n\n\nCalculating cluster oRG\n\n\nCalculating cluster vRG\n\nmerged.markers.CT.padj<- merged.markers.CT[merged.markers.CT$p_val_adj < 0.05,]\ntop.merged.markers.CT.padj<- merged.markers.CT.padj%>% group_by(cluster) %>% top_n(n = 5, wt = avg_log2FC)\nmin(table(Idents(isoT4k_filter_2)))\n\n[1] 14\n\n\n\nDoHeatmap(isoT4k_filter_2, features = top.merged.markers.CT.padj$gene, angle = 90, size = 3, disp.max = 7, disp.min=0.5) + scale_fill_gradientn(colours = mapal) + theme(plot.margin = unit(c(0.75,0.25,0.25,0.25), \"cm\")) +theme(axis.text=element_text(size=10), legend.title = element_text(size = 8), legend.text = element_text(size = 6))\n\nScale for 'fill' is already present. Adding another scale for 'fill', which\nwill replace the existing scale.\n\n\n\n\n\n\n#ggsave(\"Marker_oldCT_v3.pdf\", width = 7.54, height = 7.04)\n\n\nisoT4k_filter_2$orig.ident<- factor(isoT4k_filter_2$orig.ident, levels = c(\"vRG\", \"oRG\", \"IP\", \"ExN\", \"ExM\", \"ExM-U\", \"ExDp1\", \"ExDp2\", \"InCGE\", \"InMGE\"))\nnew_order<- c(\"vRG\", \"oRG\", \"IP\", \"ExN\", \"ExM\", \"ExM-U\", \"ExDp1\", \"ExDp2\", \"InCGE\", \"InMGE\")\ntop.merged.markers.CT.padj$cluster<- factor( as.character(top.merged.markers.CT.padj$cluster), levels= new_order)\ntop.merged.markers.CT.padj<- top.merged.markers.CT.padj[order(top.merged.markers.CT.padj$cluster),]\n\n\nDoHeatmap(subset(isoT4k_filter_2, downsample = 200), features = top.merged.markers.CT.padj$gene, angle = 90, size = 3, disp.max = 7.5, disp.min=1.5) + scale_fill_gradientn(colours = mapal) + theme(plot.margin = unit(c(0.75,0.25,0.25,0.25), \"cm\")) +theme(axis.text=element_text(size=10), legend.title = element_text(size = 8), legend.text = element_text(size = 6))\n\nScale for 'fill' is already present. Adding another scale for 'fill', which\nwill replace the existing scale.\n\n\n\n\n\n\n#ggsave(\"Marker_oldCT_v3.pdf\", width = 7.54, height = 9.5)\n\n\nIdents(isoT4k_filter_2)<- isoT4k_filter_2$orig.ident\n\n\nDoHeatmap(subset(isoT4k_filter_2, downsample = 200), features = top.merged.markers.CT.padj$gene, angle = 90, size = 3, disp.max = 7.5, disp.min=1.5) + scale_fill_gradientn(colours = mapal) + theme(plot.margin = unit(c(0.75,0.25,0.25,0.25), \"cm\")) +theme(axis.text=element_text(size=10), legend.title = element_text(size = 8), legend.text = element_text(size = 6))\n\nScale for 'fill' is already present. Adding another scale for 'fill', which\nwill replace the existing scale.\n\n\n\n\n\n\n#ggsave(\"Marker_oldCT_v3.pdf\", device =\"pdf\", dpi=600, width =794, height = 970, scale = 1/100)\nggsave(\"output/figures/Fig5/Fig5_Markers_oldCellTypes.pdf\", width = 7.94, height = 9.70)"
  },
  {
    "objectID": "analysis/Figure5_TableS5D.html",
    "href": "analysis/Figure5_TableS5D.html",
    "title": "Figure 5 - Table S5D",
    "section": "",
    "text": "isoT4k_filter = readRDS(\"data/working/isoT4k_filter.rds\")\nlevels(isoT4k_filter$orig.ident) = gsub(\"\\\\.\", \"-\", levels(isoT4k_filter$orig.ident)) # ExM.U becomes ExM-U\n\nLoading required package: SeuratObject\n\n\nAttaching sp\n\n\nLoading required package: Seurat\n\nisoT4k_filter\n\nAn object of class Seurat \n141112 features across 4167 samples within 2 assays \nActive assay: RNA (87162 features, 0 variable features)\n 1 other assay present: SCT\n 2 dimensional reductions calculated: pca, umap\n\n\n\n################Identifying gene with different isoforms significantly expressed in different cell types\n#####Code is adapted from https://doi.org/10.1038/s41467-020-17800-6\n\n\nclusters <- c(\"End\", \"ExDp1\", \"ExDp2\", \"ExM\", \"ExM.U\", \"ExN\", \"InCGE\", \"InMGE\", \"IP\", \"Mic\", \"OPC\", \"oRG\", \"Per\", \"PgG2M\", \"PgS\", \"vRG\")\nIdents(isoT4k_filter) <- isoT4k_filter$CellType\n\ntotal <- data.frame()\ntotaladj <- data.frame()\nfor (i in (1:15)){\n  k <- i+1\n  for (j in (k:16)){\n    if(i != j){\n      print(paste(i, \" \", j, \" \",clusters[i], \" vs \", clusters[j], sep=\"\"))\n      \n      markers <- FindMarkers(object = isoT4k_filter , ident.1=clusters[i], ident.2=clusters[j])\n      markers$cluster <- clusters[j]\n      markers$contrast <- paste(clusters[i], \"vs\", clusters[j], sep=\" \")\n      markers[which(markers$avg_log2FC>0),]$cluster <- clusters[i]\n      markers$geneId <- sapply(strsplit(rownames(markers), \"-ENS|-TAL\"), `[`, 1)\n      markers$transcriptId <- sapply(strsplit(rownames(markers), \"-ENS|-TAL\"), `[`, 2)\n      markers <- markers[markers$p_val < 0.05,]\n      all.genes <- unique(markers$geneId)\n      for (k in (1:length(all.genes))){\n        sub <- markers[which(markers$geneId == all.genes[k]),]\n        nb.clusters <- unique(sub$cluster)\n        nb.transcripts <- unique(sub$transcriptId)\n        \n        if(length(nb.clusters) > 1 & length(nb.transcripts) > 1){\n          total <- rbind(total, sub)\n        }\n      }\n      \n      markers <- markers[markers$p_val_adj < 0.05,]\n      all.genes <- unique(markers$geneId)\n      for (k in (1:length(all.genes))){\n        sub <- markers[which(markers$geneId == all.genes[k]),]\n        nb.clusters <- unique(sub$cluster)\n        nb.transcripts <- unique(sub$transcriptId)\n        \n        if(length(nb.clusters) > 1 & length(nb.transcripts) > 1){\n          totaladj <- rbind(totaladj, sub)\n        }\n      }\n      print (dim(total))\n      print (length(unique(total$geneId)))\n    }\n  }\n}\n\n[1] \"1 2 End vs ExDp1\"\n[1] 10  9\n[1] 4\n[1] \"1 3 End vs ExDp2\"\n[1] 10  9\n[1] 4\n[1] \"1 4 End vs ExM\"\n[1] 25  9\n[1] 7\n[1] \"1 5 End vs ExM.U\"\n[1] 44  9\n[1] 10\n[1] \"1 6 End vs ExN\"\n[1] 56  9\n[1] 10\n[1] \"1 7 End vs InCGE\"\n[1] 66  9\n[1] 10\n[1] \"1 8 End vs InMGE\"\n[1] 75  9\n[1] 10\n[1] \"1 9 End vs IP\"\n[1] 92  9\n[1] 10\n[1] \"1 10 End vs Mic\"\n[1] 92  9\n[1] 10\n[1] \"1 11 End vs OPC\"\n[1] 94  9\n[1] 10\n[1] \"1 12 End vs oRG\"\n[1] 110   9\n[1] 11\n[1] \"1 13 End vs Per\"\n[1] 110   9\n[1] 11\n[1] \"1 14 End vs PgG2M\"\n[1] 135   9\n[1] 13\n[1] \"1 15 End vs PgS\"\n[1] 155   9\n[1] 14\n[1] \"1 16 End vs vRG\"\n[1] 172   9\n[1] 15\n[1] \"2 3 ExDp1 vs ExDp2\"\n[1] 172   9\n[1] 15\n[1] \"2 4 ExDp1 vs ExM\"\n[1] 178   9\n[1] 18\n[1] \"2 5 ExDp1 vs ExM.U\"\n[1] 180   9\n[1] 19\n[1] \"2 6 ExDp1 vs ExN\"\n[1] 184   9\n[1] 20\n[1] \"2 7 ExDp1 vs InCGE\"\n[1] 188   9\n[1] 22\n[1] \"2 8 ExDp1 vs InMGE\"\n[1] 192   9\n[1] 24\n[1] \"2 9 ExDp1 vs IP\"\n[1] 200   9\n[1] 24\n[1] \"2 10 ExDp1 vs Mic\"\n[1] 221   9\n[1] 29\n[1] \"2 11 ExDp1 vs OPC\"\n[1] 221   9\n[1] 29\n[1] \"2 12 ExDp1 vs oRG\"\n[1] 246   9\n[1] 38\n[1] \"2 13 ExDp1 vs Per\"\n[1] 256   9\n[1] 40\n[1] \"2 14 ExDp1 vs PgG2M\"\n[1] 273   9\n[1] 41\n[1] \"2 15 ExDp1 vs PgS\"\n[1] 283   9\n[1] 41\n[1] \"2 16 ExDp1 vs vRG\"\n[1] 302   9\n[1] 41\n[1] \"3 4 ExDp2 vs ExM\"\n[1] 306   9\n[1] 43\n[1] \"3 5 ExDp2 vs ExM.U\"\n[1] 314   9\n[1] 45\n[1] \"3 6 ExDp2 vs ExN\"\n[1] 318   9\n[1] 45\n[1] \"3 7 ExDp2 vs InCGE\"\n[1] 320   9\n[1] 46\n[1] \"3 8 ExDp2 vs InMGE\"\n[1] 322   9\n[1] 47\n[1] \"3 9 ExDp2 vs IP\"\n[1] 330   9\n[1] 48\n[1] \"3 10 ExDp2 vs Mic\"\n[1] 332   9\n[1] 48\n[1] \"3 11 ExDp2 vs OPC\"\n[1] 334   9\n[1] 48\n[1] \"3 12 ExDp2 vs oRG\"\n[1] 346   9\n[1] 48\n[1] \"3 13 ExDp2 vs Per\"\n[1] 346   9\n[1] 48\n[1] \"3 14 ExDp2 vs PgG2M\"\n[1] 350   9\n[1] 49\n[1] \"3 15 ExDp2 vs PgS\"\n[1] 363   9\n[1] 50\n[1] \"3 16 ExDp2 vs vRG\"\n[1] 374   9\n[1] 50\n[1] \"4 5 ExM vs ExM.U\"\n[1] 376   9\n[1] 50\n[1] \"4 6 ExM vs ExN\"\n[1] 378   9\n[1] 51\n[1] \"4 7 ExM vs InCGE\"\n[1] 378   9\n[1] 51\n[1] \"4 8 ExM vs InMGE\"\n[1] 383   9\n[1] 52\n[1] \"4 9 ExM vs IP\"\n[1] 387   9\n[1] 53\n[1] \"4 10 ExM vs Mic\"\n[1] 405   9\n[1] 54\n[1] \"4 11 ExM vs OPC\"\n[1] 411   9\n[1] 56\n[1] \"4 12 ExM vs oRG\"\n[1] 434   9\n[1] 59\n[1] \"4 13 ExM vs Per\"\n[1] 447   9\n[1] 60\n[1] \"4 14 ExM vs PgG2M\"\n[1] 455   9\n[1] 60\n[1] \"4 15 ExM vs PgS\"\n[1] 460   9\n[1] 60\n[1] \"4 16 ExM vs vRG\"\n[1] 478   9\n[1] 61\n[1] \"5 6 ExM.U vs ExN\"\n[1] 495   9\n[1] 65\n[1] \"5 7 ExM.U vs InCGE\"\n[1] 506   9\n[1] 66\n[1] \"5 8 ExM.U vs InMGE\"\n[1] 519   9\n[1] 69\n[1] \"5 9 ExM.U vs IP\"\n[1] 537   9\n[1] 70\n[1] \"5 10 ExM.U vs Mic\"\n[1] 567   9\n[1] 72\n[1] \"5 11 ExM.U vs OPC\"\n[1] 569   9\n[1] 72\n[1] \"5 12 ExM.U vs oRG\"\n[1] 590   9\n[1] 72\n[1] \"5 13 ExM.U vs Per\"\n[1] 608   9\n[1] 74\n[1] \"5 14 ExM.U vs PgG2M\"\n[1] 626   9\n[1] 74\n[1] \"5 15 ExM.U vs PgS\"\n[1] 641   9\n[1] 74\n[1] \"5 16 ExM.U vs vRG\"\n[1] 661   9\n[1] 75\n[1] \"6 7 ExN vs InCGE\"\n[1] 665   9\n[1] 76\n[1] \"6 8 ExN vs InMGE\"\n[1] 665   9\n[1] 76\n[1] \"6 9 ExN vs IP\"\n[1] 667   9\n[1] 76\n[1] \"6 10 ExN vs Mic\"\n[1] 676   9\n[1] 76\n[1] \"6 11 ExN vs OPC\"\n[1] 676   9\n[1] 76\n[1] \"6 12 ExN vs oRG\"\n[1] 690   9\n[1] 77\n[1] \"6 13 ExN vs Per\"\n[1] 699   9\n[1] 78\n[1] \"6 14 ExN vs PgG2M\"\n[1] 718   9\n[1] 83\n[1] \"6 15 ExN vs PgS\"\n[1] 743   9\n[1] 88\n[1] \"6 16 ExN vs vRG\"\n[1] 767   9\n[1] 92\n[1] \"7 8 InCGE vs InMGE\"\n[1] 767   9\n[1] 92\n[1] \"7 9 InCGE vs IP\"\n[1] 769   9\n[1] 92\n[1] \"7 10 InCGE vs Mic\"\n[1] 773   9\n[1] 92\n[1] \"7 11 InCGE vs OPC\"\n[1] 775   9\n[1] 92\n[1] \"7 12 InCGE vs oRG\"\n[1] 795   9\n[1] 97\n[1] \"7 13 InCGE vs Per\"\n[1] 808   9\n[1] 100\n[1] \"7 14 InCGE vs PgG2M\"\n[1] 842   9\n[1] 103\n[1] \"7 15 InCGE vs PgS\"\n[1] 879   9\n[1] 104\n[1] \"7 16 InCGE vs vRG\"\n[1] 901   9\n[1] 106\n[1] \"8 9 InMGE vs IP\"\n[1] 903   9\n[1] 106\n[1] \"8 10 InMGE vs Mic\"\n[1] 907   9\n[1] 106\n[1] \"8 11 InMGE vs OPC\"\n[1] 911   9\n[1] 107\n[1] \"8 12 InMGE vs oRG\"\n[1] 947   9\n[1] 111\n[1] \"8 13 InMGE vs Per\"\n[1] 961   9\n[1] 114\n[1] \"8 14 InMGE vs PgG2M\"\n[1] 987   9\n[1] 115\n[1] \"8 15 InMGE vs PgS\"\n[1] 1022    9\n[1] 120\n[1] \"8 16 InMGE vs vRG\"\n[1] 1043    9\n[1] 121\n[1] \"9 10 IP vs Mic\"\n[1] 1060    9\n[1] 122\n[1] \"9 11 IP vs OPC\"\n[1] 1064    9\n[1] 122\n[1] \"9 12 IP vs oRG\"\n[1] 1070    9\n[1] 123\n[1] \"9 13 IP vs Per\"\n[1] 1081    9\n[1] 123\n[1] \"9 14 IP vs PgG2M\"\n[1] 1085    9\n[1] 124\n[1] \"9 15 IP vs PgS\"\n[1] 1094    9\n[1] 126\n[1] \"9 16 IP vs vRG\"\n[1] 1098    9\n[1] 126\n[1] \"10 11 Mic vs OPC\"\n[1] 1101    9\n[1] 126\n[1] \"10 12 Mic vs oRG\"\n[1] 1125    9\n[1] 127\n[1] \"10 13 Mic vs Per\"\n[1] 1125    9\n[1] 127\n[1] \"10 14 Mic vs PgG2M\"\n[1] 1157    9\n[1] 130\n[1] \"10 15 Mic vs PgS\"\n[1] 1198    9\n[1] 136\n[1] \"10 16 Mic vs vRG\"\n[1] 1239    9\n[1] 139\n[1] \"11 12 OPC vs oRG\"\n[1] 1243    9\n[1] 141\n[1] \"11 13 OPC vs Per\"\n[1] 1243    9\n[1] 141\n[1] \"11 14 OPC vs PgG2M\"\n[1] 1245    9\n[1] 141\n[1] \"11 15 OPC vs PgS\"\n[1] 1252    9\n[1] 141\n[1] \"11 16 OPC vs vRG\"\n[1] 1258    9\n[1] 141\n[1] \"12 13 oRG vs Per\"\n[1] 1266    9\n[1] 142\n[1] \"12 14 oRG vs PgG2M\"\n[1] 1268    9\n[1] 142\n[1] \"12 15 oRG vs PgS\"\n[1] 1270    9\n[1] 142\n[1] \"12 16 oRG vs vRG\"\n[1] 1270    9\n[1] 142\n[1] \"13 14 Per vs PgG2M\"\n[1] 1288    9\n[1] 145\n[1] \"13 15 Per vs PgS\"\n[1] 1305    9\n[1] 146\n[1] \"13 16 Per vs vRG\"\n[1] 1313    9\n[1] 146\n[1] \"14 15 PgG2M vs PgS\"\n[1] 1315    9\n[1] 146\n[1] \"14 16 PgG2M vs vRG\"\n[1] 1318    9\n[1] 146\n[1] \"15 16 PgS vs vRG\"\n[1] 1320    9\n[1] 147\n\n\n\n# Top hits p_val_adj < 0.05\n\nlength(unique(totaladj$geneId))\n\n[1] 7\n\nprint(unique(totaladj$geneId))\n\n[1] \"CADM1\" \"GPM6A\" \"MAP1B\" \"APP\"   \"RTN4\"  \"DCTN2\" \"PFN2\" \n\nwrite.table(totaladj, file=\"output/tables/TableS5D.txt\", sep=\"\\t\", quote = F)\n\n\n# Lower hits p_val < 0.05\n\n#length(unique(total$geneId))\n#print(unique(total$geneId))\n#write.table(total, file=\"isoswitch.v2.txt\", sep=\"\\t\", quote = F)"
  },
  {
    "objectID": "analysis/Figure5_PseudotimeAnalysis.html",
    "href": "analysis/Figure5_PseudotimeAnalysis.html",
    "title": "Figure 5 - Pseudotime Analysis",
    "section": "",
    "text": "library(monocle3) # requires Bioconductor version 3.14 https://cole-trapnell-lab.github.io/monocle3/docs/installation/\nlibrary(Seurat)\n#library(SeuratData)\nlibrary(SeuratWrappers) # remotes::install_github('satijalab/seurat-wrappers@9652bdd') (for Seurat >= 3.0.1; use latest release for Seurat >= 4.2.0)\nlibrary(ggplot2)\nlibrary(patchwork)\nlibrary(magrittr)\n\n\nisoT4k_filter = readRDS(\"data/working/isoT4k_filter.rds\")\nlevels(isoT4k_filter$orig.ident) = gsub(\"\\\\.\", \"-\", levels(isoT4k_filter$orig.ident)) # ExM.U becomes ExM-U\nisoT4k_filter\n\n\ncds <- as.cell_data_set(isoT4k_filter)\ncds <- cluster_cells(cds,reduction_method = \"UMAP\")\ncds <- learn_graph(cds, use_partition = FALSE)\n\n\n##  Order cells\ncds <- order_cells(cds, reduction_method = \"UMAP\")\n\n\ncds.sub <- subset(as.Seurat(cds, assay = NULL), monocle3_partitions == 1)\ncds.sub <- as.cell_data_set(cds.sub)\ncds.sub <- learn_graph(cds.sub)\n#vRG = row.names(isoT4k_filter@meta.data %>% filter(isoT4k_filter@meta.data$isoCellType == \"vRG\"))\n#cds <- order_cells(cds, reduction_method = \"UMAP\", root_cells = vRG)\n\n\ncds.sub <- order_cells(cds.sub, reduction_method = \"UMAP\")\n\n\nplot_cells(cds.sub, color_cells_by = \"pseudotime\", label_cell_groups = FALSE, label_leaves = FALSE, \n           label_branch_points = FALSE, group_cells_by = \"cluster\")\n\n\n#ggsave(\"~/Desktop/Plots_N/upload/pseudotime.ExN\", device =\"pdf\", dpi=600, width = 6, height = 5, units = \"in\")\nggsave(\"output/figures/Fig5/Fig5_pseudotime.pdf\", width = 4, height = 10/3)"
  },
  {
    "objectID": "analysis/Figure5_Sankey.html",
    "href": "analysis/Figure5_Sankey.html",
    "title": "Figure 5 - Sankey",
    "section": "",
    "text": "# remotes::install_github(\"davidsjoberg/ggsankey\")\n\nlibrary(tidyverse)\nlibrary(ggsankey)\n\nashok_data <- read.table(\"data/single_cell/4allu_plot.txt\", header = T)\n\nall_ctypes <- c(unique(ashok_data$nCount_RNA), unique(ashok_data$IsoCellType))\n\nordered_ctypes <-c(\"Per\", \"End\", \"Mic\", \"Mic/Per/End\",\n                  \"vRG-ExN\", \"vRG\", \"PgS\", \"PgG2M\",\n                   \"oRG\", \"OPC\", \"IP\",\n                   \"InMGE\", \"InCGE\", \"In\", \"ExN-ExM\", \"ExN-3\",\n                   \"ExN-2\", \"ExN-1\", \"ExN\", \"ExM-U\", \"ExM\",\n                   \"ExDp2\", \"ExDp1\", \"ExDp\")\n\nctype_map <- tibble(name = ordered_ctypes, id = 1:length(unique(all_ctypes)))\n\nashok_data_before <- inner_join(tibble(name = ashok_data$nCount_RNA), ctype_map)\n\nJoining, by = \"name\"\n\nashok_data_after <- inner_join(tibble(name = ashok_data$IsoCellType), ctype_map)\n\nJoining, by = \"name\"\n\nalluvial_data <- tibble(before = ashok_data_before$id,\n                        after = ashok_data_after$id)\n\ndf <- alluvial_data %>%\n  make_long(before, after)\n\nnode_name_tbl <- tibble(node = ctype_map$id, name = ctype_map$name)\ndf <- inner_join(df, node_name_tbl)\n\nJoining, by = \"node\"\n\ndf <- df %>% arrange(node, next_node)\n\nggplot(df, aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node), label = name)) +\n  geom_alluvial(flow.alpha = .7, width = 0.25, space = 300) +\n  geom_alluvial_label(size = 6 * 25.4 / 72.27, color = \"black\", fill = \"white\", space = 300) +\n  scale_fill_viridis_d() +\n  theme_alluvial() +\n  labs(x = NULL, y = NULL) +\n  theme(\n    legend.position = \"none\",\n    axis.text.x = element_blank(),\n    axis.ticks.x = element_blank(),\n    axis.text.y = element_blank(),\n    axis.ticks.y = element_blank()\n  )\n\n\n\n\n\nggsave(\"output/figures/Fig5/Fig5_Alluvial.pdf\", height = 5, width = 5)"
  },
  {
    "objectID": "analysis/Figure6_rareVariant.html",
    "href": "analysis/Figure6_rareVariant.html",
    "title": "Figure 6 - Rare Variant",
    "section": "",
    "text": "source('code/fisher_overlap.R')\n\nsuppressPackageStartupMessages({\n  library(edgeR)\n  library(WGCNA)\n  library(biomaRt)\n  library(parallel)\n  library(tidyverse)\n})\n\ncolorVector = c(\n  \"Known\" = \"#009E73\",\n  \"ISM\"   = \"#0072B2\",\n  \"ISM_Prefix\" = \"#005996\",\n  \"ISM_Suffix\" = \"#378bcc\",\n  \"NIC\"   = \"#D55E00\",\n  \"NNC\"   = \"#E69F00\",\n  \"Other\" = \"#000000\"\n)\ncolorVector_ismSplit = colorVector[-2]\n\n\n\n# Load bulk transcriptome data, see analysis/Figure1_BulkTxomeAnalysis.qmd\nload(\"data/working/bulkTxome.Rdata\")\n\n\n# Load DGE/DTE/DTU sumstats\ntableS3 = read_tsv(\"output/tables/TableS3_v3.tsv.gz\")\n\nRows: 102319 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (5): isoform_id, gene_id, gene_name, condition_1, condition_2\ndbl (9): DTU_dIF, DTU_pval, DTU_qval, DTE_log2FC, DTE_pval, DTE_qval, DGE_lo...\nlgl (3): DTU, DTE, DGE\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntableS3$ensg = substr(tableS3$gene_id,1,15)\n\n# Load networks\ntidyMods = read_tsv(file='output/tables/TableS4A_networks.tsv')\n\nRows: 209812 Columns: 11\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (7): network, transcript_id, module.color, module, gene_id, gene_name, ensg\ndbl (3): module.number, kME, hub.rank\nlgl (1): hub\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message."
  },
  {
    "objectID": "analysis/Figure6_rareVariant.html#load-rare-variant-datasets",
    "href": "analysis/Figure6_rareVariant.html#load-rare-variant-datasets",
    "title": "Figure 6 - Rare Variant",
    "section": "Load Rare Variant datasets",
    "text": "Load Rare Variant datasets\n\ngeneAnno = rtracklayer::import(\"ref/gencode.v33lift37.annotation.gtf.gz\") %>% as_tibble() %>% filter(type=='gene')\ngeneAnno$ensg = substr(geneAnno$gene_id,1,15)\ngeneAnno = geneAnno[match(unique(geneAnno$ensg), geneAnno$ensg),]\n\n#Binary vector 0 for all protein coding genes, NA for non-coding; will replace with 1 for rare variant disease risk gene\nprotein_coding_bg = rep(NA, times=nrow(geneAnno))\nprotein_coding_bg[geneAnno$gene_type==\"protein_coding\"] = 0\nnames(protein_coding_bg) = geneAnno$ensg\n\n\n#Start with compiled list of risk genes from SFARI, Kaplanis,\nrisk_genes =read.csv(\"ref/ASD+SCZ+DDD_2022.csv\")\nrareVar.binary =data.frame(ASD.SFARI.1 = protein_coding_bg)\nrownames(rareVar.binary)= geneAnno$ensg\nrareVar.binary$ASD.SFARI.1[geneAnno$gene_name %in% risk_genes$Gene[risk_genes$Set==\"ASD (SFARI score 1)\"]] = 1\nrareVar.binary$ASD.SFARI.1or2 = protein_coding_bg\nrareVar.binary$ASD.SFARI.1or2[geneAnno$gene_name %in% risk_genes$Gene[risk_genes$Set==\"ASD (SFARI score 1or2)\"]] = 1\nrareVar.binary$ASD.SFARI.S = protein_coding_bg\nrareVar.binary$ASD.SFARI.S[geneAnno$gene_name %in% risk_genes$Gene[risk_genes$Set==\"ASD (SFARI syndromic)\"]] = 1\nrareVar.binary$DDD.kaplanis = protein_coding_bg\nrareVar.binary$DDD.kaplanis[geneAnno$gene_name %in% risk_genes$Gene[risk_genes$Set==\"DDD (Kaplanis et al. 2019)\"]] = 1\n\nepilepsy_helbig = openxlsx::read.xlsx('http://epilepsygenetics.net/wp-content/uploads/2023/01/Channelopathist_genes_internal_2023_v2.xlsx')\nrareVar.binary$EPI.helbig = protein_coding_bg\nrareVar.binary$EPI.helbig[geneAnno$gene_name %in% epilepsy_helbig$Gene] = 1\n\n\n# Fu et al., Nat Genetics 2022 -- ASD, NDD TADA\nfu=openxlsx::read.xlsx(('https://static-content.springer.com/esm/art%3A10.1038%2Fs41588-022-01104-0/MediaObjects/41588_2022_1104_MOESM3_ESM.xlsx'),'Supplementary Table 11')\nfu$p_TADA_ASD[fu$p_TADA_ASD==0] = min(fu$p_TADA_ASD[fu$p_TADA_ASD >0],na.rm=T)\nfu$p_TADA_NDD[fu$p_TADA_NDD==0] = min(fu$p_TADA_NDD[fu$p_TADA_NDD >0],na.rm=T)\n\nrareVar.logit = rareVar.binary\nrareVar.logit$ASD.fuTADA= -log10(fu$p_TADA_ASD)[match(geneAnno$ensg, fu$gene_id)]\nrareVar.binary$ASD.fuTADA= as.numeric(fu$FDR_TADA_ASD[match(geneAnno$ensg, fu$gene_id)] < .1)\nrareVar.logit$NDD.fuTADA = -log10(fu$p_TADA_NDD)[match(geneAnno$ensg, fu$gene_id)]\nrareVar.binary$NDD.fuTADA = as.numeric(fu$FDR_TADA_NDD[match(geneAnno$ensg, fu$gene_id)] < .1)\n\nSCZ.schema = read_tsv('ref/risk_genes/SCHEMA_gene_results.tsv')\n\nWarning: One or more parsing issues, see `problems()` for details\n\n\nRows: 18321 Columns: 26\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (8): gene_id, group, OR (PTV), OR (Class I), OR (Class II), OR (PTV) up...\ndbl (16): Case PTV, Ctrl PTV, Case mis3, Ctrl mis3, Case mis2, Ctrl mis2, P ...\nlgl  (2): De novo mis3, De novo mis2\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrareVar.logit$SCZ.schema = -log10(SCZ.schema$`P meta`[match(geneAnno$ensg, SCZ.schema$gene_id)])\nrareVar.binary$SCZ.schema = as.numeric(SCZ.schema$`Q meta`[match(geneAnno$ensg, SCZ.schema$gene_id)] < .1)\n\nBIP.bipex = read_tsv('ref/risk_genes/BipEx_gene_results.tsv') %>% filter(group==\"Bipolar Disorder\")\n\nRows: 119958 Columns: 20\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr  (4): gene_id, group, damaging_missense_fisher_gnom_non_psych_OR, ptv_fi...\ndbl (16): n_cases, n_controls, damaging_missense_case_count, damaging_missen...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrareVar.logit$BIP.bipex = -log10(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(geneAnno$ensg,BIP.bipex$gene_id)])\nrareVar.binary$BIP.bipex = as.numeric(BIP.bipex$ptv_fisher_gnom_non_psych_pval[match(geneAnno$ensg,BIP.bipex$gene_id)] < 0.01 )\n\nEPI.epi25 = read_tsv('ref/risk_genes/Epi25_gene_results.tsv') %>% filter(group==\"EPI\")\n\nRows: 71456 Columns: 12\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_id, group\ndbl (9): xcase_lof, xctrl_lof, pval_lof, xcase_mpc, xctrl_mpc, pval_mpc, xca...\nlgl (1): pval_infrIndel\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nrareVar.logit$EPI.epi25 = -log10(EPI.epi25$pval[match(geneAnno$ensg,EPI.epi25$gene_id)])\nrareVar.binary$EPI.epi25 = as.numeric(EPI.epi25$pval[match(geneAnno$ensg,EPI.epi25$gene_id)] < .01)\n\napply(rareVar.binary,2, table)\n\n  ASD.SFARI.1 ASD.SFARI.1or2 ASD.SFARI.S DDD.kaplanis EPI.helbig ASD.fuTADA\n0       19853          19180       19913        19774      19941      17750\n1         213            889         153          292        125        255\n  NDD.fuTADA SCZ.schema BIP.bipex EPI.epi25\n0      17188      17894     17341     13531\n1        817         34        33        15\n\nrareVar.logit %>% as_tibble()\n\n# A tibble: 62,437 × 10\n   ASD.SFARI.1 ASD.SFA…¹ ASD.S…² DDD.k…³ EPI.h…⁴ ASD.f…⁵ NDD.f…⁶ SCZ.s…⁷ BIP.b…⁸\n         <dbl>     <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1          NA        NA      NA      NA      NA NA      NA           NA      NA\n 2          NA        NA      NA      NA      NA NA      NA           NA      NA\n 3          NA        NA      NA      NA      NA NA      NA           NA      NA\n 4          NA        NA      NA      NA      NA NA      NA           NA      NA\n 5          NA        NA      NA      NA      NA NA      NA           NA      NA\n 6          NA        NA      NA      NA      NA NA      NA           NA      NA\n 7           0         0       0       0       0  0.0190  0.0195      NA      NA\n 8          NA        NA      NA      NA      NA NA      NA           NA      NA\n 9          NA        NA      NA      NA      NA NA      NA           NA      NA\n10          NA        NA      NA      NA      NA NA      NA           NA      NA\n# … with 62,427 more rows, 1 more variable: EPI.epi25 <dbl>, and abbreviated\n#   variable names ¹​ASD.SFARI.1or2, ²​ASD.SFARI.S, ³​DDD.kaplanis, ⁴​EPI.helbig,\n#   ⁵​ASD.fuTADA, ⁶​NDD.fuTADA, ⁷​SCZ.schema, ⁸​BIP.bipex"
  },
  {
    "objectID": "analysis/Figure6_rareVariant.html#gene-feature-annotations",
    "href": "analysis/Figure6_rareVariant.html#gene-feature-annotations",
    "title": "Figure 6 - Rare Variant",
    "section": "Gene Feature Annotations",
    "text": "Gene Feature Annotations\n\n# Compute fetal brain gene expression\ngeneFeatures = cts %>% group_by(ensg=substr(annot_gene_id,1,15)) %>% \n  summarise(gene_counts = sum(counts)) %>% \n  mutate(tpm = gene_counts / (sum(gene_counts) / 1000000))\n\n# Calculate number of transcripts and exons per gene in IsoSeq data\ngeneFeatures <-  as_tibble(talon_gtf)  %>% \n  mutate(ensg = str_sub(gene_id, 1, 15)) %>% group_by(ensg) %>%\n  summarize(n_transcripts = n_distinct(na.omit(transcript_id)), n_exons = n_distinct(na.omit(exon_id))) %>%\n  ungroup() %>% left_join(geneFeatures)\n\nJoining, by = \"ensg\"\n\n# Add gene length from Gencode\ngeneFeatures <- as_tibble(gencode_gtf) %>% dplyr::filter(type==\"gene\") %>% \n  mutate(ensg=substr(gene_id,0,15)) %>% dplyr::select(ensg, gene_length=width,gene_name) %>% distinct() %>%\n  right_join(geneFeatures)\n\nJoining, by = \"ensg\"\n\n# Add novel exons\nnovelExons = read.csv(\"data/working/novel_exons/mike_novel.csv\")\ngeneFeatures$novelExon=0\ngeneFeatures$novelExon[geneFeatures$ensg %in% substr(novelExons$gene_id,1,15)]=1\n\n# Add DTU/DTE/DGE\ngeneFeatures <- as_tibble(tableS3) %>% group_by(ensg) %>% summarise(DGE = any(DGE), DTU=any(DTU), DTE=any(DTE)) %>% right_join(geneFeatures)\n\nJoining, by = \"ensg\""
  },
  {
    "objectID": "analysis/Figure6_rareVariant.html#rare-variant-enrichment-analyses",
    "href": "analysis/Figure6_rareVariant.html#rare-variant-enrichment-analyses",
    "title": "Figure 6 - Rare Variant",
    "section": "Rare Variant Enrichment Analyses:",
    "text": "Rare Variant Enrichment Analyses:\n\n1) Transcript, exon number, novel exon\n\ndf_enrichments = data.frame()\n\n\n# Interpretion of the odds ratio here:\n# For every doubling of number of transcripts per gene (log2), there is 64% increase\n# in odds that a gene is ASD risk gene (SFARI.1)\n# \n# Dx          |   Feature           | Class   |   OR      | Z score   | P value |\n# ------------| ------------------  | ------- | --------- | --------- | ---------- |\n#   ASD.SFARI.1 |  n_transcripts_log2 | txAnno  | 1.6377222 | 9.9933917 | 1.629102e-23\n\nfor(i in 1:ncol(rareVar.binary)) {\n  this_rareVar = rareVar.binary[geneFeatures$ensg,i]\n  \n  # Number of transcripts\n  s=summary(glm(this_rareVar ~ log2(n_transcripts) + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n  coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], feature= \"n_transcripts_log2\",  class='txAnno',\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments = rbind(df_enrichments, this_result)\n  \n    # Number of transcripts | expression\n  s=summary(glm(this_rareVar ~ log2(n_transcripts) + log10(gene_length) + log10(tpm),\n                data=geneFeatures, family='binomial'))\n  coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], feature= \"n_transcripts_log2|tpm\",  class='txAnno',\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments = rbind(df_enrichments, this_result)\n  \n  # Number of exons\n  s=summary(glm(this_rareVar ~ log2(n_exons) + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n  coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], feature= \"n_exons_log2\",  class='txAnno',\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments = rbind(df_enrichments, this_result)\n  \n  # Gene has a novel exon\n  s=summary(glm(this_rareVar ~ novelExon + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n  coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], feature= \"novel_exon\",   class='txAnno',\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments = rbind(df_enrichments, this_result)\n  \n}\n\ndf_enrichments %>% mutate(fdr = p.adjust(P, 'fdr')) %>% group_by(dx)   %>% \n    ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr)))+ geom_bar(stat='identity',fill='royalblue') + \n    facet_wrap(dx~.,scales = 'free_y',ncol=2) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n    labs(x=\"\") + ggtitle(\"Rare Variant Gene Enrichments\",subtitle = 'Gene features from IsoSeq') + theme_bw()\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar01.pdf\", width = 6, height = 6)\n\n\n\n2) DGE/DTE/DTU genes\n\ndiffExMat = data.frame(DTU = as.numeric(geneFeatures$DTU), \n                       DTE = as.numeric(geneFeatures$DTE),\n                       DGE=as.numeric(geneFeatures$DGE))\nrownames(diffExMat) = geneFeatures$ensg\ndiffExMat$DTU.not.DGE = as.numeric(geneFeatures$DTU & !geneFeatures$DGE)\ndiffExMat$DTU.not.DTE = as.numeric(geneFeatures$DTU & !geneFeatures$DTE)\ndiffExMat$DTE.not.DGE = as.numeric(geneFeatures$DTE & !geneFeatures$DGE)\ndiffExMat$DTU.up = as.numeric(rownames(diffExMat) %in% (tableS3 %>% filter(DTU, DTU_dIF>0) %>% dplyr::select(ensg) %>% pull()))\ndiffExMat$DTU.down = as.numeric(rownames(diffExMat) %in% (tableS3 %>% filter(DTU, DTU_dIF<0) %>% dplyr::select(ensg) %>% pull()))\ndiffExMat$DTE.up = as.numeric(rownames(diffExMat) %in% (tableS3 %>% filter(DTE, DTE_log2FC>0) %>% dplyr::select(ensg) %>% pull()))\ndiffExMat$DTE.down = as.numeric(rownames(diffExMat) %in% (tableS3 %>% filter(DTE, DTE_log2FC<0) %>% dplyr::select(ensg) %>% pull()))\ndiffExMat$DGE.up = as.numeric(rownames(diffExMat) %in% (tableS3 %>% filter(DGE, DGE_log2FC>0) %>% dplyr::select(ensg) %>% pull()))\ndiffExMat$DGE.down = as.numeric(rownames(diffExMat) %in% (tableS3 %>% filter(DGE, DGE_log2FC<0) %>% dplyr::select(ensg) %>% pull()))\n\ndf_enrichments.de = data.frame()\nfor(i in 1:ncol(rareVar.binary)) {\n  this_rareVar = rareVar.binary[geneFeatures$ensg,i]\n  \n  for(j in 1:ncol(diffExMat)) {\n    this_feature = diffExMat[geneFeatures$ensg,j]\n    \n      s=summary(glm(this_rareVar ~ this_feature + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n       coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], class='DGE/DTE/DTU',\n                           feature= colnames(diffExMat)[j],\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments.de = rbind(df_enrichments.de, this_result)\n      \n  }\n}\n\n\ndf_enrichments.de %>% mutate(fdr = p.adjust(P, 'fdr')) %>% group_by(dx)   %>% \n    ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr), size=OR, alpha=(OR>1)))+ geom_point(color='royalblue') + \n    facet_wrap(dx~.,scales = 'free_y',ncol=2) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n    labs(x=\"\") + ggtitle(\"Rare Variant Gene Enrichments\",subtitle = 'Gene features from IsoSeq') + theme_bw()\n\nWarning: Using alpha for a discrete variable is not advised.\n\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar02.pdf\", width = 7, height = 11)\n\n\ndf_enrichments.de$feature = factor(df_enrichments.de$feature, levels=c(\"DGE\", \"DGE.down\", \"DGE.up\", \"DTE\", \"DTE.down\", \"DTE.up\", \"DTU\", \"DTU.down\", \"DTU.up\", \"DTU.not.DGE\", \"DTU.not.DTE\", \"DTE.not.DGE\"))\ndf_enrichments.de %>% mutate(set= str_split_i(df_enrichments.de$feature, '[.]',1)) %>%  mutate(fdr = p.adjust(P, 'fdr')) %>%\n  ggplot(aes(x=reorder(dx, -log10(fdr)), y=-log10(fdr), fill=set))+ geom_bar(stat='identity') + \n    facet_wrap(feature~.,scales = 'free_y',ncol=3) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n    labs(x=\"\") + ggtitle(\"Rare Variant Gene Enrichments\",subtitle = 'CP/GZ differential expression') + theme_bw()\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar03.pdf\", width = 9, height = 8.5)\n\n\n  ggplot(df_enrichments.de %>% mutate(fdr=p.adjust(P,'fdr')), aes(y=dx, x=feature,label=ifelse(fdr<.05,signif(OR,2), \"\"), fill=-log10(fdr))) + geom_tile() + geom_text() + scale_fill_gradient(low='white',high='red') + theme(axis.text.x = element_text(angle=-90,hjust=0))\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar04.pdf\", width = 6, height = 5)\n\n\n\n3) Network Modules\n\nkMEmat = tidyMods %>% filter(module.color != 'grey') %>% pivot_wider(id_cols = ensg, names_from = module,values_from = kME, values_fn = 'max', values_fill = 0) %>% as_data_frame()\n\nWarning: `as_data_frame()` was deprecated in tibble 2.0.0.\nℹ Please use `as_tibble()` instead.\nℹ The signature and semantics have changed, see `?as_tibble`.\n\nthese_genes = kMEmat$ensg\nkMEmat = as.data.frame(kMEmat)[,-1]\nrownames(kMEmat) = these_genes\nkMEmat[kMEmat!=0] = 1\n\n\nthis_net_enrichment = function(i, j) {\n  this_feature = scale(kMEmat[geneFeatures$ensg,j],center = F)\n  this_rareVar = rareVar.binary[geneFeatures$ensg,i]\n  s=summary(glm(this_rareVar ~ this_feature + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n  coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], class='Networks',\n                           feature= colnames(kMEmat)[j],\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  return(this_result)\n}\n\n\n\ndf_enrichments.net = data.frame()\nfor(i in 1:ncol(rareVar.binary)) {\n  print(i)\n  this_df_enrichment = do.call(\"rbind\", mclapply(1:105,  this_net_enrichment, i=i,mc.cores = detectCores()))\n  df_enrichments.net = rbind(df_enrichments.net, this_df_enrichment)\n  }\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n\n\n\n–> Dendrogram Plot\n\nlibrary(pheatmap)\nnet = df_enrichments.net %>% pivot_wider(id_cols = feature, names_from = dx, values_from = P) %>% as.data.frame()\nrownames(net) = net$feature\nnet = -log10(net[,-1])\n\nanno = data.frame(network = strsplit2(rownames(net),\"[.]\")[,1])\nrownames(anno) = rownames(net)\n\npheatmap(t(net),clustering_method = 'average', border_color = 'grey60', annotation_col = anno,color = blueWhiteRed(100)[50:100])\n\n\n\n\n\npheatmap(t(net), clustering_method = 'average', border_color = 'grey60',\n         annotation_col = anno,color = blueWhiteRed(100)[50:100],\n         file = \"output/figures/Fig6/Fig6_rareVar05.pdf\", width = 14, height = 7,\n         fontsize = 10, fontsize_col = 8)\n\n\n\n\n4) Single cell markers\n\ntableS5C = openxlsx::read.xlsx('data/single_cell/Table_S5_v2.xlsx',sheet = 'C')\n\nif(FALSE) {\n  seurat = read_rds('data/single_cell/seurat/scIsoseq_4kcells_final.rds')\n  seurat_background = str_split_fixed(seurat@assays$RNA@data@Dimnames[[1]],'-',n = 2)[,1]\n  write_csv(data.frame(gene=seurat_background), file='output/tables/tableS5/seurat_background.csv')\n}\nseurat_background = read_csv('data/single_cell/seurat_background.csv')$gene\n\nRows: 87162 Columns: 1\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): gene\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ntableS5C = rbind(tableS5C, data.frame(Gene.Name=unique(seurat_background[!seurat_background %in% tableS5C$Gene.Name]), Isoform.Id=NA, cluster=NA, avg_log2FC=NA, p_val=NA, p_val_adj=NA))\ntableS5C <- tableS5C %>% left_join(geneAnno %>% dplyr::select(ensg, gene_name), by=c(\"Gene.Name\" = \"gene_name\"))\n\ndf.cell_makers <- tableS5C %>% pivot_wider(id_cols = ensg, names_from = cluster, values_from = avg_log2FC,values_fill = 0,values_fn = function(x) {max(x)}) %>% filter(!is.na(ensg)) %>% as.data.frame()\nrownames(df.cell_makers) = df.cell_makers$ensg\ndf.cell_makers = df.cell_makers[,!colnames(df.cell_makers) %in% c(\"ensg\", \"NA\")]\n\ndf.cell_makers[df.cell_makers!=0]=1\n\ndf_enrichments.singlecell = data.frame()\nfor (i in 1:ncol(rareVar.binary)) {\n  print(i)\n  this_rareVar = rareVar.binary[geneFeatures$ensg,i]\n  \n  for(j in 1:ncol(df.cell_makers)) {\n    this_feature = df.cell_makers[geneFeatures$ensg,j]\n    \n      s=summary(glm(this_rareVar ~ this_feature + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n       coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], class='SingleCellMarkers',\n                           feature= colnames(df.cell_makers)[j],\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments.singlecell = rbind(df_enrichments.singlecell, this_result)\n      \n  }\n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n\ndf_enrichments.singlecell %>% mutate(fdr = p.adjust(P, 'fdr')) %>% group_by(dx)   %>% \n    ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr)))+ geom_bar(stat='identity',fill='royalblue') + \n    facet_wrap(dx~.,scales = 'free_y',ncol=3) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n    labs(x=\"\") + ggtitle(\"Rare Variant Gene Enrichments\",subtitle = 'Single cell markers (logit)') + theme_bw()\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar06.pdf\", width = 7, height = 9)\n\n\n\n5) Single Cell DTU genes\n\ntableS5E = openxlsx::read.xlsx('data/single_cell/Table_S5_v2.xlsx',sheet = 'E')\ntableS5E <- tableS5E %>% filter(over.all < .05) %>% dplyr::select(gene_name=Gene)\ntableS5E$marker = 1\n\ntableS5E = rbind(tableS5E, data.frame(gene_name=unique(seurat_background[!seurat_background %in% tableS5E$gene_name]), marker = 0))\ntableS5E <- tableS5E %>% left_join(geneAnno %>% dplyr::select(ensg, gene_name))\n\nJoining, by = \"gene_name\"\n\ntableS5E = as.data.frame(tableS5E[match(na.omit(unique(tableS5E$ensg)), tableS5E$ensg),-1])\n\nrownames(tableS5E) = tableS5E$ensg\n\nthis_feature = tableS5E[geneFeatures$ensg,\"marker\"]\n\n\nfor (i in 1:ncol(rareVar.binary)) {\n  print(i)\n  this_rareVar = rareVar.binary[geneFeatures$ensg,i]\n  \n\n      s=summary(glm(this_rareVar ~ this_feature + log10(gene_length),\n                data=geneFeatures, family='binomial'))\n       coef = s$coefficients\n  this_result = data.frame(dx = names(rareVar.binary)[i], class='SingleCellMarkers',\n                           feature= \"SingleCellDTU\",\n                           OR = exp(coef[2,1]), Z=coef[2,3], P=coef[2,4])\n  df_enrichments.singlecell = rbind(df_enrichments.singlecell, this_result)\n      \n}\n\n[1] 1\n[1] 2\n[1] 3\n[1] 4\n[1] 5\n[1] 6\n[1] 7\n[1] 8\n[1] 9\n[1] 10\n\ndf_enrichments.singlecell %>% filter(feature==\"SingleCellDTU\") %>% mutate(fdr = p.adjust(P, 'fdr')) %>% group_by(dx)   %>% \n    ggplot(aes(x=reorder(dx, -log10(fdr)), y=-log10(fdr)))+ geom_bar(stat='identity',fill='royalblue') + \n     coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n    labs(x=\"\") + ggtitle(\"Rare Variant Gene Enrichments\",subtitle = 'Single cell DTU genes (logit)') + theme_bw()\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar07.pdf\", width = 4, height = 4)"
  },
  {
    "objectID": "analysis/Figure6_rareVariant.html#combine-all",
    "href": "analysis/Figure6_rareVariant.html#combine-all",
    "title": "Figure 6 - Rare Variant",
    "section": "Combine All",
    "text": "Combine All\n\ntableS6 = rbind(df_enrichments, df_enrichments.de, df_enrichments.net, df_enrichments.singlecell)\ntableS6$fdr = p.adjust(tableS6$P, 'fdr')\ntableS6 <- tableS6 %>% arrange(fdr)\nidx = which(tableS6$class==\"Networks\")\ntableS6$class[idx] = paste0(\"Networks.\", str_split_fixed(tableS6$feature[idx], '[.]',n = 2)[,1])\n\n\ntableS6 %>% filter(OR > 1) %>% group_by(dx) %>% slice_min(order_by = fdr,n = 10)  %>% \n  ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr),fill=class))+ geom_bar(stat='identity') + \n  facet_wrap(dx~.,scales = 'free_y',ncol=2) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n  labs(x=\"\") + ggtitle(\"Rare Variant Enrichments\",subtitle=\"Top 10 categories per rare variant dx\") + theme_bw()\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar08.pdf\", width = 8.5, height = 11)\n\n\ntableS6 %>% filter(OR > 1,fdr<.4) %>% group_by(dx) %>% slice_min(order_by = fdr,n = 10)  %>% \n  ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr),fill=dx))+ geom_bar(stat='identity',position=position_dodge()) + \n  facet_wrap(class~.,scales = 'free',ncol=2) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n  labs(x=\"\") + ggtitle(\"Rare Variant Enrichments\")\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar09.pdf\", width = 9, height = 8.5)\n\n\ntableS6 %>% filter(OR > 1, fdr< .1, dx==\"NDD.fuTADA\") %>% \n  ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr),fill=class))+ geom_bar(stat='identity',)+  coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') + ggtitle(\"NDD_fuTADA\") + theme_bw() + labs(x=\"\")\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar10.pdf\", width = 8.5, height = 11)\n\n\ntableS6 %>% filter(OR > 1, fdr< .1, dx==\"ASD.fuTADA\") %>% \n ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr),fill=class))+ geom_bar(stat='identity')+  coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') + ggtitle(\"ASD_fuTADA\") + theme_bw() + labs(x=\"\")\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar11.pdf\", width = 7, height = 6)\n\n\nwrite_tsv(tableS6,file=\"output/tables/TableS6_rareVariants.tsv\")\n\n\ntableS6 %>% filter(OR > 1) %>% group_by(class) %>% slice_min(order_by = fdr,n = 10)  %>% \n    ggplot(aes(x=reorder(feature, -log10(fdr)), y=-log10(fdr),fill=dx))+ geom_bar(stat='identity',position=position_dodge()) + \n    facet_wrap(class~.,scales = 'free_y',ncol=2) + coord_flip() + geom_hline(yintercept = -log10(.05),lty=2, color='red') +\n    labs(x=\"\") + ggtitle(\"Rare Variant Enrichments\", subtitle = \"Net\")\n\n\n\n\n\nggsave(\"output/figures/Fig6/Fig6_rareVar12.pdf\", width = 9, height = 8.5)"
  },
  {
    "objectID": "analysis/Figure6_VEPConsequences.html",
    "href": "analysis/Figure6_VEPConsequences.html",
    "title": "Figure 6 - VEP Consequences",
    "section": "",
    "text": "Required libraries\n\nlibrary(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.5.0 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(scatterpie)\n\nRequired input files\n\nvep_severity <- read.delim(\"data/VEP/vep_severity.txt\")\n\nvep_info=read.delim(\"data/VEP/pmid29700473_30545852_32461655_dnm_meta_fixMultiVar.txt.gz\")\n\ngencode <- read.delim(\"data/VEP/pmid29700473_30545852_32461655_dnm_most_severe_gencode.txt.gz\",comment.char = \"#\",header = FALSE)\n\nwithNovel <- read.delim(\"data/VEP/pmid29700473_30545852_32461655_dnm_most_severe_withNovelIsoform.txt.gz\",comment.char = \"#\",header = FALSE)\n\nProcess data and make plot\n\nvep_anno <- merge(gencode[,c(1,2,7)], withNovel[,c(1,2,7)], suffixes = c(\"_GENCODE\",\"_withNovel\"), by=c(\"V1\",\"V2\"))\n\ncolnames(vep_anno)=c(\"Uploaded_variation\",\"Location\",\"Consequence_GENCODE\",\"Consequence_withNovel\")\n\nreassign <- vep_anno %>%\n  dplyr::filter(Consequence_withNovel != Consequence_GENCODE)\n\nreassign$severity_gencode=vep_severity$RANK[match(reassign$Consequence_GENCODE,vep_severity$SO.term)]\n\nreassign$severity_withNovel=vep_severity$RANK[match(reassign$Consequence_withNovel,vep_severity$SO.term)]\n\nreassign=reassign[reassign$severity_gencode > reassign$severity_withNovel,]\n\nreassign=merge(reassign,vep_info,by.x=\"Uploaded_variation\",by.y=\"varId\")\n\nreassign_sum=reassign %>%\n  group_by(Consequence_GENCODE,Consequence_withNovel,Pheno) %>%\n  summarise(N=n()) %>%\n  spread(Pheno,N,fill = 0)\n\n`summarise()` has grouped output by 'Consequence_GENCODE',\n'Consequence_withNovel'. You can override using the `.groups` argument.\n\nreassign_sum$severity_gencode=vep_severity$RANK[match(reassign_sum$Consequence_GENCODE,vep_severity$SO.term)]\n\nreassign_sum$severity_withNovel=vep_severity$RANK[match(reassign_sum$Consequence_withNovel,vep_severity$SO.term)]\n\nreassign_sum$Consequence_GENCODE=gsub(\"_variant\",\"\",reassign_sum$Consequence_GENCODE)\n\nreassign_sum$Consequence_withNovel=gsub(\"_variant\",\"\",reassign_sum$Consequence_withNovel)\n\nreassign_sum$region=factor(1:nrow(reassign_sum))\n\nreassign_sum$Consequence_withNovel=reorder(reassign_sum$Consequence_withNovel, reassign_sum$severity_withNovel)\n\nreassign_sum$Consequence_GENCODE=reorder(reassign_sum$Consequence_GENCODE, reassign_sum$severity_gencode)\n\nreassign_sum$Consequence_GENCODE=as.numeric(reassign_sum$Consequence_GENCODE)\n\nreassign_sum$Consequence_withNovel=as.numeric(reassign_sum$Consequence_withNovel)\n\nreassign_sum$total=log(reassign_sum$case+reassign_sum$control+1,2) ^ 0.5 / 6.5\n\nggplot() +\n  geom_scatterpie(aes(x=Consequence_GENCODE, y=Consequence_withNovel, group=region,r=total),cols=c(\"case\",\"control\"),data=reassign_sum) +\n  scale_x_continuous(breaks = seq(1,17))+\n  scale_y_continuous(breaks = seq(1,21))+\n  coord_fixed()+\n  theme_bw(base_size=16) +\n  theme(legend.position = \"bottom\",\n        text = element_text(family = \"Arial\"),\n        panel.grid.major = element_line(size=0.5),\n        panel.grid.minor = element_blank(),\n        axis.title = element_text(face = \"bold\"),\n        axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) +\n  ylab(\"Reassigned VEP Consequence\") +\n  xlab(\"Previous VEP Consequence\")\n\n\n\n\nNote that geom_scatterpie requires both x and y aesthetics to be numeric, so I converted the VEP consequences into numeric and make the plot. As a result, the corresponding consequences need to be manually added back to the plot."
  },
  {
    "objectID": "analysis/Figure6_TrackPlots.html",
    "href": "analysis/Figure6_TrackPlots.html",
    "title": "Figure 6 - Track Plots",
    "section": "",
    "text": "Required libraries\n\nlibrary(Gviz)\n\nLoading required package: S4Vectors\n\n\nLoading required package: stats4\n\n\nLoading required package: BiocGenerics\n\n\n\nAttaching package: 'BiocGenerics'\n\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\n\n\nAttaching package: 'S4Vectors'\n\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\n\nLoading required package: IRanges\n\n\nLoading required package: GenomicRanges\n\n\nLoading required package: GenomeInfoDb\n\n\nLoading required package: grid\n\nlibrary(GenomicFeatures)\n\nLoading required package: AnnotationDbi\n\n\nLoading required package: Biobase\n\n\nWelcome to Bioconductor\n\n    Vignettes contain introductory material; view with\n    'browseVignettes()'. To cite Bioconductor, see\n    'citation(\"Biobase\")', and for packages 'citation(\"pkgname\")'.\n\nlibrary(GenomicRanges)\nlibrary(GenomicInteractions)\n\nLoading required package: InteractionSet\n\n\nLoading required package: SummarizedExperiment\n\n\nLoading required package: MatrixGenerics\n\n\nLoading required package: matrixStats\n\n\n\nAttaching package: 'matrixStats'\n\n\nThe following objects are masked from 'package:Biobase':\n\n    anyMissing, rowMedians\n\n\n\nAttaching package: 'MatrixGenerics'\n\n\nThe following objects are masked from 'package:matrixStats':\n\n    colAlls, colAnyNAs, colAnys, colAvgsPerRowSet, colCollapse,\n    colCounts, colCummaxs, colCummins, colCumprods, colCumsums,\n    colDiffs, colIQRDiffs, colIQRs, colLogSumExps, colMadDiffs,\n    colMads, colMaxs, colMeans2, colMedians, colMins, colOrderStats,\n    colProds, colQuantiles, colRanges, colRanks, colSdDiffs, colSds,\n    colSums2, colTabulates, colVarDiffs, colVars, colWeightedMads,\n    colWeightedMeans, colWeightedMedians, colWeightedSds,\n    colWeightedVars, rowAlls, rowAnyNAs, rowAnys, rowAvgsPerColSet,\n    rowCollapse, rowCounts, rowCummaxs, rowCummins, rowCumprods,\n    rowCumsums, rowDiffs, rowIQRDiffs, rowIQRs, rowLogSumExps,\n    rowMadDiffs, rowMads, rowMaxs, rowMeans2, rowMedians, rowMins,\n    rowOrderStats, rowProds, rowQuantiles, rowRanges, rowRanks,\n    rowSdDiffs, rowSds, rowSums2, rowTabulates, rowVarDiffs, rowVars,\n    rowWeightedMads, rowWeightedMeans, rowWeightedMedians,\n    rowWeightedSds, rowWeightedVars\n\n\nThe following object is masked from 'package:Biobase':\n\n    rowMedians\n\n\n\nAttaching package: 'GenomicInteractions'\n\n\nThe following object is masked from 'package:Gviz':\n\n    availableDisplayPars\n\nlibrary(data.table)\n\n\nAttaching package: 'data.table'\n\n\nThe following object is masked from 'package:SummarizedExperiment':\n\n    shift\n\n\nThe following object is masked from 'package:GenomicRanges':\n\n    shift\n\n\nThe following object is masked from 'package:IRanges':\n\n    shift\n\n\nThe following objects are masked from 'package:S4Vectors':\n\n    first, second\n\n\noptions\n\noptions(stringsAsFactors = F)\noptions(Gviz.scheme = \"myScheme\")\noptions(ucscChromosomeNames = F)\n\nglobal themes\n\nscheme <- getScheme()\nscheme$GeneRegionTrack$col <- NULL\naddScheme(scheme, \"myScheme\")\n\nprepare gencode\n\ngencode=\"ref/gencode.v33lift37.annotation.gtf.gz\"\ngencode_txdb=makeTxDbFromGFF(gencode, format=\"auto\")\n\nImport genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... \n\n\nWarning in .get_cds_IDX(mcols0$type, mcols0$phase): The \"phase\" metadata column contains non-NA values for features of type\n  stop_codon. This information was ignored.\n\n\nWarning in .reject_transcripts(bad_tx, because): The following transcripts were dropped because they have incompatible\n  CDS and stop codons: ENST00000422803.2_2, ENST00000618549.1_2,\n  ENST00000619291.4_2, ENST00000621077.1_2, ENST00000621229.1_2,\n  ENST00000631326.2_2\n\n\nOK\n\ngencode_cds=cdsBy(gencode_txdb,by=\"tx\",use.names=T)\ngencode_5utr=fiveUTRsByTranscript(gencode_txdb,use.names=T)\ngencode_3utr=threeUTRsByTranscript(gencode_txdb,use.names=T)\n\nprepare fetalIsoSeq\n\nisoseq=\"data/realBulk_talonOnly.fasta.transdecoder_allCoding_genome_reformat1.gff3.gz\"\nisoseq_txdb=makeTxDbFromGFF(isoseq, format=\"gff3\")\n\nImport genomic features from the file as a GRanges object ... OK\nPrepare the 'metadata' data frame ... OK\nMake the TxDb object ... OK\n\nisoseq_cds=cdsBy(isoseq_txdb,by=\"tx\",use.names=T)\nisoseq_5utr=fiveUTRsByTranscript(isoseq_txdb,use.names=T)\nisoseq_3utr=threeUTRsByTranscript(isoseq_txdb,use.names=T)\n\npeak files\n\ncagefile=fread(\"data/all_cage.txt.gz\",header = F)\npolyafile=fread(\"data/polya.txt.gz\",header = F)\natacfile=fread(\"data/all_atac.txt.gz\",header = F)\n\nORF to plot\n\nknown=c(\"ENST00000389744.8_2\",\"ENST00000553286.5_2\",\"ENST00000452929.6_2\",\"ENST00000348520.10_2\")\nnovel=c(\"TALONT000423578.p1\")\n\nGRange object for known and novel ORFs\n\nknown_transcript=GRanges()\nfor (i in known){\n  if (!i %in% names(gencode_cds)){\n    cat(\"Known transcript is not coding:\",i)\n    next\n  }\n  thistranscript=unlist(gencode_cds[i,])\n  elementMetadata(thistranscript)=NULL\n  elementMetadata(thistranscript)$feature=\"cds\"\n  known_transcript=c(known_transcript,thistranscript)\n  if (i %in% names(gencode_5utr)){\n    thistranscript=unlist(gencode_5utr[i,])\n    elementMetadata(thistranscript)=NULL\n    elementMetadata(thistranscript)$feature=\"utr\"\n    known_transcript=c(known_transcript,thistranscript)\n  }\n  if (i %in% names(gencode_3utr)){\n    thistranscript=unlist(gencode_3utr[i,])\n    elementMetadata(thistranscript)=NULL\n    elementMetadata(thistranscript)$feature=\"utr\"\n    known_transcript=c(known_transcript,thistranscript)\n  }\n}\nnovel_transcript=GRanges()\nfor (i in novel){\n  if (!i %in% names(isoseq_cds)){\n    cat(\"Novel transcript is not coding:\",i)\n    next\n  }\n  thistranscript=unlist(isoseq_cds[i,])\n  elementMetadata(thistranscript)=NULL\n  elementMetadata(thistranscript)$feature=\"cds\"\n  novel_transcript=c(novel_transcript,thistranscript)\n  if (i %in% names(isoseq_5utr)){\n    thistranscript=unlist(isoseq_5utr[i,])\n    elementMetadata(thistranscript)=NULL\n    elementMetadata(thistranscript)$feature=\"utr\"\n    novel_transcript=c(novel_transcript,thistranscript)\n  }\n  if (i %in% names(isoseq_3utr)){\n    thistranscript=unlist(isoseq_3utr[i,])\n    elementMetadata(thistranscript)=NULL\n    elementMetadata(thistranscript)$feature=\"utr\"\n    novel_transcript=c(novel_transcript,thistranscript)\n  }\n}\n\nknown_chr=as.character(known_transcript@seqnames)[1]\nnovel_chr=as.character(novel_transcript@seqnames)[1]\nif (known_chr == novel_chr){\n  chr=known_chr\n}else{\n  stop(\"chr differs between known and novel\")\n}\n\nknown_strd=as.character(known_transcript@strand)[1]\nnovel_strd=as.character(novel_transcript@strand)[1]\nif (known_strd == novel_strd){\n  strd=known_strd\n}else{\n  stop(\"strand differs between known and novel\")\n}\n\nknown ORF track\n\nelementMetadata(known_transcript)$transcript <- names(known_transcript)\nknown_track=GeneRegionTrack(known_transcript,group = \"transcirpt\",name = \"Canonical\")\n\ndisplayPars(known_track)=list(stacking=\"squish\",\n                                     background.panel = \"#ffffb2\",\n                                     fill=\"#006d2c\",\n                                     col=\"#006d2c\",\n                                     lwd=0.3,\n                                     utr=\"gray\",\n                                     #thinBoxFeature=c(\"exon_1\",\"exon_4\",\"exon_35\"),\n                                     col.line=\"black\",\n                                     fontcolor.title=\"black\",\n                                     background.title=\"#d1861d\")\n\nnovel ORF track\n\nelementMetadata(novel_transcript)$transcript=names(novel_transcript)\nisoseq_track=GeneRegionTrack(novel_transcript,group = \"transcript\",name = \"Novel\")\ndisplayPars(isoseq_track)=list(stacking=\"squish\",\n                               background.panel = \"#bcbddc\",\n                               fill=\"#171cc7\",\n                               col=\"#171cc7\",\n                               lwd=0.3,\n                               col.line=\"black\",\n                               utr=\"gray\",\n                               showId = TRUE,\n                               transcriptAnnotation = \"transcript\",\n                               fontcolor.title=\"black\",\n                               background.title=\"#045a8d\")\n\nuniversal tracks\n\naxisTrack <- GenomeAxisTrack()\nideoTrack <- IdeogramTrack(genome = \"hg19\", chromosome = chr)\n\nfind plot range\n\nleftmost=min(c(known_transcript@ranges@start,novel_transcript@ranges@start))\nrightmost=max(c(known_transcript@ranges@start,novel_transcript@ranges@start))\n\ncurrentcagefile=cagefile[cagefile$V1 == chr & cagefile$V4 == strd & cagefile$V2 >= leftmost & cagefile$V3 <= rightmost,]\ncurrentpolyafile=polyafile[polyafile$V1 == chr & polyafile$V4 == strd & polyafile$V2 >= leftmost & polyafile$V3 <= rightmost,]\ncurrentatacfile=atacfile[atacfile$V1 == chr & atacfile$V2 >= leftmost & atacfile$V3 <= rightmost,]\n\ncurrentcagefile=currentcagefile[!duplicated(currentcagefile),]\ncurrentpolyafile=currentpolyafile[!duplicated(currentpolyafile),]\ncurrentatacfile=currentatacfile[!duplicated(currentatacfile),]\n\nCAGE, ployA and ATAC tracks\n\ncage=AnnotationTrack(start=currentcagefile$V2,\n                     end = currentcagefile$V3,\n                     chromosome = currentcagefile$V1,\n                     strand = currentcagefile$V4,\n                     background.panel = \"#99d8c9\",\n                     stacking = \"full\",\n                     fill=\"black\",\n                     name = \"CAGE peaks\",\n                     col=NULL,\n                     col.line=\"#99d8c9\",\n                     background.title=\"#2ca25f\",\n                     fontcolor.title=\"black\")\n\n\n\npolya=AnnotationTrack(start=currentpolyafile$V2,\n                      end = currentpolyafile$V3,\n                      chromosome = currentpolyafile$V1,\n                      strand = currentpolyafile$V4,\n                      background.panel = \"#fee0d2\",\n                      fill=\"black\",\n                      name = \"PolyA sites\",\n                      col=NULL,\n                      col.line=\"#fee0d2\",\n                      background.title=\"#ef6548\",\n                      fontcolor.title=\"black\")\n\n\natac=AnnotationTrack(start=currentatacfile$V2,\n                     end = currentatacfile$V3,\n                     chromosome = currentatacfile$V1,\n                     background.panel = \"#f0bdd7\",\n                     fill=\"black\",\n                     name = \"ATAC\",\n                     col=NULL,\n                     col.line=\"#f0bdd7\",\n                     background.title=\"#e67ab1\",\n                     fontcolor.title=\"black\")\n\ndisplayPars(cage)$stacking=\"dense\"\ndisplayPars(polya)$stacking=\"dense\"\ndisplayPars(atac)$stacking=\"dense\"\n\noverview plot\n\nextra=(rightmost - leftmost)*0.05\n\n\nht <- HighlightTrack(trackList=list(cage,polya,atac,known_track,isoseq_track),start=104129236,end=104129236,chromosome = chr,inBackground=FALSE)\n\n\nplotTracks(list(ideoTrack,axisTrack,ht),\n           chromosome = chr,\n           from = leftmost - extra,\n           to = rightmost - extra)\n\n\n\n\nzoom in plot\n\nht <- HighlightTrack(trackList=list(cage,known_track,isoseq_track),start=104129236,end=104129236,chromosome = chr,inBackground=FALSE,fill=\"red\",size=0.5)\n\nplotTracks(list(ideoTrack,axisTrack,ht),\n           chromosome = chr,\n           from = 104129000,\n           to = 104129300)"
  },
  {
    "objectID": "analysis/FigureS9_cor_plots.html",
    "href": "analysis/FigureS9_cor_plots.html",
    "title": "Figure S9 - Correlation plots",
    "section": "",
    "text": "library(tidyverse)\n\n── Attaching packages ─────────────────────────────────────── tidyverse 1.3.2 ──\n✔ ggplot2 3.3.6      ✔ purrr   0.3.4 \n✔ tibble  3.1.8      ✔ dplyr   1.0.10\n✔ tidyr   1.2.0      ✔ stringr 1.5.0 \n✔ readr   2.1.2      ✔ forcats 0.5.2 \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\n\nlibrary(rtracklayer)\n\nLoading required package: GenomicRanges\nLoading required package: stats4\nLoading required package: BiocGenerics\n\nAttaching package: 'BiocGenerics'\n\nThe following objects are masked from 'package:dplyr':\n\n    combine, intersect, setdiff, union\n\nThe following objects are masked from 'package:stats':\n\n    IQR, mad, sd, var, xtabs\n\nThe following objects are masked from 'package:base':\n\n    anyDuplicated, append, as.data.frame, basename, cbind, colnames,\n    dirname, do.call, duplicated, eval, evalq, Filter, Find, get, grep,\n    grepl, intersect, is.unsorted, lapply, Map, mapply, match, mget,\n    order, paste, pmax, pmax.int, pmin, pmin.int, Position, rank,\n    rbind, Reduce, rownames, sapply, setdiff, sort, table, tapply,\n    union, unique, unsplit, which.max, which.min\n\nLoading required package: S4Vectors\n\nAttaching package: 'S4Vectors'\n\nThe following objects are masked from 'package:dplyr':\n\n    first, rename\n\nThe following object is masked from 'package:tidyr':\n\n    expand\n\nThe following objects are masked from 'package:base':\n\n    expand.grid, I, unname\n\nLoading required package: IRanges\n\nAttaching package: 'IRanges'\n\nThe following objects are masked from 'package:dplyr':\n\n    collapse, desc, slice\n\nThe following object is masked from 'package:purrr':\n\n    reduce\n\nLoading required package: GenomeInfoDb\n\nSys.setenv(\"VROOM_CONNECTION_SIZE\" = 524288) # 512kb - default is 128kb. entire line must fit inside this buffer and we have very long lines"
  },
  {
    "objectID": "analysis/FigureS9_cor_plots.html#gene-expr",
    "href": "analysis/FigureS9_cor_plots.html#gene-expr",
    "title": "Figure S9 - Correlation plots",
    "section": "Gene expr",
    "text": "Gene expr\n\ngene_counts = inner_join(\n  isoseq %>% mutate(\n    cts_isoseq = rowSums(across(where(is.numeric))),\n    .keep = \"unused\"\n  ),\n  short_read %>% mutate(\n    cts_short_read = rowSums(across(where(is.numeric))),\n    .keep = \"unused\"\n  ),\n  by = \"gene_name\"\n) %>%\n  filter(!if_any(starts_with(\"cts_\"), ~.x == 0))\ngene_counts\n\n# A tibble: 13,946 × 3\n   gene_name cts_isoseq cts_short_read\n   <chr>          <dbl>          <dbl>\n 1 A1BG              18              6\n 2 A1BG-AS1           3              6\n 3 A2M               22             57\n 4 AAAS             169            288\n 5 AACS              69            198\n 6 AADAT             79            174\n 7 AAGAB             62             82\n 8 AAK1              64            479\n 9 AAMDC             95            189\n10 AAMP             298            401\n# … with 13,936 more rows\n\n\n\ngene_counts_logRPM = gene_counts %>%\n  mutate(across(\n    starts_with(\"cts_\"),\n    ~log2(1 + (.x / (sum(.x) / 1000000)))\n  ))\ngene_counts_logRPM\n\n# A tibble: 13,946 × 3\n   gene_name cts_isoseq cts_short_read\n   <chr>          <dbl>          <dbl>\n 1 A1BG           2.77           0.916\n 2 A1BG-AS1       0.976          0.916\n 3 A2M            3.02           3.24 \n 4 AAAS           5.79           5.44 \n 5 AACS           4.54           4.92 \n 6 AADAT          4.73           4.74 \n 7 AAGAB          4.39           3.71 \n 8 AAK1           4.43           6.17 \n 9 AAMDC          4.98           4.85 \n10 AAMP           6.60           5.91 \n# … with 13,936 more rows\n\n\n\ncor = cor.test(gene_counts_logRPM$cts_isoseq, gene_counts_logRPM$cts_short_read, method = \"pearson\")\ncor\n\n\n    Pearson's product-moment correlation\n\ndata:  gene_counts_logRPM$cts_isoseq and gene_counts_logRPM$cts_short_read\nt = 242.12, df = 13944, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.8955646 0.9019444\nsample estimates:\n      cor \n0.8988021 \n\n\n\nggplot(\n  gene_counts_logRPM,\n  aes(x = cts_short_read, y = cts_isoseq)\n) +\n  geom_point(alpha = 0.1, color = \"#08519c\") +\n  geom_abline() +\n  annotate(\n    geom = \"text\",\n    label = str_c(\"r = \", round(cor$estimate[[1]], digits = 3), \", p\\uadvalue < 2.2e-16\"),\n    size = base_size_mm,\n    x = 0, y = 16,\n    vjust = \"middle\", hjust = \"left\",\n    parse = F\n  ) +\n  xlim(0, 16) +\n  ylim(0, 16) +\n  labs(\n    x = \"Gene Expr (RNA\\uadSeq)\\nlog2(TPM+1)\",\n    y = \"Gene Expr (Iso\\uadSeq)\\nlog2(TPM+1)\"\n  )\n\n\n\n\n\nggsave(\"output/figures/supplement/FigS9_GeneExprCor.pdf\", width = 5, height = 5)"
  },
  {
    "objectID": "analysis/FigureS9_cor_plots.html#umi",
    "href": "analysis/FigureS9_cor_plots.html#umi",
    "title": "Figure S9 - Correlation plots",
    "section": "UMI",
    "text": "UMI\n\nUMI_counts = inner_join(\n  short_read %>%\n    select(-gene_name) %>%\n    summarize(across(everything(), sum)) %>%\n    pivot_longer(everything(), names_to = \"UMI\", values_to = \"cts_short_read\"),\n  isoseq %>%\n    select(-gene_name) %>%\n    summarize(across(everything(), sum)) %>%\n    pivot_longer(everything(), names_to = \"UMI\", values_to = \"cts_isoseq\"),\n  by = \"UMI\"\n)\nUMI_counts\n\n# A tibble: 4,281 × 3\n   UMI          cts_short_read cts_isoseq\n   <chr>                 <dbl>      <dbl>\n 1 GTATAACATGAA           7756       3123\n 2 CGAATATTCTGT           6478       2604\n 3 TGGAACAGCAAT           5334       2524\n 4 TACCCTGTAAGA           6227       2721\n 5 CTCACTGAATGT           6731       3021\n 6 ACAGCTCAGATA           5432       2452\n 7 AGTCCCCCACTC           6623       3923\n 8 AGGCTCCCATTT           5286       2998\n 9 CCATCTATCAGG           5827       2671\n10 AAGAAGTCCATT           4599       2187\n# … with 4,271 more rows\n\n\n\ncor = cor.test(UMI_counts$cts_isoseq, UMI_counts$cts_short_read, method = \"pearson\")\ncor\n\n\n    Pearson's product-moment correlation\n\ndata:  UMI_counts$cts_isoseq and UMI_counts$cts_short_read\nt = 154.02, df = 4279, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.9157149 0.9248780\nsample estimates:\n      cor \n0.9204228 \n\n\n\nggplot(\n  UMI_counts,\n  aes(x = cts_short_read, y = cts_isoseq)\n) +\n  geom_point(alpha = 0.1) +\n  annotate(\n    geom = \"text\",\n    label = str_c(\"r = \", round(cor$estimate[[1]], digits = 3), \", p\\uadvalue < 2.2e-16\"),\n    size = base_size_mm,\n    x = 0, y = 5500,\n    vjust = \"middle\", hjust = \"left\",\n    parse = F\n  ) +\n  scale_x_continuous(limits = c(0, 8000), breaks = seq(0, 8000, by = 2000)) +\n  scale_y_continuous(limits = c(0, 5500), breaks = seq(0, 5000, by = 1000)) +\n  labs(\n    x = \"Total UMI count in RNA\\uadSeq\",\n    y = \"Total UMI count in Iso\\uadSeq\"\n  )\n\n\n\n\n\nggsave(\"output/figures/supplement/FigS9_UMICountCor.pdf\", width = 5, height = 5)"
  },
  {
    "objectID": "analysis/FigureS9_cor_plots.html#unique-transcripts-per-cell",
    "href": "analysis/FigureS9_cor_plots.html#unique-transcripts-per-cell",
    "title": "Figure S9 - Correlation plots",
    "section": "Unique transcripts per cell",
    "text": "Unique transcripts per cell\nmean = 538.6\n\nisoseq_tx = read_tsv(\"data/AllBarcode_newID_4281.txt.gz\")\n\nRows: 143490 Columns: 4283\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr    (2): gene_name, transcript_id\ndbl (4281): ACGGCATAGTAC, ACTGACTGATCC, ACTGGCACCGAG, AGCTAGCCCATG, AGTTTAGC...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nisoseq_tx\n\n# A tibble: 143,490 × 4,283\n   gene_name  transcri…¹ ACGGC…² ACTGA…³ ACTGG…⁴ AGCTA…⁵ AGTTT…⁶ ATCCG…⁷ CAGAC…⁸\n   <chr>      <chr>        <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 AL669831.3 ENST00000…       0       0       0       0       0       0       0\n 2 MTND1P23   ENST00000…       0       0       0       0       0       0       0\n 3 MTND2P28   ENST00000…       0       0       0       0       0       0       0\n 4 MTCO1P12   ENST00000…       0       0       0       0       1       0       1\n 5 MTCO2P12   ENST00000…       0       0       0       0       0       0       0\n 6 MTATP6P1   ENST00000…       0       0       0       0       0       0       0\n 7 LINC01409  ENST00000…       0       0       0       0       0       0       0\n 8 LINC01409  ENST00000…       0       0       0       0       0       0       0\n 9 LINC01128  ENST00000…       0       0       0       0       0       0       0\n10 LINC01128  ENST00000…       0       0       0       0       0       0       0\n# … with 143,480 more rows, 4,274 more variables: CCCCCACTTAGC <dbl>,\n#   GCCGTAAAACTC <dbl>, GGGCTGCTTATA <dbl>, GGTTGCTGTACG <dbl>,\n#   GTAGCGAGATGC <dbl>, TCAGCTCACCCT <dbl>, TGACATTCTATT <dbl>,\n#   TGGTGAACCAGA <dbl>, TTCTATGCCCGC <dbl>, AAAAATAAATTG <dbl>,\n#   AAAACCGCGCAG <dbl>, AAAAGCAACGTG <dbl>, AAAGGCGCGCGG <dbl>,\n#   AAATCAACTGTA <dbl>, AACCACGTTTAA <dbl>, AACGTACTATCG <dbl>,\n#   AACTGCCTTGTA <dbl>, AAGATCCAAGGC <dbl>, AAGGCAGAATCT <dbl>, …\n\n\n\ntx_per_cell = isoseq_tx %>% select(!(c(gene_name, transcript_id))) %>%\n  summarize(across(everything(), ~sum(.x > 0))) %>%\n  pivot_longer(everything())\ntx_per_cell\n\n# A tibble: 4,281 × 2\n   name         value\n   <chr>        <int>\n 1 ACGGCATAGTAC   198\n 2 ACTGACTGATCC   147\n 3 ACTGGCACCGAG   129\n 4 AGCTAGCCCATG   226\n 5 AGTTTAGCGGTC   930\n 6 ATCCGACCATCA   103\n 7 CAGACGCGACAT   253\n 8 CCCCCACTTAGC   115\n 9 GCCGTAAAACTC    65\n10 GGGCTGCTTATA   201\n# … with 4,271 more rows\n\n\n\nsummary(tx_per_cell)\n\n     name               value       \n Length:4281        Min.   :  10.0  \n Class :character   1st Qu.: 262.0  \n Mode  :character   Median : 452.0  \n                    Mean   : 538.6  \n                    3rd Qu.: 720.0  \n                    Max.   :2785.0"
  },
  {
    "objectID": "analysis/FigureS9_cor_plots.html#donor-v-donor-in-iso-seq",
    "href": "analysis/FigureS9_cor_plots.html#donor-v-donor-in-iso-seq",
    "title": "Figure S9 - Correlation plots",
    "section": "Donor v donor in iso-seq",
    "text": "Donor v donor in iso-seq\n\nFiltered for isoforms present in 3 or more cells\n\ncpgz = rtracklayer::import(\"data/cp_vz_sc_unified_talon.gtf.gz\")\n\n\ndonor_counts_filt = read_tsv(\"data/AllBarcode_newID_byDonor_min3cells.txt.gz\") %>%\n  rename_with(~str_c(\"donor_\", .x), .cols = where(is.numeric))\n\nRows: 84478 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_name, transcript_id\ndbl (3): 370, 371, 372\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndonor_counts_filt\n\n# A tibble: 84,478 × 5\n   gene_name transcript_id   donor_370 donor_371 donor_372\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>\n 1 MTND1P23  ENST00000416931         0         3         0\n 2 MTND2P28  ENST00000457540         3        52        38\n 3 MTCO1P12  ENST00000414273         2         9        10\n 4 LINC00115 ENST00000473798         4         6         9\n 5 NOC2L     ENST00000327044        20        16        28\n 6 NOC2L     ENST00000469563         7         9        14\n 7 KLHL17    ENST00000338591         0         3         1\n 8 HES4      ENST00000428771         7        28        36\n 9 HES4      ENST00000304952        22        42        47\n10 HES4      ENST00000481869        17        35        37\n# … with 84,468 more rows\n\n\n\ndonor_counts_filt = donor_counts_filt %>% filter(transcript_id %in% str_extract(cpgz$transcript_id, \"^[^\\\\.]*\"))\ndonor_counts_filt\n\n# A tibble: 84,224 × 5\n   gene_name transcript_id   donor_370 donor_371 donor_372\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>\n 1 MTND1P23  ENST00000416931         0         3         0\n 2 MTND2P28  ENST00000457540         3        52        38\n 3 MTCO1P12  ENST00000414273         2         9        10\n 4 LINC00115 ENST00000473798         4         6         9\n 5 NOC2L     ENST00000327044        20        16        28\n 6 NOC2L     ENST00000469563         7         9        14\n 7 KLHL17    ENST00000338591         0         3         1\n 8 HES4      ENST00000428771         7        28        36\n 9 HES4      ENST00000304952        22        42        47\n10 HES4      ENST00000481869        17        35        37\n# … with 84,214 more rows\n\n\n\ncpgz.exons = cpgz[cpgz$type == \"exon\" & str_extract(cpgz$transcript_id, \"^[^\\\\.]*\") %in% donor_counts_filt$transcript_id]\ncpgz.exons.by.gene = split(cpgz.exons, cpgz.exons$gene_name)\ndonor_counts_filt = donor_counts_filt %>% left_join(\n  enframe(\n    sum(width(reduce(ranges(cpgz.exons.by.gene)))), # calculate exonic width\n    name = \"gene_name\",\n    value = \"gene_length\"\n  )\n)\n\nJoining, by = \"gene_name\"\n\ndonor_counts_filt\n\n# A tibble: 84,224 × 6\n   gene_name transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 MTND1P23  ENST00000416931         0         3         0         372\n 2 MTND2P28  ENST00000457540         3        52        38        1044\n 3 MTCO1P12  ENST00000414273         2         9        10        1543\n 4 LINC00115 ENST00000473798         4         6         9        1317\n 5 NOC2L     ENST00000327044        20        16        28        4572\n 6 NOC2L     ENST00000469563         7         9        14        4572\n 7 KLHL17    ENST00000338591         0         3         1        2567\n 8 HES4      ENST00000428771         7        28        36        1675\n 9 HES4      ENST00000304952        22        42        47        1675\n10 HES4      ENST00000481869        17        35        37        1675\n# … with 84,214 more rows\n\n\nwrong but matches old plots:\n\ntotal = sum(donor_counts_filt %>% select(starts_with(\"donor_\")))\ndonor_counts_filt_logRPM_wrong = donor_counts_filt %>%\n  mutate(across(\n    starts_with(\"donor_\"),\n    ~log10(1 + (.x / (total / 1000000)))\n  ))\ndonor_counts_filt_logRPM_wrong\n\n# A tibble: 84,224 × 6\n   gene_name transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 MTND1P23  ENST00000416931     0         0.288     0             372\n 2 MTND2P28  ENST00000457540     0.288     1.24      1.11         1044\n 3 MTCO1P12  ENST00000414273     0.212     0.583     0.617        1543\n 4 LINC00115 ENST00000473798     0.354     0.460     0.583        1317\n 5 NOC2L     ENST00000327044     0.863     0.780     0.991        4572\n 6 NOC2L     ENST00000469563     0.505     0.583     0.732        4572\n 7 KLHL17    ENST00000338591     0         0.288     0.119        2567\n 8 HES4      ENST00000428771     0.505     0.991     1.09         1675\n 9 HES4      ENST00000304952     0.898     1.15      1.20         1675\n10 HES4      ENST00000481869     0.802     1.08      1.10         1675\n# … with 84,214 more rows\n\n\ncorrectly calculate logRPM:\n\ndonor_counts_filt_logRPM = donor_counts_filt %>%\n  mutate(across(\n    starts_with(\"donor_\"),\n    ~log10(1 + (.x / (sum(.x) / 1000000)))\n  ))\ndonor_counts_filt_logRPM\n\n# A tibble: 84,224 × 6\n   gene_name transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 MTND1P23  ENST00000416931     0         0.565     0             372\n 2 MTND2P28  ENST00000457540     0.816     1.68      1.42         1044\n 3 MTCO1P12  ENST00000414273     0.672     0.955     0.880        1543\n 4 LINC00115 ENST00000473798     0.924     0.803     0.841        1317\n 5 NOC2L     ENST00000327044     1.58      1.18      1.29         4572\n 6 NOC2L     ENST00000469563     1.14      0.955     1.01         4572\n 7 KLHL17    ENST00000338591     0         0.565     0.220        2567\n 8 HES4      ENST00000428771     1.14      1.41      1.39         1675\n 9 HES4      ENST00000304952     1.62      1.58      1.50         1675\n10 HES4      ENST00000481869     1.51      1.51      1.40         1675\n# … with 84,214 more rows\n\n\ncorrectly calculate logTPM:\n\ndonor_counts_filt_logTPM = donor_counts_filt %>%\n  mutate(across(\n    starts_with(\"donor_\"),\n    ~log10(1 + ((.x / (gene_length / 1000)) / (sum(.x) / 1000000)))\n  ))\ndonor_counts_filt_logTPM\n\n# A tibble: 84,224 × 6\n   gene_name transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 MTND1P23  ENST00000416931     0         0.913    0              372\n 2 MTND2P28  ENST00000457540     0.800     1.66     1.40          1044\n 3 MTCO1P12  ENST00000414273     0.531     0.792    0.722         1543\n 4 LINC00115 ENST00000473798     0.820     0.704    0.740         1317\n 5 NOC2L     ENST00000327044     0.958     0.615    0.702         4572\n 6 NOC2L     ENST00000469563     0.583     0.440    0.480         4572\n 7 KLHL17    ENST00000338591     0         0.310    0.0992        2567\n 8 HES4      ENST00000428771     0.941     1.20     1.18          1675\n 9 HES4      ENST00000304952     1.40      1.37     1.29          1675\n10 HES4      ENST00000481869     1.30      1.29     1.19          1675\n# … with 84,214 more rows\n\n\n\n\nDigression - Gene expression is correlated to gene length\n\nweighted.mean(donor_counts_filt$gene_length, donor_counts_filt$donor_370)\n\n[1] 6988.761\n\nweighted.mean(donor_counts_filt$gene_length, donor_counts_filt$donor_371)\n\n[1] 6925.062\n\nweighted.mean(donor_counts_filt$gene_length, donor_counts_filt$donor_372)\n\n[1] 7101.579\n\n\n\ncpgz.exons = cpgz[cpgz$type == \"exon\" & str_extract(cpgz$transcript_id, \"^[^\\\\.]*\") %in% donor_counts_filt$transcript_id]\ncpgz.exons.by.gene = split(cpgz.exons, cpgz.exons$gene_name)\ndonor_counts_filt = donor_counts_filt %>% left_join(\n  enframe(\n    sum(width(reduce(ranges(cpgz.exons.by.gene)))), # calculate exonic width\n    name = \"gene_name\",\n    value = \"gene_length\"\n  )\n)\n\nJoining, by = c(\"gene_name\", \"gene_length\")\n\ndonor_counts_filt\n\n# A tibble: 84,224 × 6\n   gene_name transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>     <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 MTND1P23  ENST00000416931         0         3         0         372\n 2 MTND2P28  ENST00000457540         3        52        38        1044\n 3 MTCO1P12  ENST00000414273         2         9        10        1543\n 4 LINC00115 ENST00000473798         4         6         9        1317\n 5 NOC2L     ENST00000327044        20        16        28        4572\n 6 NOC2L     ENST00000469563         7         9        14        4572\n 7 KLHL17    ENST00000338591         0         3         1        2567\n 8 HES4      ENST00000428771         7        28        36        1675\n 9 HES4      ENST00000304952        22        42        47        1675\n10 HES4      ENST00000481869        17        35        37        1675\n# … with 84,214 more rows\n\n\n\ndonor_gene_counts = donor_counts_filt %>% group_by(gene_name) %>%\n  summarize(across(starts_with(\"donor_\"), sum), gene_length = dplyr::first(gene_length)) %>%\n  mutate(\n    gene_length = gene_length / 1000,\n    across(starts_with(\"donor_\"), ~.x / (sum(.x) / 1000000))\n  ) %>%\n  mutate(\n    across(where(is.numeric), ~log10(.x + 1))\n  ) #%>%\n#  mutate(across(starts_with(\"donor_\"), ~na_if(.x, 0)))\ndonor_gene_counts\n\n# A tibble: 14,177 × 5\n   gene_name donor_370 donor_371 donor_372 gene_length\n   <chr>         <dbl>     <dbl>     <dbl>       <dbl>\n 1 A1BG          0.816     0.565     0.950       0.496\n 2 A2M           0.672     0.910     0.695       0.488\n 3 AAAS          1.71      1.81      1.65        0.717\n 4 AACS          1.40      1.44      1.19        0.995\n 5 AADAT         1.25      1.41      1.36        1.01 \n 6 AAGAB         1.14      1.44      1.17        0.972\n 7 AAK1          1.40      1.25      1.29        0.939\n 8 AAMDC         1.58      1.44      1.42        0.322\n 9 AAMP          1.82      1.93      2.00        0.646\n10 AAR2          1.49      1.18      1.34        0.568\n# … with 14,167 more rows\n\n\n\nggplot(\n  donor_gene_counts %>%\n    pivot_longer(cols = starts_with(\"donor_\"), names_to = \"donor\", values_to = \"count\"),\n  aes(x = count, y = gene_length)\n) +\n#  geom_point() +\n  geom_point(alpha = 0.05) +\n#  geom_rug(alpha = 0.01) +\n#  geom_hex(bins = 20) +\n  xlim(0, 5) +\n  ylim(0, 3) +\n  abline() +\n  labs(\n    x = \"Gene expression (logRPM)\",\n    y = \"Gene length (logKB)\"\n  ) +\n  facet_wrap(vars(donor))\n\n\nggsave(\"output/figures/supplement/FigS9_GeneLengthCor.pdf\", width = 14, height = 7)\n\n\ncor.test(donor_gene_counts$donor_370, donor_gene_counts$gene_length, method = \"pearson\")\n\n\n    Pearson's product-moment correlation\n\ndata:  donor_gene_counts$donor_370 and donor_gene_counts$gene_length\nt = 61.234, df = 14175, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.4442555 0.4702924\nsample estimates:\n     cor \n0.457372 \n\ncor.test(donor_gene_counts$donor_371, donor_gene_counts$gene_length, method = \"pearson\")\n\n\n    Pearson's product-moment correlation\n\ndata:  donor_gene_counts$donor_371 and donor_gene_counts$gene_length\nt = 61.173, df = 14175, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.4438894 0.4699372\nsample estimates:\n      cor \n0.4570113 \n\ncor.test(donor_gene_counts$donor_372, donor_gene_counts$gene_length, method = \"pearson\")\n\n\n    Pearson's product-moment correlation\n\ndata:  donor_gene_counts$donor_372 and donor_gene_counts$gene_length\nt = 64.128, df = 14175, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.4613527 0.4868732\nsample estimates:\n      cor \n0.4742125 \n\n\n\n\nUnfiltered\nWe will use this but instead filter out isoforms with 0 counts in either donor from each comparison.\n\ndonor_counts = read_tsv(\"data/AllBarcode_newID_byDonor.txt.gz\") %>%\n  rename_with(~str_c(\"donor_\", .x), .cols = where(is.numeric))\n\nRows: 143490 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \"\\t\"\nchr (2): gene_name, transcript_id\ndbl (3): 370, 371, 372\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\ndonor_counts\n\n# A tibble: 143,490 × 5\n   gene_name  transcript_id   donor_370 donor_371 donor_372\n   <chr>      <chr>               <dbl>     <dbl>     <dbl>\n 1 AL669831.3 ENST00000447954         0         1         1\n 2 MTND1P23   ENST00000416931         0         3         0\n 3 MTND2P28   ENST00000457540         3        52        38\n 4 MTCO1P12   ENST00000414273         2         9        10\n 5 MTCO2P12   ENST00000427426         0         0         1\n 6 MTATP6P1   ENST00000514057         0         0         0\n 7 LINC01409  ENST00000665867         0         0         1\n 8 LINC01409  ENST00000591702         0         0         1\n 9 LINC01128  ENST00000445118         1         0         1\n10 LINC01128  ENST00000669922         0         1         0\n# … with 143,480 more rows\n\n\n\ndonor_counts = donor_counts %>% filter(transcript_id %in% str_extract(cpgz$transcript_id, \"^[^\\\\.]*\"))\ndonor_counts\n\n# A tibble: 142,938 × 5\n   gene_name  transcript_id   donor_370 donor_371 donor_372\n   <chr>      <chr>               <dbl>     <dbl>     <dbl>\n 1 AL669831.3 ENST00000447954         0         1         1\n 2 MTND1P23   ENST00000416931         0         3         0\n 3 MTND2P28   ENST00000457540         3        52        38\n 4 MTCO1P12   ENST00000414273         2         9        10\n 5 MTCO2P12   ENST00000427426         0         0         1\n 6 MTATP6P1   ENST00000514057         0         0         0\n 7 LINC01409  ENST00000665867         0         0         1\n 8 LINC01409  ENST00000591702         0         0         1\n 9 LINC01128  ENST00000445118         1         0         1\n10 LINC01128  ENST00000669922         0         1         0\n# … with 142,928 more rows\n\n\n\ncpgz.exons = cpgz[cpgz$type == \"exon\" & str_extract(cpgz$transcript_id, \"^[^\\\\.]*\") %in% donor_counts$transcript_id]\ncpgz.exons.by.gene = split(cpgz.exons, cpgz.exons$gene_name)\ndonor_counts = donor_counts %>% left_join(\n  enframe(\n    sum(width(reduce(ranges(cpgz.exons.by.gene)))), # calculate exonic width\n    name = \"gene_name\",\n    value = \"gene_length\"\n  )\n)\n\nJoining, by = \"gene_name\"\n\ndonor_counts\n\n# A tibble: 142,938 × 6\n   gene_name  transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>      <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 AL669831.3 ENST00000447954         0         1         1         355\n 2 MTND1P23   ENST00000416931         0         3         0         372\n 3 MTND2P28   ENST00000457540         3        52        38        1044\n 4 MTCO1P12   ENST00000414273         2         9        10        1543\n 5 MTCO2P12   ENST00000427426         0         0         1         682\n 6 MTATP6P1   ENST00000514057         0         0         0         681\n 7 LINC01409  ENST00000665867         0         0         1        2157\n 8 LINC01409  ENST00000591702         0         0         1        2157\n 9 LINC01128  ENST00000445118         1         0         1       13584\n10 LINC01128  ENST00000669922         0         1         0       13584\n# … with 142,928 more rows\n\n\ncorrectly calculate logRPM:\n\ndonor_counts_logRPM = donor_counts %>%\n  mutate(across(\n    starts_with(\"donor_\"),\n    ~log2(1 + (.x / (sum(.x) / 1000000)))\n  ))\ndonor_counts_logRPM\n\n# A tibble: 142,938 × 6\n   gene_name  transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>      <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 AL669831.3 ENST00000447954      0        0.901     0.713         355\n 2 MTND1P23   ENST00000416931      0        1.85      0             372\n 3 MTND2P28   ENST00000457540      2.67     5.53      4.66         1044\n 4 MTCO1P12   ENST00000414273      2.20     3.14      2.88         1543\n 5 MTCO2P12   ENST00000427426      0        0         0.713         682\n 6 MTATP6P1   ENST00000514057      0        0         0             681\n 7 LINC01409  ENST00000665867      0        0         0.713        2157\n 8 LINC01409  ENST00000591702      0        0         0.713        2157\n 9 LINC01128  ENST00000445118      1.48     0         0.713       13584\n10 LINC01128  ENST00000669922      0        0.901     0           13584\n# … with 142,928 more rows\n\n\ncorrectly calculate logTPM:\n\ndonor_counts_logTPM = donor_counts %>%\n  mutate(across(\n    starts_with(\"donor_\"),\n    ~log10(1 + ((.x / (gene_length / 1000)) / (sum(.x) / 1000000)))\n  ))\ndonor_counts_logTPM\n\n# A tibble: 142,938 × 6\n   gene_name  transcript_id   donor_370 donor_371 donor_372 gene_length\n   <chr>      <chr>               <dbl>     <dbl>     <dbl>       <int>\n 1 AL669831.3 ENST00000447954    0         0.537     0.447          355\n 2 MTND1P23   ENST00000416931    0         0.903     0              372\n 3 MTND2P28   ENST00000457540    0.789     1.65      1.38          1044\n 4 MTCO1P12   ENST00000414273    0.521     0.782     0.711         1543\n 5 MTCO2P12   ENST00000427426    0         0         0.287          682\n 6 MTATP6P1   ENST00000514057    0         0         0              681\n 7 LINC01409  ENST00000665867    0         0         0.113         2157\n 8 LINC01409  ENST00000591702    0         0         0.113         2157\n 9 LINC01128  ENST00000445118    0.0538    0         0.0200       13584\n10 LINC01128  ENST00000669922    0         0.0269    0            13584\n# … with 142,928 more rows\n\n\n\n\nFinal plots\n\nDonor 370 + Donor 371\n\ncor = cor.test(na_if(donor_counts_logRPM$donor_370, 0), na_if(donor_counts_logRPM$donor_371, 0), method = \"pearson\")\ncor\n\n\n    Pearson's product-moment correlation\n\ndata:  na_if(donor_counts_logRPM$donor_370, 0) and na_if(donor_counts_logRPM$donor_371, 0)\nt = 397.42, df = 57300, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.8544174 0.8587770\nsample estimates:\n      cor \n0.8566125 \n\n\n\nggplot(\n  donor_counts_logRPM %>% mutate(across(starts_with(\"donor_\"), na_if, 0)),\n  aes(x = donor_370, y = donor_371)\n) +\n  geom_point(alpha = 0.1, color = \"#08519c\") +\n  geom_abline() +\n  annotate(\n    geom = \"text\",\n    label = str_c(\"r = \", round(cor$estimate[[1]], digits = 3), \", p\\uadvalue < 2.2e-16\"),\n    size = base_size_mm,\n    x = 0, y = 16,\n    vjust = \"middle\", hjust = \"left\",\n    parse = F\n  ) +\n  xlim(0, 16) +\n  ylim(0, 16) +\n  labs(\n    x = \"Iso Expr (Donor 370)\\nlog2(TPM+1)\",\n    y = \"Iso Expr (Donor 371)\\nlog2(TPM+1)\"\n  )\n\nWarning: Removed 85636 rows containing missing values (geom_point).\n\n\n\n\n\n\nggsave(\"output/figures/supplement/FigS9_DonorCor_RPMno0_370_371.pdf\", width = 5, height = 5)\n\nWarning: Removed 85636 rows containing missing values (geom_point).\n\n\n\n\nDonor 370 + Donor 372\n\ncor = cor.test(na_if(donor_counts_logRPM$donor_370, 0), na_if(donor_counts_logRPM$donor_372, 0), method = \"pearson\")\ncor\n\n\n    Pearson's product-moment correlation\n\ndata:  na_if(donor_counts_logRPM$donor_370, 0) and na_if(donor_counts_logRPM$donor_372, 0)\nt = 418.37, df = 60683, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.8596590 0.8637556\nsample estimates:\n      cor \n0.8617213 \n\n\n\nggplot(\n  donor_counts_logRPM %>% mutate(across(starts_with(\"donor_\"), na_if, 0)),\n  aes(x = donor_370, y = donor_372)\n) +\n  geom_point(alpha = 0.1, color = \"#08519c\") +\n  geom_abline() +\n  annotate(\n    geom = \"text\",\n    label = str_c(\"r = \", round(cor$estimate[[1]], digits = 3), \", p\\uadvalue < 2.2e-16\"),\n    size = base_size_mm,\n    x = 0, y = 16,\n    vjust = \"middle\", hjust = \"left\",\n    parse = F\n  ) +\n  xlim(0, 16) +\n  ylim(0, 16) +\n  labs(\n    x = \"Iso Expr (Donor 370)\\nlog2(TPM+1)\",\n    y = \"Iso Expr (Donor 372)\\nlog2(TPM+1)\"\n  )\n\nWarning: Removed 82253 rows containing missing values (geom_point).\n\n\n\n\n\n\nggsave(\"output/figures/supplement/FigS9_DonorCor_RPMno0_370_372.pdf\", width = 5, height = 5)\n\nWarning: Removed 82253 rows containing missing values (geom_point).\n\n\n\n\nDonor 371 + Donor 372\n\ncor = cor.test(na_if(donor_counts_logRPM$donor_371, 0), na_if(donor_counts_logRPM$donor_372, 0), method = \"pearson\")\ncor\n\n\n    Pearson's product-moment correlation\n\ndata:  na_if(donor_counts_logRPM$donor_371, 0) and na_if(donor_counts_logRPM$donor_372, 0)\nt = 538.97, df = 80515, p-value < 2.2e-16\nalternative hypothesis: true correlation is not equal to 0\n95 percent confidence interval:\n 0.8833523 0.8863504\nsample estimates:\n      cor \n0.8848605 \n\n\n\nggplot(\n  donor_counts_logRPM %>% mutate(across(starts_with(\"donor_\"), na_if, 0)),\n  aes(x = donor_371, y = donor_372)\n) +\n  geom_point(alpha = 0.1, color = \"#08519c\") +\n  geom_abline() +\n  annotate(\n    geom = \"text\",\n    label = str_c(\"r = \", round(cor$estimate[[1]], digits = 3), \", p\\uadvalue < 2.2e-16\"),\n    size = base_size_mm,\n    x = 0, y = 16,\n    vjust = \"middle\", hjust = \"left\",\n    parse = F\n  ) +\n  xlim(0, 16) +\n  ylim(0, 16) +\n  labs(\n    x = \"Iso Expr (Donor 371)\\nlog2(TPM+1)\",\n    y = \"Iso Expr (Donor 372)\\nlog2(TPM+1)\"\n  )\n\nWarning: Removed 62421 rows containing missing values (geom_point).\n\n\n\n\n\n\nggsave(\"output/figures/supplement/FigS9_DonorCor_RPMno0_371_372.pdf\", width = 5, height = 5)\n\nWarning: Removed 62421 rows containing missing values (geom_point)."
  }
]